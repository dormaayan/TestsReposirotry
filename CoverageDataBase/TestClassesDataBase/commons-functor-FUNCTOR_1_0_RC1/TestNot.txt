/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestNot extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new Not(Constant.TRUE);
  }
  @Test public void testTest() throws Exception {
    Predicate truePred=new Not(Constant.FALSE);
    assertTrue(truePred.test());
  }
  @Test public void testEquals() throws Exception {
    Not p=new Not(Constant.TRUE);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new Not(Constant.TRUE));
    assertObjectsAreEqual(p,Not.not(Constant.TRUE));
    assertObjectsAreNotEqual(p,new Not(Constant.FALSE));
    assertObjectsAreNotEqual(p,Constant.TRUE);
  }
  @Test public void testNotNull() throws Exception {
    assertNull(Not.not(null));
  }
  @Test public void testNotNotNull() throws Exception {
    assertNotNull(Not.not(Constant.TRUE));
  }
}
