/** 
 * @version $Revision$ $Date$
 * @author Matt Benson
 */
public class TestFullyBoundPredicate extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new FullyBoundPredicate(Constant.TRUE,null,"xyzzy");
  }
  @Test public void testTest() throws Exception {
    Predicate p=new FullyBoundPredicate(new BinaryFunctionBinaryPredicate<Object,Boolean>(RightIdentity.<Object,Boolean>function()),"foo",Boolean.TRUE);
    assertEquals(true,p.test());
  }
  @Test public void testEquals() throws Exception {
    Predicate p=new FullyBoundPredicate(Constant.TRUE,"xyzzy",null);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new FullyBoundPredicate(Constant.TRUE,"xyzzy",null));
    assertObjectsAreNotEqual(p,Constant.TRUE);
    assertObjectsAreNotEqual(p,new FullyBoundPredicate(Constant.FALSE,"xyzzy",null));
    assertObjectsAreNotEqual(p,new FullyBoundPredicate(Constant.TRUE,"foo",null));
    assertObjectsAreNotEqual(p,new FullyBoundPredicate(Constant.TRUE,null,"xyzzy"));
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(FullyBoundPredicate.bind(null,"xyzzy",null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(FullyBoundPredicate.bind(Constant.FALSE,"xyzzy","foobar"));
    assertNotNull(FullyBoundPredicate.bind(Constant.FALSE,null,null));
  }
}
