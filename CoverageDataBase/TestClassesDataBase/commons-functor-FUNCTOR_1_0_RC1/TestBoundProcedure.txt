/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestBoundProcedure extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new BoundProcedure(NoOp.INSTANCE,"xyzzy");
  }
  @Test public void testRun() throws Exception {
    Procedure p=new BoundProcedure(new UnaryFunctionUnaryProcedure<Object>(Identity.INSTANCE),Boolean.TRUE);
    p.run();
  }
  @Test public void testEquals() throws Exception {
    Procedure f=new BoundProcedure(NoOp.INSTANCE,"xyzzy");
    assertEquals(f,f);
    assertObjectsAreEqual(f,new BoundProcedure(NoOp.INSTANCE,"xyzzy"));
    assertObjectsAreNotEqual(f,NoOp.INSTANCE);
    assertObjectsAreNotEqual(f,new BoundProcedure(NoOp.INSTANCE,"foo"));
    assertObjectsAreNotEqual(f,new BoundProcedure(new UnaryFunctionUnaryProcedure<Object>(Identity.INSTANCE),"xyzzy"));
    assertObjectsAreNotEqual(f,new BoundProcedure(NoOp.INSTANCE,null));
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(BoundProcedure.bind(null,"xyzzy"));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(BoundProcedure.bind(new NoOp(),"xyzzy"));
    assertNotNull(BoundProcedure.bind(new NoOp(),null));
  }
}
