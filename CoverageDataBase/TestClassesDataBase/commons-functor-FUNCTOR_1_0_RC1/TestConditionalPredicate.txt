/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestConditionalPredicate extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new ConditionalPredicate(Constant.TRUE,Constant.FALSE,Constant.TRUE);
  }
  @Test public void testTest() throws Exception {
{
      ConditionalPredicate p=new ConditionalPredicate(Constant.TRUE,Constant.TRUE,Constant.FALSE);
      assertTrue(p.test());
    }
{
      ConditionalPredicate p=new ConditionalPredicate(Constant.FALSE,Constant.TRUE,Constant.FALSE);
      assertTrue(!p.test());
    }
  }
  @Test public void testEquals() throws Exception {
    ConditionalPredicate p=new ConditionalPredicate(Constant.TRUE,Constant.TRUE,Constant.FALSE);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new ConditionalPredicate(Constant.TRUE,Constant.TRUE,Constant.FALSE));
    assertObjectsAreNotEqual(p,new ConditionalPredicate(Constant.TRUE,Constant.FALSE,Constant.TRUE));
    assertObjectsAreNotEqual(p,new ConditionalPredicate(Constant.TRUE,Constant.TRUE,Constant.TRUE));
  }
}
