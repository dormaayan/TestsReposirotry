/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestIsNotNull extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new IsNotNull<Object>();
  }
  @Test public void testTest() throws Exception {
    UnaryPredicate<Object> p=new IsNotNull<Object>();
    assertTrue(!p.test(null));
    assertTrue(p.test("foo"));
    assertTrue(p.test(new Integer(3)));
  }
  @Test public void testEquals() throws Exception {
    UnaryPredicate<Object> p=new IsNotNull<Object>();
    assertEquals(p,p);
    assertObjectsAreEqual(p,new IsNotNull<Object>());
    assertObjectsAreEqual(p,IsNotNull.instance());
    assertObjectsAreNotEqual(p,Constant.TRUE);
  }
  @Test public void testConstant() throws Exception {
    assertEquals(IsNotNull.instance(),IsNotNull.instance());
  }
}
