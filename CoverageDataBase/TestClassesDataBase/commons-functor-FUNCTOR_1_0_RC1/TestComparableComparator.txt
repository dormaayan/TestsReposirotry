/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestComparableComparator {
  @Test public void testCompareIntegers(){
    assertTrue(ComparableComparator.instance().compare(new Integer(Integer.MIN_VALUE),new Integer(Integer.MIN_VALUE)) == 0);
    assertTrue(ComparableComparator.instance().compare(new Integer(-1),new Integer(-1)) == 0);
    assertTrue(ComparableComparator.instance().compare(new Integer(0),new Integer(0)) == 0);
    assertTrue(ComparableComparator.instance().compare(new Integer(Integer.MAX_VALUE),new Integer(Integer.MAX_VALUE)) == 0);
    assertTrue(ComparableComparator.instance().compare(new Integer(1),new Integer(1)) == 0);
  }
  @Test public void testCompareIncomparable(){
    try {
      ComparableComparator.instance().compare(new Object(),new Integer(2));
      fail("Expected ClassCastException");
    }
 catch (    ClassCastException e) {
    }
  }
  @Test public void testCompareNull(){
    try {
      ComparableComparator.instance().compare(null,new Integer(2));
      fail("Expected NullPointerException");
    }
 catch (    NullPointerException e) {
    }
  }
  @Test public void testEqualsAndHashCode(){
    assertEquals(new ComparableComparator(),new ComparableComparator());
    assertEquals(new ComparableComparator().hashCode(),new ComparableComparator().hashCode());
    assertTrue(!new ComparableComparator().equals(null));
  }
}
