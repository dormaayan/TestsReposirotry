/** 
 * @version $Revision$ $Date$
 * @author Matt Benson
 */
public class TestFullyBoundProcedure extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new FullyBoundProcedure(NoOp.INSTANCE,"xyzzy",null);
  }
  @Test public void testRun() throws Exception {
    Procedure p=new FullyBoundProcedure(new BinaryFunctionBinaryProcedure<Object,Object>(RightIdentity.FUNCTION),"foo",null);
    p.run();
  }
  @Test public void testEquals() throws Exception {
    Procedure f=new FullyBoundProcedure(NoOp.INSTANCE,"xyzzy",null);
    assertEquals(f,f);
    assertObjectsAreEqual(f,new FullyBoundProcedure(NoOp.INSTANCE,"xyzzy",null));
    assertObjectsAreNotEqual(f,new NoOp());
    assertObjectsAreNotEqual(f,new FullyBoundProcedure(new BinaryFunctionBinaryProcedure<Object,Object>(RightIdentity.FUNCTION),"xyzzy",null));
    assertObjectsAreNotEqual(f,new FullyBoundProcedure(NoOp.INSTANCE,"foo",null));
    assertObjectsAreNotEqual(f,new FullyBoundProcedure(NoOp.INSTANCE,null,null));
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(FullyBoundProcedure.bind(null,"xyzzy",null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(FullyBoundProcedure.bind(new NoOp(),"xyzzy","foobar"));
    assertNotNull(FullyBoundProcedure.bind(new NoOp(),null,null));
  }
}
