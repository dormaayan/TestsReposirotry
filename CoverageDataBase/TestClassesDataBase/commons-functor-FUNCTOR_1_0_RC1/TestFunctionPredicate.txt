/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestFunctionPredicate extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new FunctionPredicate(Constant.TRUE);
  }
  @Test public void testTestWhenTrue() throws Exception {
    Predicate p=new FunctionPredicate(Constant.TRUE);
    assertTrue(p.test());
  }
  @Test public void testTestWhenFalse() throws Exception {
    Predicate p=new FunctionPredicate(Constant.FALSE);
    assertTrue(!p.test());
  }
  @Test public void testEquals() throws Exception {
    Predicate p=new FunctionPredicate(Constant.TRUE);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new FunctionPredicate(Constant.TRUE));
    assertObjectsAreNotEqual(p,Constant.TRUE);
    assertObjectsAreNotEqual(p,new FunctionPredicate(Constant.FALSE));
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(FunctionPredicate.adapt(null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(FunctionPredicate.adapt(Constant.TRUE));
  }
}
