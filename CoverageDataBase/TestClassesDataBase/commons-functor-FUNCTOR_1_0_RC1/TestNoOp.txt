/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestNoOp extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new NoOp();
  }
  @Test public void testRun() throws Exception {
    NoOp p=new NoOp();
    p.run();
    p.run(null);
    p.run(null,null);
    p.run("foo");
    p.run("foo",null);
    p.run(null,"bar");
    p.run("foo","bar");
  }
  @Test public void testEquals() throws Exception {
    NoOp p=new NoOp();
    assertEquals(p,p);
    assertObjectsAreEqual(p,new NoOp());
    assertObjectsAreEqual(p,NoOp.instance());
    assertObjectsAreNotEqual(p,new Procedure(){
      public void run(){
      }
    }
);
    assertObjectsAreNotEqual(p,new UnaryProcedure<Object>(){
      public void run(      Object a){
      }
    }
);
    assertObjectsAreNotEqual(p,new BinaryProcedure<Object,Object>(){
      public void run(      Object a,      Object b){
      }
    }
);
  }
  @Test public void testConstant() throws Exception {
    assertEquals(NoOp.instance(),NoOp.instance());
    assertSame(NoOp.instance(),NoOp.instance());
  }
}
