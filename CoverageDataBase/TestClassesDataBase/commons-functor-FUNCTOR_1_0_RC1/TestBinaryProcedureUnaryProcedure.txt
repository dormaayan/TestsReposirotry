/** 
 * @version $Revision$ $Date$
 * @author Matt Benson
 */
public class TestBinaryProcedureUnaryProcedure extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new BinaryProcedureUnaryProcedure<Object>(NoOp.INSTANCE);
  }
  @Test public void testRun() throws Exception {
    UnaryProcedure<Object> p=new BinaryProcedureUnaryProcedure<Object>(NoOp.INSTANCE);
    p.run(null);
  }
  @Test public void testEquals() throws Exception {
    UnaryProcedure<Object> p=new BinaryProcedureUnaryProcedure<Object>(NoOp.INSTANCE);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new BinaryProcedureUnaryProcedure<Object>(NoOp.INSTANCE));
    assertObjectsAreNotEqual(p,NoOp.INSTANCE);
    assertObjectsAreNotEqual(p,new BinaryProcedureUnaryProcedure<Object>(IgnoreLeftProcedure.adapt(NoOp.INSTANCE)));
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(BinaryProcedureUnaryProcedure.adapt(null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(BinaryProcedureUnaryProcedure.adapt(NoOp.INSTANCE));
  }
}
