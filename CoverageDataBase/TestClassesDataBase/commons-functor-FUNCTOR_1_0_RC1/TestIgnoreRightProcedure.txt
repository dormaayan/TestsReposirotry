/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestIgnoreRightProcedure extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new IgnoreRightProcedure<Object,Object>(NoOp.INSTANCE);
  }
  @Test public void testEvaluate() throws Exception {
    BinaryProcedure<Object,Object> p=new IgnoreRightProcedure<Object,Object>(new UnaryFunctionUnaryProcedure<Object>(Identity.INSTANCE));
    p.run(Boolean.TRUE,null);
  }
  @Test public void testEquals() throws Exception {
    BinaryProcedure<Object,Object> p=new IgnoreRightProcedure<Object,Object>(NoOp.INSTANCE);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new IgnoreRightProcedure<Object,Object>(NoOp.INSTANCE));
    assertObjectsAreNotEqual(p,NoOp.INSTANCE);
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(IgnoreRightProcedure.adapt(null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(IgnoreRightProcedure.adapt(NoOp.INSTANCE));
  }
}
