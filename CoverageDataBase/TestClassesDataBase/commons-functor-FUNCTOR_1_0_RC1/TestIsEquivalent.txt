/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestIsEquivalent extends BaseComparisonPredicateTest {
  protected Object makeFunctor(){
    return IsEquivalent.INSTANCE;
  }
  @Test public void testTest() throws Exception {
    IsEquivalent<Integer> p=IsEquivalent.<Integer>instance();
    assertTrue(!p.test(new Integer(2),new Integer(4)));
    assertTrue(!p.test(new Integer(3),new Integer(4)));
    assertTrue(p.test(new Integer(4),new Integer(4)));
    assertTrue(!p.test(new Integer(5),new Integer(4)));
    assertTrue(!p.test(new Integer(6),new Integer(4)));
  }
  @Test public void testInstance(){
    assertTrue(IsEquivalent.instance("Xyzzy").test("Xyzzy"));
    assertTrue(!IsEquivalent.instance("Xyzzy").test("z"));
  }
  @Test @SuppressWarnings("unchecked") public void testEquals() throws Exception {
    IsEquivalent<Comparable<?>> p=IsEquivalent.INSTANCE;
    assertEquals(p,p);
    assertObjectsAreEqual(p,IsEquivalent.instance());
    assertObjectsAreEqual(p,new IsEquivalent<Comparable<?>>(new ComparableComparator()));
    assertObjectsAreNotEqual(p,Constant.FALSE);
  }
}
