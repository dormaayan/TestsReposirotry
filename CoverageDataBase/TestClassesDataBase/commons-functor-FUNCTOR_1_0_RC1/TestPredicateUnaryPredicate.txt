/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestPredicateUnaryPredicate extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new PredicateUnaryPredicate<Object>(Constant.TRUE);
  }
  @Test public void testEvaluate() throws Exception {
    UnaryPredicate<Object> p=new PredicateUnaryPredicate<Object>(Constant.TRUE);
    assertTrue(p.test(null));
  }
  @Test public void testEquals() throws Exception {
    UnaryPredicate<Object> p=new PredicateUnaryPredicate<Object>(Constant.TRUE);
    assertEquals(p,p);
    assertObjectsAreEqual(p,new PredicateUnaryPredicate<Object>(Constant.TRUE));
    assertObjectsAreNotEqual(p,Constant.TRUE);
    assertObjectsAreNotEqual(p,new PredicateUnaryPredicate<Object>(Constant.FALSE));
    assertObjectsAreNotEqual(p,Constant.FALSE);
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(PredicateUnaryPredicate.adapt(null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(PredicateUnaryPredicate.adapt(Constant.TRUE));
  }
}
