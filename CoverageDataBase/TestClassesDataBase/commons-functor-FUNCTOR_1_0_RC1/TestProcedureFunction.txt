/** 
 * @version $Revision$ $Date$
 * @author Rodney Waldhoff
 */
public class TestProcedureFunction extends BaseFunctorTest {
  protected Object makeFunctor(){
    return new ProcedureFunction<Object>(NoOp.INSTANCE);
  }
  @Test public void testEvaluate() throws Exception {
    Function<Object> f=new ProcedureFunction<Object>(NoOp.INSTANCE);
    assertNull(f.evaluate());
  }
  @Test public void testEquals() throws Exception {
    Function<Object> f=new ProcedureFunction<Object>(NoOp.INSTANCE);
    assertEquals(f,f);
    assertObjectsAreEqual(f,new ProcedureFunction<Object>(NoOp.INSTANCE));
    assertObjectsAreNotEqual(f,Constant.of("x"));
    assertObjectsAreNotEqual(f,new ProcedureFunction<Object>(new Procedure(){
      public void run(){
      }
    }
));
    assertObjectsAreNotEqual(f,Constant.of(null));
  }
  @Test public void testAdaptNull() throws Exception {
    assertNull(FunctionProcedure.adapt(null));
  }
  @Test public void testAdapt() throws Exception {
    assertNotNull(ProcedureFunction.adapt(new NoOp()));
  }
}
