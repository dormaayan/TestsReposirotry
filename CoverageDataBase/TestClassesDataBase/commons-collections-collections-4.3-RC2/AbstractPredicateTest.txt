public abstract class AbstractPredicateTest {
  protected Object cObject;
  protected String cString;
  protected Integer cInteger;
  @Before public void initialiseTestObjects() throws Exception {
    cObject=new Object();
    cString="Hello";
    cInteger=Integer.valueOf(6);
  }
  @Test public void predicateSanityTests() throws Exception {
    final Predicate<?> predicate=generatePredicate();
    Assert.assertNotNull(predicate);
  }
  /** 
 * @return a predicate for general sanity tests.
 */
  protected abstract Predicate<?> generatePredicate();
  protected <T>void assertFalse(  final Predicate<T> predicate,  final T testObject){
    Assert.assertFalse(predicate.evaluate(testObject));
  }
  protected <T>void assertTrue(  final Predicate<T> predicate,  final T testObject){
    Assert.assertTrue(predicate.evaluate(testObject));
  }
}
