private class ExecutionVisitor<T> implements CommandVisitor<T> {
  private List<T> v;
  private int index;
  public void setList(  final List<T> array){
    v=new ArrayList<>(array);
    index=0;
  }
  @Override public void visitInsertCommand(  final T object){
    v.add(index++,object);
  }
  @Override public void visitKeepCommand(  final T object){
    ++index;
  }
  @Override public void visitDeleteCommand(  final T object){
    v.remove(index);
  }
  public String getString(){
    final StringBuilder buffer=new StringBuilder();
    for (    final T c : v) {
      buffer.append(c);
    }
    return buffer.toString();
  }
}
