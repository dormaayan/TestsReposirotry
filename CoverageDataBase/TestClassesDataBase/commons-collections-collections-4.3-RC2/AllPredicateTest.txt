/** 
 * Tests the org.apache.commons.collections.functors.AllPredicate class.
 * @since 3.0
 */
@SuppressWarnings("boxing") public class AllPredicateTest extends AbstractAnyAllOnePredicateTest<Integer> {
  /** 
 * Creates a new <code>TestAllPredicate</code>.
 */
  public AllPredicateTest(){
    super(42);
  }
  /** 
 * {@inheritDoc}
 */
  @Override protected final Predicate<Integer> getPredicateInstance(  final Predicate<? super Integer>... predicates){
    return AllPredicate.allPredicate(predicates);
  }
  /** 
 * {@inheritDoc}
 */
  @Override protected final Predicate<Integer> getPredicateInstance(  final Collection<Predicate<Integer>> predicates){
    return AllPredicate.allPredicate(predicates);
  }
  /** 
 * Verifies that providing an empty predicate array evaluates to true.
 */
  @SuppressWarnings({"unchecked"}) @Test public void emptyArrayToGetInstance(){
    assertTrue("empty array not true",getPredicateInstance(new Predicate[]{}).evaluate(null));
  }
  /** 
 * Verifies that providing an empty predicate collection evaluates to true.
 */
  @Test public void emptyCollectionToGetInstance(){
    final Predicate<Integer> allPredicate=getPredicateInstance(Collections.<Predicate<Integer>>emptyList());
    assertTrue("empty collection not true",allPredicate.evaluate(getTestValue()));
  }
  /** 
 * Tests whether a single true predicate evaluates to true.
 */
  @SuppressWarnings("unchecked") @Test public void oneTruePredicate(){
    final Predicate<Integer> predicate=createMockPredicate(true);
    assertTrue("single true predicate evaluated to false",allPredicate(predicate).evaluate(getTestValue()));
  }
  /** 
 * Tests whether a single false predicate evaluates to true.
 */
  @SuppressWarnings("unchecked") @Test public void oneFalsePredicate(){
    final Predicate<Integer> predicate=createMockPredicate(false);
    assertFalse("single false predicate evaluated to true",allPredicate(predicate).evaluate(getTestValue()));
  }
  /** 
 * Tests whether multiple true predicates evaluates to true.
 */
  @Test public void allTrue(){
    assertTrue("multiple true predicates evaluated to false",getPredicateInstance(true,true).evaluate(getTestValue()));
    assertTrue("multiple true predicates evaluated to false",getPredicateInstance(true,true,true).evaluate(getTestValue()));
  }
  /** 
 * Tests whether combining some true and one false evalutes to false.  Also verifies that only the first false predicate is actually evaluated
 */
  @Test public void trueAndFalseCombined(){
    assertFalse("false predicate evaluated to true",getPredicateInstance(false,null).evaluate(getTestValue()));
    assertFalse("false predicate evaluated to true",getPredicateInstance(false,null,null).evaluate(getTestValue()));
    assertFalse("false predicate evaluated to true",getPredicateInstance(true,false,null).evaluate(getTestValue()));
    assertFalse("false predicate evaluated to true",getPredicateInstance(true,true,false).evaluate(getTestValue()));
    assertFalse("false predicate evaluated to true",getPredicateInstance(true,true,false,null).evaluate(getTestValue()));
  }
}
