/** 
 * Test case covering the core of Client-Cert
 * @author <a href="mailto:darran.lofthouse@jboss.com">Darran Lofthouse</a>
 */
@RunWith(DefaultServer.class) public class ClientCertTestCase extends AuthenticationTestBase {
  private static SSLContext clientSSLContext;
  @Override protected List<AuthenticationMechanism> getTestMechanisms(){
    AuthenticationMechanism mechanism=new ClientCertAuthenticationMechanism();
    return Collections.singletonList(mechanism);
  }
  @BeforeClass public static void startSSL() throws Exception {
    DefaultServer.startSSLServer();
    clientSSLContext=DefaultServer.getClientSSLContext();
  }
  @AfterClass public static void stopSSL() throws Exception {
    clientSSLContext=null;
    DefaultServer.stopSSLServer();
  }
  @Test public void testClientCertSuccess() throws Exception {
    TestHttpClient client=new TestHttpClient();
    client.setSSLContext(clientSSLContext);
    HttpGet get=new HttpGet(DefaultServer.getDefaultServerSSLAddress());
    HttpResponse result=client.execute(get);
    assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
    Header[] values=result.getHeaders("ProcessedBy");
    assertEquals("ProcessedBy Headers",1,values.length);
    assertEquals("ResponseHandler",values[0].getValue());
    values=result.getHeaders("AuthenticatedUser");
    assertEquals("AuthenticatedUser Headers",1,values.length);
    assertEquals("CN=Test Client,OU=OU,O=Org,L=City,ST=State,C=GB",values[0].getValue());
    HttpClientUtils.readResponse(result);
    assertSingleNotificationType(EventType.AUTHENTICATED);
  }
}
