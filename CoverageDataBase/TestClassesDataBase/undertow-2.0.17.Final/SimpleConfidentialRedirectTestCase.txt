/** 
 * A simple test case to verify a redirect works.
 * @author <a href="mailto:darran.lofthouse@jboss.com">Darran Lofthouse</a>
 */
@RunWith(DefaultServer.class) public class SimpleConfidentialRedirectTestCase {
  @BeforeClass public static void setup() throws IOException {
    DefaultServer.startSSLServer();
    HttpHandler current=new HttpHandler(){
      @Override public void handleRequest(      final HttpServerExchange exchange) throws Exception {
        exchange.getResponseHeaders().put(HttpString.tryFromString("scheme"),exchange.getRequestScheme());
        exchange.getResponseHeaders().put(HttpString.tryFromString("uri"),exchange.getRequestURI());
        exchange.endExchange();
      }
    }
;
    current=new SinglePortConfidentialityHandler(current,DefaultServer.getHostSSLPort("default"));
    DefaultServer.setRootHandler(current);
  }
  @AfterClass public static void stop() throws IOException {
    DefaultServer.stopSSLServer();
  }
  @Test public void simpleRedirectTestCase() throws IOException, GeneralSecurityException {
    TestHttpClient client=new TestHttpClient();
    client.setSSLContext(DefaultServer.getClientSSLContext());
    try {
      sendRequest(client,"/foo");
      sendRequest(client,"/foo+bar");
      sendRequest(client,"/foo+bar;aa");
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @ProxyIgnore public void testRedirectWithFullURLInPath() throws IOException {
    DefaultServer.isProxy();
    try (Socket socket=new Socket(DefaultServer.getHostAddress(),DefaultServer.getHostPort())){
      socket.getOutputStream().write(("GET " + DefaultServer.getDefaultServerURL() + "/foo HTTP/1.0\r\n\r\n").getBytes(StandardCharsets.UTF_8));
      String result=FileUtils.readFile(socket.getInputStream());
      Assert.assertTrue(result.contains("Location: " + DefaultServer.getDefaultServerSSLAddress() + "/foo"));
    }
   }
  private void sendRequest(  TestHttpClient client,  String uri) throws IOException {
    HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + uri);
    HttpResponse result=client.execute(get);
    Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
    Assert.assertEquals("https",result.getFirstHeader("scheme").getValue());
    Assert.assertEquals(uri,result.getFirstHeader("uri").getValue());
    HttpClientUtils.readResponse(result);
  }
}
