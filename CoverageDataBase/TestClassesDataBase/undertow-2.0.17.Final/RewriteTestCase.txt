/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class RewriteTestCase {
  @BeforeClass public static void setup() throws ServletException {
    DeploymentUtils.setupServlet(new ServletExtension(){
      @Override public void handleDeployment(      DeploymentInfo deploymentInfo,      ServletContext servletContext){
        deploymentInfo.addOuterHandlerChainWrapper(new HandlerWrapper(){
          @Override public HttpHandler wrap(          HttpHandler handler){
            byte[] data="RewriteRule /foo1 /bar1".getBytes(StandardCharsets.UTF_8);
            RewriteConfig config=RewriteConfigFactory.build(new ByteArrayInputStream(data));
            return new RewriteHandler(config,handler);
          }
        }
);
      }
    }
,new ServletInfo("servlet",PathTestServlet.class).addMapping("/"));
  }
  @Test public void testRewrite() throws Exception {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/foo1");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("pathInfo:null queryString:null servletPath:/bar1 requestUri:/servletContext/foo1",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
