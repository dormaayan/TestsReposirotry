/** 
 * @author Istvan Szabo
 */
@RunWith(DefaultServer.class) public class ParameterEchoTestCase {
  public static final String RESPONSE="param1=\'1\'param2=\'2\'param3=\'3\'";
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler root=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    ServletInfo s=new ServletInfo("servlet",ParameterEchoServlet.class).addMapping("/aaa");
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(ParameterEchoTestCase.class.getClassLoader()).setContextPath("/servletContext").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("servletContext.war").addServlet(s);
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    root.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(root);
  }
  @Test public void testPostInUrl() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/servletContext/aaa?param1=1&param2=2&param3=3");
      final List<NameValuePair> values=new ArrayList<>();
      UrlEncodedFormEntity data=new UrlEncodedFormEntity(values,"UTF-8");
      post.setEntity(data);
      HttpResponse result=client.execute(post);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      final String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(RESPONSE,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testPostInStream() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/servletContext/aaa");
      final List<NameValuePair> values=new ArrayList<>();
      values.add(new BasicNameValuePair("param1","1"));
      values.add(new BasicNameValuePair("param2","2"));
      values.add(new BasicNameValuePair("param3","3"));
      UrlEncodedFormEntity data=new UrlEncodedFormEntity(values,"UTF-8");
      post.setEntity(data);
      HttpResponse result=client.execute(post);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      final String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(RESPONSE,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testPostBoth() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/servletContext/aaa?param1=1&param2=2");
      final List<NameValuePair> values=new ArrayList<>();
      values.add(new BasicNameValuePair("param3","3"));
      UrlEncodedFormEntity data=new UrlEncodedFormEntity(values,"UTF-8");
      post.setEntity(data);
      HttpResponse result=client.execute(post);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      final String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(RESPONSE,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
