/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class ContentTypeCharsetTestCase {
  @BeforeClass public static void setup() throws ServletException {
    DeploymentUtils.setupServlet(new ServletInfo("charset",ContentTypeServlet.class).addMapping("/*"));
  }
  @Test public void testCharsetAndContentType() throws Exception {
    runtest("text/html","UTF8","text/html;charset=UTF8","text/html;charset=UTF8\nUTF8");
    runtest("text/html","","text/html;charset=ISO-8859-1","text/html;charset=ISO-8859-1\nISO-8859-1");
    runtest("text/html;   charset=UTF8","","text/html;charset=UTF8","text/html;charset=UTF8\nUTF8");
    runtest("text/html;   charset=\"UTF8\"","","text/html;charset=UTF8","text/html;charset=UTF8\nUTF8");
    runtest("text/html;   charset=UTF8; boundary=someString;","","text/html; boundary=someString;charset=UTF8","text/html; boundary=someString;charset=UTF8\nUTF8");
    runtest("text/html;   charset=UTF8; boundary=someString;   ","","text/html; boundary=someString;charset=UTF8","text/html; boundary=someString;charset=UTF8\nUTF8");
    runtest("multipart/related; type=\"text/xml\"; boundary=\"uuid:ce7d652a-d035-42fa-962c-5b8315084e32\"; start=\"<root.message@cxf.apache.org>\"; start-info=\"text/xml\"","","multipart/related; type=\"text/xml\"; boundary=\"uuid:ce7d652a-d035-42fa-962c-5b8315084e32\"; start=\"<root.message@cxf.apache.org>\"; start-info=\"text/xml\";charset=ISO-8859-1","multipart/related; type=\"text/xml\"; boundary=\"uuid:ce7d652a-d035-42fa-962c-5b8315084e32\"; start=\"<root.message@cxf.apache.org>\"; start-info=\"text/xml\";charset=ISO-8859-1\nISO-8859-1");
  }
  private void runtest(  String contentType,  String charset,  String expectedContentType,  String expectedBody) throws Exception {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/test?contentType=" + URLEncoder.encode(contentType)+ "&charset="+ URLEncoder.encode(charset));
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      final String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(expectedContentType,result.getHeaders("Content-Type")[0].getValue());
      Assert.assertEquals(expectedBody,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
