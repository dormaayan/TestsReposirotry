/** 
 * @author Carter Kozak
 */
@RunWith(DefaultServer.class) public class BlockingServerStreamResetTestCase {
  @Test public void testResponseAfterStreamReset() throws IOException {
    final BlockingHandler blockingHandler=new BlockingHandler();
    DefaultServer.setRootHandler(blockingHandler);
    blockingHandler.setRootHandler(new HttpHandler(){
      @Override public void handleRequest(      final HttpServerExchange exchange) throws Exception {
        exchange.getOutputStream().write(1);
        ((UndertowOutputStream)exchange.getOutputStream()).resetBuffer();
        exchange.getOutputStream().write("Hello, World".getBytes());
      }
    }
);
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL());
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      Assert.assertEquals("Hello, World",HttpClientUtils.readResponse(result));
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
