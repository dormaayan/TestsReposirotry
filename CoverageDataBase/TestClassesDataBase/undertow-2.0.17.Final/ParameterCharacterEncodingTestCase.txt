/** 
 * @author Matej Lazar
 */
@RunWith(DefaultServer.class) public class ParameterCharacterEncodingTestCase {
  @BeforeClass public static void setup() throws ServletException {
    DeploymentUtils.setupServlet(Servlets.servlet("servlet",EchoServlet.class).addMapping("/").setMultipartConfig(multipartConfig(null,0,0,0)));
  }
  @Test public void testUrlCharacterEncoding() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      String message="abc (\"čšž\")";
      String charset="UTF-8";
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext?charset=" + charset+ "&message="+ URLEncoder.encode(message,"UTF-8"));
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(message,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testUrlPathEncodings() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      String message="abc(\"čšž\")";
      String charset="UTF-8";
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/" + URLEncoder.encode(message,"UTF-8")+ "?charset="+ charset);
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(message,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testMultipartCharacterEncoding() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      String message="abcčšž";
      String charset="UTF-8";
      HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/servletContext");
      MultipartEntity multipart=new MultipartEntity();
      multipart.addPart("charset",new StringBody(charset,Charset.forName(charset)));
      multipart.addPart("message",new StringBody(message,Charset.forName(charset)));
      post.setEntity(multipart);
      HttpResponse result=client.execute(post);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(message,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testFormDataCharacterEncoding() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      String message="abcčšž";
      String charset="UTF-8";
      HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/servletContext");
      final List<NameValuePair> values=new ArrayList<>();
      values.add(new BasicNameValuePair("charset",charset));
      values.add(new BasicNameValuePair("message",message));
      UrlEncodedFormEntity data=new UrlEncodedFormEntity(values,"UTF-8");
      post.setEntity(data);
      HttpResponse result=client.execute(post);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(message,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
