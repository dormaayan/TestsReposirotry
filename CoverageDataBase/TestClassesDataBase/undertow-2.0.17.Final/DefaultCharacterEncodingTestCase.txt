/** 
 * @author Artemy Osipov
 */
@RunWith(DefaultServer.class) public class DefaultCharacterEncodingTestCase {
  private void setup(  final String defaultEncoding) throws ServletException {
    DeploymentUtils.setupServlet(new ServletExtension(){
      @Override public void handleDeployment(      DeploymentInfo deploymentInfo,      ServletContext servletContext){
        if (defaultEncoding != null) {
          deploymentInfo.setDefaultEncoding(defaultEncoding);
        }
      }
    }
,Servlets.servlet("servlet",DefaultCharacterEncodingServlet.class).addMapping("/"));
  }
  private void testDefaultEncoding(  String defaultCharacterEncoding,  String expectedRequestCharacterEncoding,  String expectedResponseCharacterEncoding) throws IOException, ServletException {
    setup(defaultCharacterEncoding);
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("Unexpected request character encoding",expectedRequestCharacterEncoding,readParameter(response,"requestCharacterEncoding"));
      Assert.assertEquals("Unexpected response character encoding",expectedResponseCharacterEncoding,readParameter(response,"responseCharacterEncoding"));
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  private String readParameter(  String response,  String parameter){
    Pattern pattern=Pattern.compile(parameter + "=(.*?);");
    Matcher matcher=pattern.matcher(response);
    if (matcher.find()) {
      return matcher.group(1);
    }
 else {
      return null;
    }
  }
  @Test public void testDefaultEncodingNotSet() throws IOException, ServletException {
    testDefaultEncoding(null,"null","ISO-8859-1");
  }
  @Test public void testDefaultEncodingSetEqualDefault() throws IOException, ServletException {
    testDefaultEncoding("ISO-8859-1","ISO-8859-1","ISO-8859-1");
  }
  @Test public void testDefaultEncodingSetNotEqualDefault() throws IOException, ServletException {
    testDefaultEncoding("UTF-8","UTF-8","UTF-8");
  }
}
