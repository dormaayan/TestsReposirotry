/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class SessionIdHandlingTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler pathHandler=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(SimpleServletTestCase.class.getClassLoader()).setContextPath("/servletContext").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("servletContext.war").addServlets(new ServletInfo("servlet",RequestedSessionIdServlet.class).addMapping("/session"));
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    try {
      pathHandler.addPrefixPath(builder.getContextPath(),manager.start());
    }
 catch (    ServletException e) {
      throw new RuntimeException(e);
    }
    DefaultServer.setRootHandler(pathHandler);
  }
  @Test public void testGetRequestedSessionId() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=create");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("null",response);
      String sessionId=getSession(client.getCookieStore().getCookies());
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=default");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(sessionId,response);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=change");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(sessionId,response);
      String newSessionId=getSession(client.getCookieStore().getCookies());
      Assert.assertNotEquals(sessionId,newSessionId);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=default");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(newSessionId,response);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=destroycreate");
      result=client.execute(get);
      final String createdSessionId=getSession(client.getCookieStore().getCookies());
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(newSessionId,response);
      Assert.assertNotEquals(createdSessionId,newSessionId);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=destroy");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(createdSessionId,response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testIsRequestedSessionIdValid() throws IOException, InterruptedException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=create");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("null",response);
      String sessionId=getSession(client.getCookieStore().getCookies());
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=timeout");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals(sessionId,response);
      Thread.sleep(2500);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/session?action=isvalid");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("false",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  private String getSession(  List<Cookie> cookies){
    for (    Cookie cookie : cookies) {
      if (cookie.getName().equals("JSESSIONID")) {
        return cookie.getValue();
      }
    }
    return null;
  }
}
