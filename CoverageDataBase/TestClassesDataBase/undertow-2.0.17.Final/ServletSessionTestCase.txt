/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class ServletSessionTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler pathHandler=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(SimpleServletTestCase.class.getClassLoader()).setContextPath("/servletContext").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("servletContext.war").addListener(new ListenerInfo(SessionCookieConfigListener.class)).addServlets(new ServletInfo("servlet",SessionServlet.class).addMapping("/aa/b"));
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    try {
      pathHandler.addPrefixPath(builder.getContextPath(),manager.start());
    }
 catch (    ServletException e) {
      throw new RuntimeException(e);
    }
    DefaultServer.setRootHandler(pathHandler);
  }
  @Test public void testSimpleSessionUsage() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/aa/b");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("1",response);
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("2",response);
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("3",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testSessionCookieConfig() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/aa/b");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("1",response);
      String cookieValue=result.getHeaders("Set-Cookie")[0].getValue();
      Assert.assertTrue(cookieValue.contains("MySessionCookie"));
      Assert.assertTrue(cookieValue.contains("/servletContext/aa/"));
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("2",response);
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("3",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testSessionConfigNoCookies() throws IOException {
    TestHttpClient client=new TestHttpClient();
    client.setCookieStore(new CookieStore(){
      @Override public void addCookie(      Cookie cookie){
      }
      @Override public List<Cookie> getCookies(){
        return Collections.EMPTY_LIST;
      }
      @Override public boolean clearExpired(      Date date){
        return false;
      }
      @Override public void clear(){
      }
    }
);
    try {
      HttpResponse result=client.execute(new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/aa/b;foo=bar"));
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("1",response);
      String url=result.getHeaders("url")[0].getValue();
      result=client.execute(new HttpGet(url));
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      url=result.getHeaders("url")[0].getValue();
      Assert.assertEquals("2",response);
      result=client.execute(new HttpGet(url));
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("3",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
