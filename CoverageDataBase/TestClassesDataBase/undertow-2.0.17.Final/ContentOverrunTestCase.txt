/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) @ProxyIgnore @HttpOneOnly public class ContentOverrunTestCase {
  @BeforeClass public static void setup(){
    HttpHandler overlyLong=new HttpHandler(){
      @Override public void handleRequest(      HttpServerExchange exchange) throws Exception {
        exchange.setResponseContentLength(10);
        exchange.getOutputStream().write("Overly long content".getBytes(StandardCharsets.UTF_8));
      }
    }
;
    HttpHandler responseNotAllowed=new HttpHandler(){
      @Override public void handleRequest(      HttpServerExchange exchange) throws Exception {
        exchange.setStatusCode(204);
        exchange.getOutputStream().write("Overly long content".getBytes(StandardCharsets.UTF_8));
      }
    }
;
    DefaultServer.setRootHandler(Handlers.path().addPrefixPath("/204",new BlockingHandler(responseNotAllowed)).addPrefixPath("/long",new BlockingHandler(overlyLong)));
  }
  @Test public void testContentOn204() throws Exception {
    final TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/204");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.NO_CONTENT,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testContentPastContentLength() throws Exception {
    final TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/long");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("Overly lon",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
