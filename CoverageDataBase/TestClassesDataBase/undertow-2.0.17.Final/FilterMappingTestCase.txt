/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class FilterMappingTestCase {
  public static String message;
  public static final String HELLO_WORLD="Hello World";
  public static final String SERVLET="aServlet";
  private Filter filterMappedByServletName=new NullFilter();
  private Filter filterMappedByUrlPattern=new NullFilter();
  /** 
 * A Filter that does nothing
 */
static class NullFilter implements Filter {
    @Override public void init(    FilterConfig filterConfig) throws ServletException {
    }
    @Override public void doFilter(    ServletRequest servletRequest,    ServletResponse servletResponse,    FilterChain filterChain) throws IOException, ServletException {
      filterChain.doFilter(servletRequest,servletResponse);
    }
    @Override public void destroy(){
    }
  }
static class NullServlet extends HttpServlet {
  }
  @Test public void testRegisterFilters() throws Exception {
    setupServlet();
  }
  /** 
 * Registers a servlet with two filters, one mapped by servlet name and one mapped by url pattern
 */
  private void setupServlet(){
    DeploymentUtils.setupServlet(new ServletExtension(){
      @Override public void handleDeployment(      DeploymentInfo deploymentInfo,      ServletContext servletContext){
        servletContext.addFilter("MyFilter1",filterMappedByServletName).addMappingForServletNames(null,false,SERVLET);
        servletContext.addFilter("MyFilter2",filterMappedByUrlPattern).addMappingForUrlPatterns(null,false,"/");
      }
    }
,new ServletInfo(SERVLET,NullServlet.class).addMapping("/" + SERVLET));
  }
}
