/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class AccessLogTestCase {
  private static volatile String message;
  private volatile CountDownLatch latch;
  private final AccessLogReceiver RECEIVER=new AccessLogReceiver(){
    @Override public void logMessage(    final String msg){
      message=msg;
      latch.countDown();
    }
  }
;
  private static final HttpHandler HELLO_HANDLER=new HttpHandler(){
    @Override public void handleRequest(    final HttpServerExchange exchange) throws Exception {
      exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,"text/plain");
      exchange.getResponseSender().send("HelloResponse");
    }
  }
;
  @Test public void testRemoteAddress() throws IOException, InterruptedException {
    latch=new CountDownLatch(1);
    DefaultServer.setRootHandler(new StoredResponseHandler(new AccessLogHandler(HELLO_HANDLER,RECEIVER,"Remote address %a Code %s test-header %{i,test-header} %{STORED_RESPONSE}",AccessLogFileTestCase.class.getClassLoader())));
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/path");
      get.addHeader("test-header","test-value");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      Assert.assertEquals("HelloResponse",HttpClientUtils.readResponse(result));
      latch.await(10,TimeUnit.SECONDS);
      Assert.assertEquals("Remote address " + DefaultServer.getDefaultServerAddress().getAddress().getHostAddress() + " Code 200 test-header test-value HelloResponse",message);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
