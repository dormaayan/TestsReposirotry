/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) @AjpIgnore(apacheOnly=true) public class LotsOfHeadersResponseTestCase {
  private static final String HEADER="HEADER";
  private static final String MESSAGE="Hello Header";
  private static final int COUNT=10000;
  @BeforeClass public static void setup(){
    final BlockingHandler blockingHandler=new BlockingHandler();
    DefaultServer.setRootHandler(blockingHandler);
    blockingHandler.setRootHandler(new HttpHandler(){
      @Override public void handleRequest(      final HttpServerExchange exchange){
        for (int i=0; i < COUNT; ++i) {
          exchange.getResponseHeaders().put(HttpString.tryFromString(HEADER + i),MESSAGE + i);
        }
      }
    }
);
  }
  @Test public void testLotsOfHeadersInResponse() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/path");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      for (int i=0; i < COUNT; ++i) {
        Header[] header=result.getHeaders(HEADER + i);
        Assert.assertEquals(MESSAGE + i,header[0].getValue());
      }
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
