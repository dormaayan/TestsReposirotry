/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class ServletContextListenerTestCase {
  static DeploymentManager manager;
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler root=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(SimpleServletTestCase.class.getClassLoader()).setContextPath("/servletContext").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("servletContext.war").addServletContainerInitializer(new ServletContainerInitializerInfo(TestSci.class,Collections.<Class<?>>emptySet())).addServlet(new ServletInfo("servlet",MessageServlet.class).addMapping("/aa")).addListener(new ListenerInfo(ServletContextTestListener.class));
    manager=container.addDeployment(builder);
    manager.deploy();
    root.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(root);
  }
  @Test public void testServletContextInitialized() throws IOException {
    Assert.assertNotNull(ServletContextTestListener.servletContextInitializedEvent);
  }
  @Test public void testServletContextAttributeListener() throws IOException {
    ServletContextImpl sc=manager.getDeployment().getServletContext();
    sc.setAttribute("test","1");
    Assert.assertNotNull(ServletContextTestListener.servletContextAttributeEvent);
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getName(),"test");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getValue(),"1");
    sc.setAttribute("test","2");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getName(),"test");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getValue(),"1");
    sc.setAttribute("test","3");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getName(),"test");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getValue(),"2");
    sc.removeAttribute("test");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getName(),"test");
    Assert.assertEquals(ServletContextTestListener.servletContextAttributeEvent.getValue(),"3");
  }
}
