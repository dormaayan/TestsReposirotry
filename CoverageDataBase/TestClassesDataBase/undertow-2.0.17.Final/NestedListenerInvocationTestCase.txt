/** 
 * @author Jozef Hartinger
 * @see https://issues.jboss.org/browse/UNDERTOW-81
 */
@RunWith(DefaultServer.class) public class NestedListenerInvocationTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler root=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    ServletInfo a=new ServletInfo("asyncServlet",AsyncServlet.class).setAsyncSupported(true).addMapping("/async");
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(NestedListenerInvocationTestCase.class.getClassLoader()).setContextPath("/servletContext").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("servletContext.war").addServlets(a).addListener(new ListenerInfo(SimpleRequestListener.class));
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    root.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(root);
  }
  @Test public void testSimpleHttpServlet() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/async");
      HttpResponse response=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(SimpleRequestListener.hasNestedInvocationOccured());
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
