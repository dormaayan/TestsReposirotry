/** 
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class ServletLoginTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler path=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    ServletInfo s=new ServletInfo("servlet",SendUsernameServlet.class).addMapping("/*");
    ServletIdentityManager identityManager=new ServletIdentityManager();
    identityManager.addUser("user1","password1","role1");
    identityManager.addUser("user2","password2","role2");
    identityManager.addUser("user3","password3","role3");
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(SimpleServletTestCase.class.getClassLoader()).setContextPath("/servletContext").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("servletContext.war").setIdentityManager(identityManager).setLoginConfig(new LoginConfig("BASIC","Test Realm")).addServlet(s).addFilter(new FilterInfo("LoginFilter",LoginFilter.class)).addFilterServletNameMapping("LoginFilter","servlet",DispatcherType.REQUEST);
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    path.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(path);
  }
  @Test public void testHttpMethod() throws IOException {
    TestHttpClient client=new TestHttpClient();
    final String url=DefaultServer.getDefaultServerURL() + "/servletContext/login";
    try {
      HttpGet get=new HttpGet(url);
      get.addHeader("username","bob");
      get.addHeader("password","bogus");
      HttpResponse result=client.execute(get);
      assertEquals(StatusCodes.UNAUTHORIZED,result.getStatusLine().getStatusCode());
      HttpClientUtils.readResponse(result);
      get=new HttpGet(url);
      get.addHeader("username","user1");
      get.addHeader("password","password1");
      result=client.execute(get);
      assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("user1",response);
      get=new HttpGet(url);
      result=client.execute(get);
      assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      response=HttpClientUtils.readResponse(result);
      Assert.assertEquals("user1",response);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
