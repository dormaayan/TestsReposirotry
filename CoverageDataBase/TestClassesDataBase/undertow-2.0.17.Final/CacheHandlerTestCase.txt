/** 
 * Tests out the caching handler
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class CacheHandlerTestCase {
  @Test public void testBasicPathBasedCaching() throws IOException {
    final AtomicInteger responseCount=new AtomicInteger();
    final HttpHandler messageHandler=new HttpHandler(){
      @Override public void handleRequest(      final HttpServerExchange exchange) throws Exception {
        final ResponseCache cache=exchange.getAttachment(ResponseCache.ATTACHMENT_KEY);
        if (!cache.tryServeResponse()) {
          final String data="Response " + responseCount.incrementAndGet();
          exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,data.length() + "");
          exchange.getResponseSender().send(data);
        }
      }
    }
;
    final CacheHandler cacheHandler=new CacheHandler(new DirectBufferCache(100,10,1000),messageHandler);
    DefaultServer.setRootHandler(cacheHandler);
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/path");
      for (int i=1; i <= 5; ++i) {
        HttpResponse result=client.execute(get);
        Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
        Assert.assertEquals("Response " + i,HttpClientUtils.readResponse(result));
      }
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      Assert.assertEquals("Response 5",HttpClientUtils.readResponse(result));
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      Assert.assertEquals("Response 5",HttpClientUtils.readResponse(result));
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      Assert.assertEquals("Response 5",HttpClientUtils.readResponse(result));
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/path2");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      Assert.assertEquals("Response 6",HttpClientUtils.readResponse(result));
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
