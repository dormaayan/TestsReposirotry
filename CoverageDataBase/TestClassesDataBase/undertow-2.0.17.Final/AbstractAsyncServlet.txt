public abstract static class AbstractAsyncServlet extends HttpServlet {
  static final BlockingQueue<String> QUEUE=new LinkedBlockingDeque<>();
  @Override protected void doGet(  final HttpServletRequest req,  final HttpServletResponse resp) throws ServletException, IOException {
    AsyncContext context=req.startAsync();
    context.setTimeout(1000);
    for (int i=0; i < 2; i++) {
      context.addListener(new AsyncListener(){
        @Override public void onComplete(        AsyncEvent asyncEvent) throws IOException {
          QUEUE.add("onComplete");
          throwException();
        }
        @Override public void onTimeout(        AsyncEvent asyncEvent) throws IOException {
          QUEUE.add("onTimeout");
          throwException();
        }
        @Override public void onError(        AsyncEvent asyncEvent) throws IOException {
          QUEUE.add("onError");
          throwException();
        }
        @Override public void onStartAsync(        AsyncEvent asyncEvent) throws IOException {
          QUEUE.add("onStartAsync");
        }
      }
);
    }
    if (req.getHeader("timeout") == null) {
      context.complete();
    }
  }
  protected abstract void throwException() throws IOException ;
}
