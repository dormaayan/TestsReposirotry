/** 
 * @author Tomaz Cerar
 */
@RunWith(DefaultServer.class) public class RealPathTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler root=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    ServletInfo realPathServlet=new ServletInfo("real path servlet",RealPathServlet.class).addMapping("/path/*");
    DeploymentInfo builder=new DeploymentInfo().setClassIntrospecter(TestClassIntrospector.INSTANCE).setClassLoader(RealPathTestCase.class.getClassLoader()).setContextPath("/servletContext").setDeploymentName("servletContext.war").setResourceManager(new TestResourceLoader(RealPathTestCase.class)).addServlets(realPathServlet);
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    root.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(root);
  }
  @Test public void testRealPath() throws Exception {
    HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/path/real-path");
    HttpResponse result=new TestHttpClient().execute(get);
    Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
    String response=HttpClientUtils.readResponse(result);
    Assert.assertEquals(Paths.get(RealPathTestCase.class.getResource("file.txt").toURI()).toString(),response);
  }
  @Test public void testPathTranslated() throws Exception {
    HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/path/file.txt");
    HttpResponse result=new TestHttpClient().execute(get);
    Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
    String response=HttpClientUtils.readResponse(result);
    Assert.assertEquals(Paths.get(RealPathTestCase.class.getResource("file.txt").toURI()).toString(),response);
  }
}
