/** 
 * Tests the redirect handler
 * @author Stuart Douglas
 */
@RunWith(DefaultServer.class) public class RedirectTestCase {
  private static volatile String message;
  @BeforeClass public static void setup(){
    DefaultServer.setRootHandler(new PathHandler().addPrefixPath("/target",new HttpHandler(){
      @Override public void handleRequest(      HttpServerExchange exchange) throws Exception {
        message=exchange.getRequestURI();
      }
    }
).addPrefixPath("/",predicateContext(predicate(Predicates.regex("%{REQUEST_URL}","/(aa.*?)c",RedirectTestCase.class.getClassLoader(),false),Handlers.redirect("/target/matched/${1}"),Handlers.redirect("/target%U")))));
  }
  @Test public void testRedirectHandler() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/path/a");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      HttpClientUtils.readResponse(result);
      Assert.assertEquals("/target/path/a",message);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/aabc");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      HttpClientUtils.readResponse(result);
      Assert.assertEquals("/target/matched/aab",message);
      get=new HttpGet(DefaultServer.getDefaultServerURL() + "/somePath/aabc");
      result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      HttpClientUtils.readResponse(result);
      Assert.assertEquals("/target/matched/aab",message);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
