/** 
 * @see UNDERTOW-80
 * @author Jozef Hartinger
 */
@RunWith(DefaultServer.class) public class ServletSessionInvalidateWithListenerTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler path=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    DeploymentInfo builder=new DeploymentInfo().setClassLoader(SimpleServletTestCase.class.getClassLoader()).setContextPath("/listener").setClassIntrospecter(TestClassIntrospector.INSTANCE).setDeploymentName("listener.war").addListener(new ListenerInfo(SimpleSessionListener.class)).addServlet(new ServletInfo("servlet",SessionServlet.class).addMapping("/test"));
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    path.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(path);
  }
  @Test public void testSimpleSessionUsage() throws IOException {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/listener/test");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
