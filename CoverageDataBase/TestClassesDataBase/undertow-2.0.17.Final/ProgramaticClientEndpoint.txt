public static class ProgramaticClientEndpoint extends Endpoint {
  private final LinkedBlockingDeque<byte[]> responses=new LinkedBlockingDeque<>();
  final CountDownLatch closeLatch=new CountDownLatch(1);
  volatile Session session;
  @Override public void onOpen(  Session session,  EndpointConfig config){
    this.session=session;
    byte[] mutableBytes=new byte[bytes.length];
    System.arraycopy(bytes,0,mutableBytes,0,bytes.length);
    session.getAsyncRemote().sendBinary(ByteBuffer.wrap(mutableBytes));
    session.addMessageHandler(new MessageHandler.Whole<byte[]>(){
      @Override public void onMessage(      byte[] message){
        responses.add(message);
      }
    }
);
  }
  @Override public void onClose(  Session session,  CloseReason closeReason){
    closeLatch.countDown();
  }
  public LinkedBlockingDeque<byte[]> getResponses(){
    return responses;
  }
}
