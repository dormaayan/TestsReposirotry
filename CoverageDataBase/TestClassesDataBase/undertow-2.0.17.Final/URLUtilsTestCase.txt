/** 
 * @author Oleksandr Radchykov
 * @author Andre Schaefer
 */
@RunWith(Parameterized.class) @Category(UnitTest.class) public class URLUtilsTestCase {
  @Parameterized.Parameters public static Object[] spaceCodes(){
    return new Object[]{"%2f","%2F"};
  }
  @Parameterized.Parameter public String spaceCode="%2f";
  @Test public void testDecodingWithEncodedAndDecodedSlashAndSlashDecodingDisabled() throws Exception {
    String url="http://localhost:3001/by-path/wild%20card/wild%28west%29/wild" + spaceCode + "wolf";
    final String result=URLUtils.decode(url,Charset.defaultCharset().name(),false,new StringBuilder());
    assertEquals("http://localhost:3001/by-path/wild card/wild(west)/wild" + spaceCode + "wolf",result);
  }
  @Test public void testDecodingURLMustNotMutateSpaceSymbolsCaseIfSpaceDecodingDisabled() throws Exception {
    final String url="http://localhost:3001/wild" + spaceCode + "west";
    final String result=URLUtils.decode(url,Charset.defaultCharset().name(),false,new StringBuilder());
    assertEquals(url,result);
  }
  @Test public void testIsAbsoluteUrlRecognizingAbsolutUrls(){
    assertTrue(URLUtils.isAbsoluteUrl("https://some.valid.url:8080/path?query=val"));
    assertTrue(URLUtils.isAbsoluteUrl("http://some.valid.url:8080/path?query=val"));
    assertTrue(URLUtils.isAbsoluteUrl("http://some.valid.url"));
  }
  @Test public void testIsAbsoluteUrlRecognizingAppUrls(){
    assertTrue(URLUtils.isAbsoluteUrl("com.example.app:/oauth2redirect/example-provider"));
    assertTrue(URLUtils.isAbsoluteUrl("com.example.app:/oauth2redirect/example-provider?query=val"));
  }
  @Test public void testIsAbsoluteUrlRecognizingRelativeUrls(){
    assertFalse(URLUtils.isAbsoluteUrl("relative"));
    assertFalse(URLUtils.isAbsoluteUrl("relative/path"));
    assertFalse(URLUtils.isAbsoluteUrl("relative/path?query=val"));
    assertFalse(URLUtils.isAbsoluteUrl("/root/relative/path"));
  }
  @Test public void testIsAbsoluteUrlRecognizingEmptyOrNullAsRelative(){
    assertFalse(URLUtils.isAbsoluteUrl(null));
    assertFalse(URLUtils.isAbsoluteUrl(""));
  }
  @Test public void testIsAbsoluteUrlIgnoresSyntaxErrorsAreNotAbsolute(){
    assertFalse(URLUtils.isAbsoluteUrl(":"));
  }
}
