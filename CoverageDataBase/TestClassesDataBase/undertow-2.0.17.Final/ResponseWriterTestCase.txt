/** 
 * @author Tomaz Cerar
 */
@RunWith(DefaultServer.class) public class ResponseWriterTestCase {
  @BeforeClass public static void setup() throws ServletException {
    final PathHandler root=new PathHandler();
    final ServletContainer container=ServletContainer.Factory.newInstance();
    DeploymentInfo builder=new DeploymentInfo().setClassIntrospecter(TestClassIntrospector.INSTANCE).setClassLoader(ResponseWriterTestCase.class.getClassLoader()).setContextPath("/servletContext").setDeploymentName("servletContext.war").addServlet(Servlets.servlet("resp",ResponseWriterServlet.class).addMapping("/resp")).addServlet(Servlets.servlet("respLArget",LargeResponseWriterServlet.class).addMapping("/large"));
    DeploymentManager manager=container.addDeployment(builder);
    manager.deploy();
    root.addPrefixPath(builder.getContextPath(),manager.start());
    DefaultServer.setRootHandler(root);
  }
  @Test public void testContentLengthBasedFlush() throws Exception {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/resp?test=" + ResponseWriterServlet.CONTENT_LENGTH_FLUSH);
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String data=FileUtils.readFile(result.getEntity().getContent());
      Assert.assertEquals("first-aaaa",data);
      Assert.assertEquals(0,result.getHeaders("not-header").length);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
  @Test public void testWriterLargeResponse() throws Exception {
    TestHttpClient client=new TestHttpClient();
    try {
      HttpGet get=new HttpGet(DefaultServer.getDefaultServerURL() + "/servletContext/large");
      HttpResponse result=client.execute(get);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      String data=FileUtils.readFile(result.getEntity().getContent());
      Assert.assertEquals(LargeResponseWriterServlet.getMessage(),data);
    }
  finally {
      client.getConnectionManager().shutdown();
    }
  }
}
