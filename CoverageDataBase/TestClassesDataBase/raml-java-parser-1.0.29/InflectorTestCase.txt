public class InflectorTestCase {
  @Test public void singularizer(){
    assertThat(singularize("users"),is("user"));
    assertThat(singularize("user"),is("user"));
    assertThat(singularize("statuses"),is("status"));
    assertThat(singularize("status"),is("status"));
    assertThat(singularize("buses"),is("bus"));
    assertThat(singularize("bus"),is("bus"));
    assertThat(singularize("analysis"),is("analysis"));
    assertThat(singularize("analyses"),is("analysis"));
  }
  @Test public void pluralizer(){
    assertThat(pluralize("user"),is("users"));
    assertThat(pluralize("users"),is("users"));
    assertThat(pluralize("status"),is("statuses"));
    assertThat(pluralize("statuses"),is("statuses"));
    assertThat(pluralize("bus"),is("buses"));
    assertThat(pluralize("buses"),is("buses"));
    assertThat(pluralize("analysis"),is("analyses"));
    assertThat(pluralize("analyses"),is("analyses"));
  }
  @Test public void upperCase(){
    assertThat(uppercase("userId"),is("USERID"));
  }
  @Test public void lowerCase(){
    assertThat(lowercase("userId"),is("userid"));
  }
  @Test public void lowerCamelCase(){
    assertThat(lowercamelcase("UserId"),is("userId"));
  }
  @Test public void upperCamelCase(){
    assertThat(uppercamelcase("userId"),is("UserId"));
  }
  @Test public void lowerUnderscoreCase(){
    assertThat(lowerunderscorecase("userId"),is("user_id"));
  }
  @Test public void upperUnderscoreCase(){
    assertThat(upperunderscorecase("userId"),is("USER_ID"));
  }
  @Test public void lowerHyphenCase(){
    assertThat(lowerhyphencase("userId"),is("user-id"));
  }
  @Test public void upperHyphenCase(){
    assertThat(upperhyphencase("userId"),is("USER-ID"));
  }
}
