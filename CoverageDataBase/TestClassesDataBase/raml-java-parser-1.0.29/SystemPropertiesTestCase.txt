public class SystemPropertiesTestCase {
  private String failOnWarningOldValue;
  @After public void clearProperties(){
    clearFailOnWarning();
    DateUtils.FOUR_YEARS_VALIDATION=true;
  }
  @Test public void failOnWarning() throws IOException {
    failOnWarningOldValue=System.setProperty(JSON_SCHEMA_FAIL_ON_WARNING_KEY,"true");
    RamlModelResult ramlModelResult=getJsonSchemaApi();
    assertThat(ramlModelResult.hasErrors(),is(true));
    assertThat(ramlModelResult.getValidationResults().size(),is(1));
  }
  @Test public void doNotFailOnWarning() throws IOException {
    failOnWarningOldValue=System.setProperty(JSON_SCHEMA_FAIL_ON_WARNING_KEY,"false");
    RamlModelResult ramlModelResult=getJsonSchemaApi();
    assertThat(ramlModelResult.hasErrors(),is(false));
  }
  @Test public void failFourYearsValidation(){
    DateUtils.FOUR_YEARS_VALIDATION=true;
    RamlModelResult ramlModelResult=getDateTimeApi();
    assertThat(ramlModelResult.hasErrors(),is(true));
  }
  @Test public void doNotFailFourYearsValidation(){
    DateUtils.FOUR_YEARS_VALIDATION=false;
    RamlModelResult ramlModelResult=getDateTimeApi();
    assertThat(ramlModelResult.hasErrors(),is(false));
  }
  private RamlModelResult getJsonSchemaApi(){
    return getApi("src/test/resources/org/raml/v2/api/v10/system-properties/jsonschema-fail-on-warning.raml");
  }
  private RamlModelResult getDateTimeApi(){
    return getApi("src/test/resources/org/raml/v2/api/v10/system-properties/date-only-validation.raml");
  }
  private RamlModelResult getApi(  String pathname){
    File ramlFile=new File(pathname);
    assertTrue(ramlFile.isFile());
    return new RamlModelBuilder().buildApi(ramlFile);
  }
  private void clearFailOnWarning(){
    if (failOnWarningOldValue == null) {
      System.clearProperty(JSON_SCHEMA_FAIL_ON_WARNING_KEY);
    }
 else {
      System.setProperty(JSON_SCHEMA_FAIL_ON_WARNING_KEY,failOnWarningOldValue);
    }
  }
}
