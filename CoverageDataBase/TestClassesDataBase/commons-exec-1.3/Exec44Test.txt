/** 
 * Test EXEC-44 (https://issues.apache.org/jira/browse/EXEC-44).
 * @version $Id$
 */
public class Exec44Test {
  private final Executor exec=new DefaultExecutor();
  private final File testDir=new File("src/test/scripts");
  private final File foreverTestScript=TestUtil.resolveScriptForOS(testDir + "/forever");
  /** 
 * Because the ExecuteWatchdog is the only way to destroy asynchronous processes, it should be possible to set it to an infinite timeout, for processes which should not timeout, but manually destroyed under some circumstances.
 * @throws Exception the test failed
 */
  @Test public void testExec44() throws Exception {
    final CommandLine cl=new CommandLine(foreverTestScript);
    final DefaultExecuteResultHandler resultHandler=new DefaultExecuteResultHandler();
    final ExecuteWatchdog watchdog=new ExecuteWatchdog(ExecuteWatchdog.INFINITE_TIMEOUT);
    exec.setWatchdog(watchdog);
    exec.execute(cl,resultHandler);
    Thread.sleep(5000);
    assertTrue("The watchdog is watching the process",watchdog.isWatching());
    watchdog.destroyProcess();
    assertTrue("The watchdog has killed the process",watchdog.killedProcess());
    assertFalse("The watchdog is no longer watching any process",watchdog.isWatching());
  }
}
