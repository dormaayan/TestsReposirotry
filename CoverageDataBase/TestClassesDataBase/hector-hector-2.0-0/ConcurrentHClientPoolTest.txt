public class ConcurrentHClientPoolTest extends BaseEmbededServerSetupTest {
  private CassandraHost cassandraHost;
  private ConcurrentHClientPool clientPool;
  @Before public void setupTest(){
    setupClient();
    cassandraHost=cassandraHostConfigurator.buildCassandraHosts()[0];
    HClientFactory factory=new HThriftClientFactoryImpl();
    clientPool=new ConcurrentHClientPool(factory,cassandraHost,new CassandraClientMonitor(connectionManager));
  }
  @Test public void testSpinUp(){
    assertEquals(16,clientPool.getNumIdle());
    assertEquals(50,clientPool.getNumBeforeExhausted());
    assertEquals(0,clientPool.getNumBlockedThreads());
    assertEquals(0,clientPool.getNumActive());
  }
  @Test public void testShutdown(){
    clientPool.shutdown();
    assertEquals(0,clientPool.getNumIdle());
    assertEquals(0,clientPool.getNumBlockedThreads());
    assertEquals(0,clientPool.getNumActive());
    try {
      clientPool.borrowClient();
      fail();
    }
 catch (    HInactivePoolException e) {
    }
  }
  @Test public void testBorrowRelease(){
    HClient client=clientPool.borrowClient();
    assertEquals(1,clientPool.getNumActive());
    clientPool.releaseClient(client);
    assertEquals(0,clientPool.getNumActive());
  }
}
