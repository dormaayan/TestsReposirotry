/** 
 * Tests for <code> {@link ObjectArrays#assertHasSameSizeAs(AssertionInfo,Object[],Iterable)}</code>.
 * @author Nicolas FranÃ§ois
 * @author Joel Costigliola
 */
public class ObjectArrays_assertHasSameSizeAs_with_Iterable_Test extends ObjectArraysBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertHasSameSizeAs(someInfo(),null,newArrayList("Solo","Leia"))).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_other_is_null(){
    assertThatNullPointerException().isThrownBy(() -> {
      String[] actual=array("Solo","Leia");
      Iterable<?> other=null;
      arrays.assertHasSameSizeAs(someInfo(),actual,other);
    }
).withMessage("The Iterable to compare actual size with should not be null");
  }
  @Test public void should_fail_if_actual_size_is_not_equal_to_other_size(){
    AssertionInfo info=someInfo();
    String[] actual=array("Yoda");
    List<String> other=newArrayList("Solo","Leia");
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertHasSameSizeAs(info,actual,other)).withMessage(shouldHaveSameSizeAs(actual,actual.length,other.size()).create(null,info.representation()));
  }
  @Test public void should_pass_if_actual_has_same_size_as_other(){
    arrays.assertHasSameSizeAs(someInfo(),array("Solo","Leia"),newArrayList("Solo","Leia"));
  }
}
