/** 
 * Tests for <code> {@link Integers#assertIsOne(AssertionInfo,Integer)}</code>.
 * @author Drummond Dawson
 */
public class Integers_assertIsOne_Test extends IntegersBaseTest {
  @Test public void should_succeed_since_actual_is_one(){
    integers.assertIsOne(someInfo(),1);
  }
  @Test public void should_fail_since_actual_is_not_one(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> integers.assertIsOne(someInfo(),0)).withMessage(format("%nExpecting:%n <0>%nto be equal to:%n <1>%nbut was not."));
  }
  @Test public void should_succeed_since_actual_is_one_whatever_custom_comparison_strategy_is(){
    integersWithAbsValueComparisonStrategy.assertIsOne(someInfo(),1);
  }
  @Test public void should_fail_since_actual_is_not_one_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> integersWithAbsValueComparisonStrategy.assertIsOne(someInfo(),0)).withMessage(format("%nExpecting:%n <0>%nto be equal to:%n <1>%nbut was not."));
  }
}
