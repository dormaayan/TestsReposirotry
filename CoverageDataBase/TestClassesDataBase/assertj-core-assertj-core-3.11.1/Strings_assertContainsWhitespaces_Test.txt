public class Strings_assertContainsWhitespaces_Test extends StringsBaseTest {
  public static Stream<Arguments> containOnlyWhitespace(){
    return Stream.of(Arguments.of(" "),Arguments.of("\u005Ct"),Arguments.of("\u005Cn"),Arguments.of("\u005Cr"),Arguments.of(" \u005Cn\u005Cr  "));
  }
  @ParameterizedTest @MethodSource("containOnlyWhitespace") public void should_pass_if_string_contains_only_whitespaces(  String actual){
    strings.assertContainsWhitespaces(someInfo(),actual);
  }
  public static Stream<Arguments> containOneOrMoreWhitespaces(){
    return Stream.of(Arguments.of("a "),Arguments.of("a b"),Arguments.of("a  b"),Arguments.of("a\u005Ctb"),Arguments.of("a\u005Cnb"),Arguments.of("a\u005Crb"),Arguments.of("a \u005Cn\u005Cr  b"));
  }
  @ParameterizedTest @MethodSource("containOneOrMoreWhitespaces") public void should_pass_if_string_contains_one_or_more_whitespaces(  String actual){
    strings.assertContainsWhitespaces(someInfo(),actual);
  }
  public static Stream<Arguments> doesNotcontainAnyWhitespaces(){
    return Stream.of(Arguments.of((String)null),Arguments.of(""),Arguments.of("a"),Arguments.of("bc"));
  }
  @ParameterizedTest @MethodSource("doesNotcontainAnyWhitespaces") public void should_fail_if_string_does_not_contain_any_whitespaces(  String actual){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> strings.assertContainsWhitespaces(someInfo(),actual)).withMessage(shouldContainOneOrMoreWhitespaces(actual).create());
  }
}
