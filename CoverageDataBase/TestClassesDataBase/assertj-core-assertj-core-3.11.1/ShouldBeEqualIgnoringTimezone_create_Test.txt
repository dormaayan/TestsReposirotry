/** 
 * Tests for <code> {@link org.assertj.core.error.ShouldBeEqualIgnoringTimezone#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code> .
 * @author Alexander Bischof
 */
public class ShouldBeEqualIgnoringTimezone_create_Test {
  private ErrorMessageFactory factory;
  @Test public void should_create_error_message_for_OffsetTime(){
    factory=shouldBeEqualIgnoringTimezone(OffsetTime.of(12,0,0,0,UTC),OffsetTime.of(12,0,0,0,MIN));
    String message=factory.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + "  <12:00Z>%n"+ "to have same time fields except timezone as:%n"+ "  <12:00-18:00>%n"+ "but had not."));
  }
  @Test public void should_create_error_message_for_OffsetDateTime(){
    factory=shouldBeEqualIgnoringTimezone(OffsetDateTime.of(2000,5,13,12,0,0,0,UTC),OffsetDateTime.of(2000,5,13,12,0,0,0,MIN));
    String message=factory.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + "  <2000-05-13T12:00Z>%n"+ "to have same time fields except timezone as:%n"+ "  <2000-05-13T12:00-18:00>%n"+ "but had not."));
  }
}
