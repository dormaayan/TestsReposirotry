/** 
 * @author Filip Hrisafov
 */
public class ShouldNotMatch_create_Test extends BaseTest {
  @Test public void should_create_error_message_with_default_predicate_description(){
    ErrorMessageFactory factory=shouldNotMatch("Yoda",color -> color.equals("green"),PredicateDescription.GIVEN);
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %nExpecting:%n  <\"Yoda\">%nnot to match given predicate." + ShouldNotMatch.ADVICE));
  }
  @Test public void should_create_error_message_with_predicate_description(){
    ErrorMessageFactory factory=shouldNotMatch("Yoda",(    String color) -> color.equals("green"),new PredicateDescription("green light saber"));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %nExpecting:%n  <\"Yoda\">%nnot to match 'green light saber' predicate."));
  }
  @Test public void should_fail_if_predicate_description_is_null(){
    assertThatNullPointerException().isThrownBy(() -> shouldNotMatch("Yoda",color -> color.equals("green"),null)).withMessage("The predicate description must not be null");
  }
}
