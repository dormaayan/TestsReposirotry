public class Assumptions_assumeThat_Test {
  @Test public void should_ignore_test_when_one_of_the_assumption_fails(){
    assumeThat("foo").isNotEmpty();
    assertThatExceptionOfType(AssumptionViolatedException.class).isThrownBy(() -> assumeThat("bar").isEmpty());
  }
  @Test public void should_run_test_when_all_assumptions_are_met(){
    assertThatCode(() -> {
      assumeThat("foo").isNotNull().isNotEmpty().isEqualTo("foo");
      assumeThat("bar").contains("ar").isNotBlank();
      assumeThat(asList("John","Doe","Jane","Doe")).as("test description").withFailMessage("error message").withRepresentation(UNICODE_REPRESENTATION).usingElementComparator(CaseInsensitiveStringComparator.instance).filteredOn(string -> string.length() == 4).containsExactly("JOHN","JANE");
    }
).doesNotThrowAnyException();
  }
}
