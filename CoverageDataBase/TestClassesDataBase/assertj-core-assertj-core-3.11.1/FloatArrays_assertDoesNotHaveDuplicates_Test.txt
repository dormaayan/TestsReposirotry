/** 
 * Tests for <code> {@link FloatArrays#assertDoesNotHaveDuplicates(AssertionInfo,float[])}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class FloatArrays_assertDoesNotHaveDuplicates_Test extends FloatArraysBaseTest {
  @Override protected void initActualArray(){
    actual=arrayOf(6f,8f);
  }
  @Test public void should_pass_if_actual_does_not_have_duplicates(){
    arrays.assertDoesNotHaveDuplicates(someInfo(),actual);
  }
  @Test public void should_pass_if_actual_is_empty(){
    arrays.assertDoesNotHaveDuplicates(someInfo(),emptyArray());
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertDoesNotHaveDuplicates(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_contains_duplicates(){
    AssertionInfo info=someInfo();
    actual=arrayOf(6f,8f,6f,8f);
    try {
      arrays.assertDoesNotHaveDuplicates(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotHaveDuplicates(actual,newLinkedHashSet(6f,8f)));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy(){
    arraysWithCustomComparisonStrategy.assertDoesNotHaveDuplicates(someInfo(),actual);
  }
  @Test public void should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is(){
    arraysWithCustomComparisonStrategy.assertDoesNotHaveDuplicates(someInfo(),emptyArray());
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arraysWithCustomComparisonStrategy.assertDoesNotHaveDuplicates(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    actual=arrayOf(6f,-8f,6f,-8f);
    try {
      arraysWithCustomComparisonStrategy.assertDoesNotHaveDuplicates(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotHaveDuplicates(actual,newLinkedHashSet(6f,-8f),absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
