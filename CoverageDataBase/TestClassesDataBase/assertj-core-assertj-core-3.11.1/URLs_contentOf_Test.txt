public class URLs_contentOf_Test {
  private final URL sampleResourceURL=ClassLoader.getSystemResource("utf8.txt");
  private final String expectedContent="A text file encoded in UTF-8, with diacritics:\né à";
  @Test public void should_throw_exception_if_url_not_found() throws MalformedURLException {
    File missingFile=new File("missing.txt");
    assertThat(missingFile.exists()).isFalse();
    assertThatExceptionOfType(UncheckedIOException.class).isThrownBy(() -> URLs.contentOf(missingFile.toURI().toURL(),Charset.defaultCharset()));
  }
  @Test public void should_load_resource_from_url_using_charset(){
    assertThat(URLs.contentOf(sampleResourceURL,StandardCharsets.UTF_8)).isEqualTo(expectedContent);
  }
  @Test public void should_load_resource_from_url_using_charset_name(){
    assertThat(URLs.contentOf(sampleResourceURL,"UTF-8")).isEqualTo(expectedContent);
  }
}
