/** 
 * Tests for <code> {@link Diff#diff(File,String,java.nio.charset.Charset)}</code>.
 * @author Olivier Michallat
 */
public class Diff_diff_File_String_Test {
  private static Diff diff;
  private static TextFileWriter writer;
  @BeforeAll public static void setUpOnce(){
    diff=new Diff();
    writer=TextFileWriter.instance();
  }
  private File actual;
  @BeforeEach public void setUp(){
    actual=Files.newTemporaryFile();
    actual.deleteOnExit();
  }
  @Test public void should_return_empty_diff_list_if_file_and_string_have_equal_content() throws IOException {
    String[] content=array("line0","line1");
    writer.write(actual,content);
    String expected=String.format("line0%nline1");
    List<Delta<String>> diffs=diff.diff(actual,expected,Charset.defaultCharset());
    assertThat(diffs).isEmpty();
  }
  @Test public void should_return_diffs_if_file_and_string_do_not_have_equal_content() throws IOException {
    writer.write(actual,StandardCharsets.UTF_8,"Touché");
    String expected="Touché";
    List<Delta<String>> diffs=diff.diff(actual,expected,StandardCharsets.ISO_8859_1);
    assertThat(diffs).hasSize(1);
    assertThat(diffs.get(0)).hasToString(format("Changed content at line 1:%n" + "expecting:%n" + "  [\"Touché\"]%n"+ "but was:%n"+ "  [\"TouchÃ©\"]%n"));
  }
  @Test public void should_return_diffs_if_content_of_actual_is_shorter_than_content_of_expected() throws IOException {
    writer.write(actual,"line_0");
    String expected=String.format("line_0%nline_1");
    List<Delta<String>> diffs=diff.diff(actual,expected,Charset.defaultCharset());
    assertThat(diffs).hasSize(1);
    assertThat(diffs.get(0)).hasToString(format("Missing content at line 2:%n" + "  [\"line_1\"]%n"));
  }
  @Test public void should_return_diffs_if_content_of_actual_is_longer_than_content_of_expected() throws IOException {
    writer.write(actual,"line_0","line_1");
    String expected="line_0";
    List<Delta<String>> diffs=diff.diff(actual,expected,Charset.defaultCharset());
    assertThat(diffs).hasSize(1);
    assertThat(diffs.get(0)).hasToString(format("Extra content at line 2:%n" + "  [\"line_1\"]%n"));
  }
}
