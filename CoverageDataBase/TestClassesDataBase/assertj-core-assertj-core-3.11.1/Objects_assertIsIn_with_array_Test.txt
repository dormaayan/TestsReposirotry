/** 
 * Tests for <code> {@link Objects#assertIsIn(AssertionInfo,Object,Object[])}</code>.
 * @author Joel Costigliola
 * @author Alex Ruiz
 * @author Yvonne Wang
 */
public class Objects_assertIsIn_with_array_Test extends ObjectsBaseTest {
  private static String[] values;
  @BeforeAll public static void setUpOnce(){
    values=array("Yoda","Leia");
  }
  @Test public void should_throw_error_if_array_is_null(){
    assertThatNullPointerException().isThrownBy(() -> {
      Object[] array=null;
      objects.assertIsIn(someInfo(),"Yoda",array);
    }
).withMessage(arrayIsNull());
  }
  @Test public void should_throw_error_if_array_is_empty(){
    assertThatIllegalArgumentException().isThrownBy(() -> objects.assertIsIn(someInfo(),"Yoda",emptyArray())).withMessage(arrayIsEmpty());
  }
  @Test public void should_pass_if_actual_is_in_array(){
    objects.assertIsIn(someInfo(),"Yoda",values);
  }
  @Test public void should_pass_if_actual_is_null_and_array_contains_null(){
    objects.assertIsIn(someInfo(),null,array("Yoda",null));
  }
  @Test public void should_fail_if_actual_is_not_in_array(){
    AssertionInfo info=someInfo();
    try {
      objects.assertIsIn(info,"Luke",values);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeIn("Luke",asList(values)));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_is_in_array_according_to_custom_comparison_strategy(){
    objectsWithCustomComparisonStrategy.assertIsIn(someInfo(),"YODA",values);
  }
  @Test public void should_fail_if_actual_is_not_in_array_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      objectsWithCustomComparisonStrategy.assertIsIn(info,"Luke",values);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeIn("Luke",asList(values),customComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
