/** 
 * Tests for <code> {@link org.assertj.core.internal.Maps#assertHasSameSizeAs(org.assertj.core.api.AssertionInfo,java.util.Map,java.util.Map)}</code> .
 * @author Adam Ruka
 */
public class Maps_assertHasSameSizeAs_with_Map_Test extends MapsBaseTest {
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=mapOf(entry("name","Yoda"),entry("job","Yedi Master"));
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> maps.assertHasSameSizeAs(someInfo(),null,mapOf(entry("name","Solo")))).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_other_is_null(){
    assertThatNullPointerException().isThrownBy(() -> maps.assertHasSameSizeAs(someInfo(),actual,(Map<?,?>)null)).withMessage("The Map to compare actual size with should not be null");
  }
  @Test public void should_fail_if_size_of_actual_is_not_equal_to_size_of_other(){
    AssertionInfo info=someInfo();
    Map<?,?> other=mapOf(entry("name","Solo"));
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> maps.assertHasSameSizeAs(info,actual,other)).withMessage(shouldHaveSameSizeAs(actual,actual.size(),other.size()).create(null,info.representation()));
  }
  @Test public void should_pass_if_size_of_actual_is_equal_to_expected_size(){
    maps.assertHasSameSizeAs(someInfo(),actual,mapOf(entry("name","Solo"),entry("job","Smuggler")));
  }
}
