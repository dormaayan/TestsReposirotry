/** 
 * Tests for <code> {@link ShouldBeInstanceOfAny#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code>.
 * @author Alex Ruiz
 */
public class ShouldNotBeInstanceOfAny_create_Test {
  private ErrorMessageFactory factory;
  @BeforeEach public void setUp(){
    Class<?>[] types={String.class,Object.class};
    factory=shouldNotBeInstanceOfAny("Yoda",types);
  }
  @Test public void should_create_error_message(){
    String message=factory.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + " <\"Yoda\">%n"+ "not to be an instance of any of these types:%n"+ " <[java.lang.String, java.lang.Object]>"));
  }
  @Test public void should_create_error_message_with_stack_trace_for_throwable(){
    IllegalArgumentException throwable=new IllegalArgumentException();
    Class<?>[] types={NullPointerException.class,IllegalArgumentException.class};
    String message=shouldNotBeInstanceOfAny(throwable,types).create();
    assertThat(message).isEqualTo(format("%nExpecting:%n" + " <\"" + getStackTrace(throwable) + "\">%n"+ "not to be an instance of any of these types:%n"+ " <[java.lang.NullPointerException, java.lang.IllegalArgumentException]>"));
  }
}
