public class CompletableFutureAssert_isNotCompletedExceptionally_Test extends BaseTest {
  @Test public void should_pass_if_completable_future_is_completed_exceptionally(){
    assertThat(CompletableFuture.completedFuture("done")).isNotCompletedExceptionally();
  }
  @Test public void should_fail_when_completable_future_is_null(){
    assertThatThrownBy(() -> assertThat((CompletableFuture<String>)null).isNotCompletedExceptionally()).isInstanceOf(AssertionError.class).hasMessage(format(actualIsNull()));
  }
  @Test public void should_fail_if_completable_future_is_not_completed_exceptionally(){
    CompletableFuture<String> future=new CompletableFuture<>();
    future.completeExceptionally(new RuntimeException());
    assertThatThrownBy(() -> assertThat(future).isNotCompletedExceptionally()).isInstanceOf(AssertionError.class).hasMessageStartingWith(format("%nExpecting%n  <CompletableFuture[Failed: java.lang.RuntimeException]%n")).hasMessageContaining("Caused by: java.lang.RuntimeException").hasMessageEndingWith(format("to not be completed exceptionally.%n%s",WARNING));
  }
}
