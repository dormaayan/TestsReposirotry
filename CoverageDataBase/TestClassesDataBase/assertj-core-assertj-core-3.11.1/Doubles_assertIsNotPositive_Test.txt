/** 
 * Tests for <code> {@link org.assertj.core.internal.Doubles#assertIsNotPositive(org.assertj.core.api.AssertionInfo,Comparable)}</code>.
 * @author Nicolas FranÃ§ois
 */
public class Doubles_assertIsNotPositive_Test extends DoublesBaseTest {
  @Test public void should_succeed_since_actual_is_not_positive(){
    doubles.assertIsNotPositive(someInfo(),-6d);
  }
  @Test public void should_succeed_since_actual_is_zero(){
    doubles.assertIsNotPositive(someInfo(),0d);
  }
  @Test public void should_fail_since_actual_is_positive(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doubles.assertIsNotPositive(someInfo(),6d)).withMessage(format("%nExpecting:%n <6.0>%nto be less than or equal to:%n <0.0> "));
  }
  @Test public void should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doublesWithAbsValueComparisonStrategy.assertIsNotPositive(someInfo(),-1d)).withMessage(format("%nExpecting:%n <-1.0>%nto be less than or equal to:%n <0.0> when comparing values using AbsValueComparator"));
  }
  @Test public void should_fail_since_actual_is_positive_according_to_custom_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doublesWithAbsValueComparisonStrategy.assertIsNotPositive(someInfo(),1d)).withMessage(format("%nExpecting:%n <1.0>%nto be less than or equal to:%n <0.0> when comparing values using AbsValueComparator"));
  }
}
