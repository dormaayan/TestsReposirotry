/** 
 * Tests for <code> {@link Shorts#assertIsNotZero(AssertionInfo,Comparable)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Shorts_assertIsNotZero_Test extends ShortsBaseTest {
  @Test public void should_succeed_since_actual_is_not_zero(){
    shorts.assertIsNotZero(someInfo(),(short)2);
  }
  @Test public void should_fail_since_actual_is_zero(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> shorts.assertIsNotZero(someInfo(),(short)0)).withMessage(format("%nExpecting:%n <0>%nnot to be equal to:%n <0>%n"));
  }
  @Test public void should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is(){
    shortsWithAbsValueComparisonStrategy.assertIsNotZero(someInfo(),(short)1);
  }
  @Test public void should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> shortsWithAbsValueComparisonStrategy.assertIsNotZero(someInfo(),(short)0)).withMessage(format("%nExpecting:%n <0>%nnot to be equal to:%n <0>%n"));
  }
}
