/** 
 * Tests for <code> {@link org.assertj.core.internal.Urls#assertHasQuery(org.assertj.core.api.AssertionInfo,java.net.URL,String)}  </code>.
 * @author Alexander Bischof
 */
public class Urls_assertHasQuery_Test extends UrlsBaseTest {
  @Test public void should_pass_if_actual_url_has_the_expected_query() throws MalformedURLException {
    urls.assertHasQuery(info,new URL("http://www.helloworld.org/index.html?type=test"),"type=test");
  }
  @Test public void should_pass_if_actual_url_has_no_query_and_given_is_null() throws MalformedURLException {
    urls.assertHasQuery(info,new URL("http://www.helloworld.org/index.html"),null);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> urls.assertHasQuery(info,null,"http://www.helloworld.org/index.html?type=test")).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_URL_query_is_not_the_given_query() throws MalformedURLException {
    AssertionInfo info=someInfo();
    URL url=new URL("http://assertj.org/news?type=beta");
    String expectedQuery="type=final";
    try {
      urls.assertHasQuery(info,url,expectedQuery);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveQuery(url,expectedQuery));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_URL_has_no_query_and_expected_query_is_not_null() throws MalformedURLException {
    AssertionInfo info=someInfo();
    URL url=new URL("http://assertj.org/news");
    String expectedQuery="type=final";
    try {
      urls.assertHasQuery(info,url,expectedQuery);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveQuery(url,expectedQuery));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_URL_has_a_query_and_expected_query_is_null() throws MalformedURLException {
    AssertionInfo info=someInfo();
    URL url=new URL("http://assertj.org/news?type=beta");
    String expectedQuery=null;
    try {
      urls.assertHasQuery(info,url,expectedQuery);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveQuery(url,expectedQuery));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
