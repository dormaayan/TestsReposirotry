/** 
 * Tests for <code> {@link FloatArrays#assertIsSortedAccordingToComparator(AssertionInfo,float[],Comparator)}</code>
 * @author Joel Costigliola
 */
public class FloatArrays_assertIsSortedAccordingToComparator_Test extends FloatArraysBaseTest {
  private Comparator<Float> floatDescendingOrderComparator;
  private Comparator<Float> floatSquareComparator;
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=new float[]{4.0f,3.0f,2.0f,2.0f,1.0f};
    floatDescendingOrderComparator=(float1,float2) -> -float1.compareTo(float2);
    floatSquareComparator=(float1,float2) -> new Float(float1 * float1).compareTo(new Float(float2 * float2));
  }
  @Test public void should_pass_if_actual_is_sorted_according_to_given_comparator(){
    arrays.assertIsSortedAccordingToComparator(someInfo(),actual,floatDescendingOrderComparator);
  }
  @Test public void should_pass_if_actual_is_empty_whatever_given_comparator_is(){
    arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),floatDescendingOrderComparator);
    arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),floatSquareComparator);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertIsSortedAccordingToComparator(someInfo(),null,floatDescendingOrderComparator)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_comparator_is_null(){
    assertThatNullPointerException().isThrownBy(() -> arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),null));
  }
  @Test public void should_fail_if_actual_is_not_sorted_according_to_given_comparator(){
    AssertionInfo info=someInfo();
    actual=new float[]{3.0f,2.0f,1.0f,9.0f};
    try {
      arrays.assertIsSortedAccordingToComparator(info,actual,floatDescendingOrderComparator);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeSortedAccordingToGivenComparator(2,actual,floatDescendingOrderComparator));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
