public class Objects_assertHasToString_Test extends ObjectsBaseTest {
  private Person actual;
  @BeforeEach @Override public void setUp(){
    super.setUp();
    actual=mock(Person.class);
    when(actual.toString()).thenReturn("foo");
  }
  @Test public void should_pass_if_actual_toString_is_the_expected_String(){
    objects.assertHasToString(someInfo(),actual,"foo");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> objects.assertHasToString(someInfo(),null,"foo")).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_toString_is_not_the_expected_String(){
    AssertionInfo info=someInfo();
    try {
      objects.assertHasToString(info,actual,"bar");
      failBecauseExpectedAssertionErrorWasNotThrown();
    }
 catch (    AssertionError err) {
      verify(failures).failure(info,shouldHaveToString(actual,"bar"));
    }
  }
}
