/** 
 * Base class for testing <code> {@link Files}</code>, set up diff and failures attributes (which is why it is in <code>org.assertj.core.internal</code> package.
 * @author Joel Costigliola
 */
public class FilesBaseTest {
  protected static final AssertionInfo INFO=someInfo();
  protected File actual;
  protected Failures failures;
  protected Files files;
  protected Files unMockedFiles;
  protected Diff diff;
  protected Delta<String> delta;
  protected BinaryDiff binaryDiff;
  protected NioFilesWrapper nioFilesWrapper;
  @BeforeEach public void setUp(){
    actual=mock(File.class);
    failures=spy(new Failures());
    files=new Files();
    unMockedFiles=new Files();
    files.failures=failures;
    diff=mock(Diff.class);
    delta=mock(Delta.class);
    when(delta.toString()).thenReturn("Extra lines at line 2 : [line1a, line1b]");
    files.diff=diff;
    binaryDiff=mock(BinaryDiff.class);
    files.binaryDiff=binaryDiff;
    nioFilesWrapper=mock(NioFilesWrapper.class);
    files.nioFilesWrapper=nioFilesWrapper;
  }
  protected static void failIfStreamIsOpen(  InputStream stream){
    try {
      assertThat(stream.read()).as("Stream should be closed").isNegative();
    }
 catch (    IOException e) {
      assertThat(e).hasNoCause().hasMessage("Stream closed");
    }
  }
}
