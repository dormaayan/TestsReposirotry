/** 
 * Tests for <code> {@link Integers#assertGreaterThanOrEqualTo(AssertionInfo,Integer,int)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Integers_assertGreaterThanOrEqualTo_Test extends IntegersBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> integers.assertGreaterThanOrEqualTo(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other(){
    integers.assertGreaterThanOrEqualTo(someInfo(),8,6);
  }
  @Test public void should_pass_if_actual_is_equal_to_other(){
    integers.assertGreaterThanOrEqualTo(someInfo(),6,6);
  }
  @Test public void should_fail_if_actual_is_less_than_other(){
    AssertionInfo info=someInfo();
    try {
      integers.assertGreaterThanOrEqualTo(info,6,8);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual(6,8));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> integersWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy(){
    integersWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),-8,6);
  }
  @Test public void should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy(){
    integersWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),-6,6);
  }
  @Test public void should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      integersWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(info,6,-8);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual(6,-8,absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
