/** 
 * Tests for <code> {@link Doubles#assertIsNegative(AssertionInfo,Double)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Doubles_assertIsNegative_Test extends DoublesBaseTest {
  @Test public void should_succeed_since_actual_is_negative(){
    doubles.assertIsNegative(someInfo(),-6.0d);
  }
  @Test public void should_fail_since_actual_is_not_negative(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doubles.assertIsNegative(someInfo(),6.0d)).withMessage(format("%nExpecting:%n <6.0>%nto be less than:%n <0.0> "));
  }
  @Test public void should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doublesWithAbsValueComparisonStrategy.assertIsNegative(someInfo(),-6.0d)).withMessage(format("%nExpecting:%n <-6.0>%nto be less than:%n <0.0> when comparing values using AbsValueComparator"));
  }
  @Test public void should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy2(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doublesWithAbsValueComparisonStrategy.assertIsNegative(someInfo(),6.0d)).withMessage(format("%nExpecting:%n <6.0>%nto be less than:%n <0.0> when comparing values using AbsValueComparator"));
  }
}
