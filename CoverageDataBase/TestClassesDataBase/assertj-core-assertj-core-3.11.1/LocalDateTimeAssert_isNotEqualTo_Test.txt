/** 
 * Only test String based assertion (tests with  {@link LocalDateTime} are already defined in assertj-core)
 * @author Joel Costigliola
 * @author Marcin ZajÄ…czkowski
 */
public class LocalDateTimeAssert_isNotEqualTo_Test extends LocalDateTimeAssertBaseTest {
  @Test public void test_isNotEqualTo_assertion(){
    assertThat(REFERENCE).isNotEqualTo(REFERENCE.plusDays(1).toString());
    assertThatThrownBy(() -> assertThat(REFERENCE).isNotEqualTo(REFERENCE.toString())).isInstanceOf(AssertionError.class);
  }
  @Test public void test_isNotEqualTo_assertion_error_message(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> {
      assertThat(LocalDateTime.of(2000,1,5,3,0,5)).isNotEqualTo(LocalDateTime.of(2000,1,5,3,0,5).toString());
    }
).withMessage(format("%nExpecting:%n <2000-01-05T03:00:05>%nnot to be equal to:%n <2000-01-05T03:00:05>%n"));
  }
  @Test public void should_fail_if_dateTime_as_string_parameter_is_null(){
    assertThatIllegalArgumentException().isThrownBy(() -> assertThat(LocalDateTime.now()).isNotEqualTo((String)null)).withMessage("The String representing the LocalDateTime to compare actual with should not be null");
  }
}
