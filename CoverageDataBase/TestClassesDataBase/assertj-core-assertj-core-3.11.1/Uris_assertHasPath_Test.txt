public class Uris_assertHasPath_Test extends UrisBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> uris.assertHasPath(info,null,"path")).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_uri_has_the_given_path() throws URISyntaxException {
    uris.assertHasPath(info,new URI("http://example.com/pages/"),"/pages/");
    uris.assertHasPath(info,new URI("http://example.com"),"");
  }
  @Test public void should_pass_if_actual_uri_has_no_path_and_the_given_path_is_null() throws URISyntaxException {
    uris.assertHasPath(info,new URI("mailto:java-net@java.sun.com"),null);
  }
  @Test public void should_fail_if_actual_URI_path_is_not_the_given_path() throws URISyntaxException {
    AssertionInfo info=someInfo();
    URI uri=new URI("http://example.com/pages/");
    String expectedPath="/news/";
    try {
      uris.assertHasPath(info,uri,expectedPath);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHavePath(uri,expectedPath));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_URI_has_path_and_the_given_path_null() throws URISyntaxException {
    AssertionInfo info=someInfo();
    URI uri=new URI("http://example.com/pages/");
    String expectedPath=null;
    try {
      uris.assertHasPath(info,uri,expectedPath);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHavePath(uri,expectedPath));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_URI_has_no_path_and_the_given_path_is_not_null() throws URISyntaxException {
    AssertionInfo info=someInfo();
    URI uri=new URI("mailto:java-net@java.sun.com");
    String expectedPath="";
    try {
      uris.assertHasPath(info,uri,expectedPath);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHavePath(uri,expectedPath));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
