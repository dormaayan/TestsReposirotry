/** 
 * Tests for <code> {@link BooleanArrays#assertContainsOnly(AssertionInfo,boolean[],boolean[])}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class BooleanArrays_assertContainsOnly_Test extends BooleanArraysBaseTest {
  @Test public void should_pass_if_actual_contains_given_values_only(){
    arrays.assertContainsOnly(someInfo(),actual,arrayOf(true,false));
  }
  @Test public void should_pass_if_actual_contains_given_values_only_in_different_order(){
    arrays.assertContainsOnly(someInfo(),actual,arrayOf(false,true));
  }
  @Test public void should_pass_if_actual_contains_given_values_only_more_than_once(){
    actual=arrayOf(true,false,true,false);
    arrays.assertContainsOnly(someInfo(),actual,arrayOf(true,false));
  }
  @Test public void should_pass_if_actual_contains_given_values_only_even_if_duplicated(){
    arrays.assertContainsOnly(someInfo(),actual,arrayOf(true,false,true,false));
  }
  @Test public void should_pass_if_actual_and_given_values_are_empty(){
    actual=emptyArray();
    arrays.assertContainsOnly(someInfo(),actual,emptyArray());
  }
  @Test public void should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertContainsOnly(someInfo(),actual,emptyArray()));
  }
  @Test public void should_throw_error_if_array_of_values_to_look_for_is_null(){
    assertThatNullPointerException().isThrownBy(() -> arrays.assertContainsOnly(someInfo(),actual,null)).withMessage(valuesToLookForIsNull());
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertContainsOnly(someInfo(),null,arrayOf(true))).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_does_not_contain_given_values_only(){
    AssertionInfo info=someInfo();
    actual=arrayOf(true);
    boolean[] expected={false};
    try {
      arrays.assertContainsOnly(info,actual,expected);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldContainOnly(actual,expected,newArrayList(false),newArrayList(true)));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
