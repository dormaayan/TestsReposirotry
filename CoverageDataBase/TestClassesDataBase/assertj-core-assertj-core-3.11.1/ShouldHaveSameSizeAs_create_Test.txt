/** 
 * Tests for <code> {@link ShouldHaveSameSizeAs#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code>.
 * @author Nicolas Fran√ßois
 */
public class ShouldHaveSameSizeAs_create_Test {
  private ErrorMessageFactory factory;
  @BeforeEach public void setUp(){
    factory=shouldHaveSameSizeAs(newArrayList('a','b'),2,4);
  }
  @Test public void should_create_error_message(){
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Actual and expected should have same size but actual size is:%n" + " <2>%n"+ "while expected is:%n"+ " <4>%n"+ "Actual was:%n"+ "<['a', 'b']>"));
  }
  @Test public void should_create_error_message_with_hexadecimal_representation(){
    String message=factory.create(new TextDescription("Test"),new HexadecimalRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Actual and expected should have same size but actual size is:%n" + " <2>%n"+ "while expected is:%n"+ " <4>%n"+ "Actual was:%n<['0x0061', '0x0062']>"));
  }
}
