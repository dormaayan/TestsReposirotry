public class InstantAssert_isNotEqualTo_Test extends InstantAssertBaseTest {
  @Test public void test_isNotEqualTo_assertion(){
    assertThat(REFERENCE).isNotEqualTo(REFERENCE.plusSeconds(1).toString());
    assertThatThrownBy(() -> assertThat(REFERENCE).isNotEqualTo(REFERENCE.toString())).isInstanceOf(AssertionError.class);
  }
  @Test public void test_isNotEqualTo_assertion_error_message(){
    Instant instantReference=Instant.parse("2007-12-03T10:15:30.00Z");
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(instantReference).isNotEqualTo(instantReference.toString())).withMessage(format("%nExpecting:%n <2007-12-03T10:15:30Z>%nnot to be equal to:%n <2007-12-03T10:15:30Z>%n"));
  }
  @Test public void should_fail_if_date_as_string_parameter_is_null(){
    assertThatIllegalArgumentException().isThrownBy(() -> assertThat(Instant.now()).isNotEqualTo((String)null)).withMessage("The String representing the Instant to compare actual with should not be null");
  }
}
