public class ExpectThrowableAssert_isThrownBy_Test {
  @Test public void should_build_ExpectThrowableAssert_with_exception_thrown_by_lambda(){
    NoSuchElementException ex=new NoSuchElementException("no such element!");
    assertThatExceptionOfType(NoSuchElementException.class).isThrownBy(() -> {
      throw ex;
    }
).isSameAs(ex).withNoCause();
  }
  @Test public void should_allow_to_check_exception_thrown_by_lambda(){
    Throwable exceptionWithCause=new NoSuchElementException("this too").initCause(new IllegalArgumentException("The cause"));
    assertThatExceptionOfType(NoSuchElementException.class).isThrownBy(() -> {
      throw exceptionWithCause;
    }
).withMessage("this too").withMessage("this %s","too").withMessageStartingWith("this").withMessageEndingWith("too").withMessageMatching(".*is.*").withStackTraceContaining("this").withCauseExactlyInstanceOf(IllegalArgumentException.class).withCauseInstanceOf(IllegalArgumentException.class);
  }
  @Test public void should_fail_if_nothing_is_thrown_by_lambda(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThatExceptionOfType(NoSuchElementException.class).isThrownBy(() -> {
    }
)).withMessage(format("%nExpecting code to raise a throwable."));
  }
}
