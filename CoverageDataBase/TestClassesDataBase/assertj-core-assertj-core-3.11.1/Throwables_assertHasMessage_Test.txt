/** 
 * Tests for <code> {@link Throwables#assertHasMessage(AssertionInfo,Throwable,String)}</code>.
 * @author Joel Costigliola
 */
public class Throwables_assertHasMessage_Test extends ThrowablesBaseTest {
  @Test public void should_pass_if_actual_has_expected_message(){
    throwables.assertHasMessage(someInfo(),actual,"Throwable message");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> throwables.assertHasMessage(someInfo(),null,"Throwable message")).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_has_not_expected_message(){
    AssertionInfo info=someInfo();
    try {
      throwables.assertHasMessage(info,actual,"expected message");
      fail("AssertionError expected");
    }
 catch (    AssertionError err) {
      verify(failures).failure(info,shouldHaveMessage(actual,"expected message"),"Throwable message","expected message");
    }
  }
}
