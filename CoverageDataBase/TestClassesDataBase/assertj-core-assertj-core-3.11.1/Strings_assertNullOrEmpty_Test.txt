/** 
 * Tests for <code> {@link Strings#assertNullOrEmpty(AssertionInfo,CharSequence)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Strings_assertNullOrEmpty_Test extends StringsBaseTest {
  @Test public void should_fail_if_actual_is_not_null_and_is_not_empty(){
    AssertionInfo info=someInfo();
    try {
      strings.assertNullOrEmpty(info,"Yoda");
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeNullOrEmpty("Yoda"));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_is_null(){
    strings.assertNullOrEmpty(someInfo(),null);
  }
  @Test public void should_pass_if_actual_is_empty(){
    strings.assertNullOrEmpty(someInfo(),"");
  }
  @Test public void should_fail_if_actual_is_not_null_and_is_not_empty_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    try {
      stringsWithCaseInsensitiveComparisonStrategy.assertNullOrEmpty(info,"Yoda");
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeNullOrEmpty("Yoda"));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    stringsWithCaseInsensitiveComparisonStrategy.assertNullOrEmpty(someInfo(),null);
  }
  @Test public void should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is(){
    stringsWithCaseInsensitiveComparisonStrategy.assertNullOrEmpty(someInfo(),"");
  }
}
