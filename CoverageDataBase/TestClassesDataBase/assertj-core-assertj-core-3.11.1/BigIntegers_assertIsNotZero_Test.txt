/** 
 * Tests for <code> {@link BigIntegers#assertIsNotZero(AssertionInfo,BigInteger)}</code>.
 */
public class BigIntegers_assertIsNotZero_Test extends BigIntegersBaseTest {
  @Test public void should_succeed_since_actual_is_zero(){
    numbers.assertIsNotZero(someInfo(),BigInteger.ONE);
  }
  @Test public void should_fail_since_actual_is_not_zero(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> numbers.assertIsNotZero(someInfo(),BigInteger.ZERO)).withMessage(format("%nExpecting:%n <0>%nnot to be equal to:%n <0>%n"));
  }
  @Test public void should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is(){
    numbersWithComparatorComparisonStrategy.assertIsNotZero(someInfo(),BigInteger.ONE);
  }
  @Test public void should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> numbersWithComparatorComparisonStrategy.assertIsNotZero(someInfo(),BigInteger.ZERO)).withMessage(format("%nExpecting:%n <0>%nnot to be equal to:%n <0>%n"));
  }
}
