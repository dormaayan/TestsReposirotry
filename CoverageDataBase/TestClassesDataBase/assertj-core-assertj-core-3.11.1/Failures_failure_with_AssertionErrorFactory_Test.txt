/** 
 * Tests for <code> {@link Failures#failure(AssertionInfo,AssertionErrorFactory)}</code>.
 * @author Alex Ruiz
 * @author Yvonne Wang
 */
public class Failures_failure_with_AssertionErrorFactory_Test {
  private WritableAssertionInfo info;
  private AssertionErrorFactory errorFactory;
  private Failures failures;
  @BeforeEach public void setUp(){
    info=new WritableAssertionInfo();
    errorFactory=mock(AssertionErrorFactory.class);
    failures=Failures.instance();
  }
  @Test public void should_create_own_AssertionError_when_overriding_error_message_is_specified(){
    info.overridingErrorMessage("my message");
    AssertionError failure=failures.failure(info,errorFactory);
    assertThat(failure).hasMessage("my message");
  }
  @Test public void should_use_AssertionErrorFactory_when_overriding_error_message_is_not_specified(){
    MyOwnAssertionError expectedError=new MyOwnAssertionError("[description] my message");
    Description description=new TestDescription("description");
    info.description(description);
    when(errorFactory.newAssertionError(description,info.representation())).thenReturn(expectedError);
    AssertionError failure=failures.failure(info,errorFactory);
    assertThat(failure).isSameAs(expectedError);
  }
private static class MyOwnAssertionError extends AssertionError {
    private static final long serialVersionUID=1L;
    MyOwnAssertionError(    String message){
      super(message);
    }
  }
}
