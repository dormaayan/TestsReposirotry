/** 
 * Tests for <code> {@link org.assertj.core.error.ShouldBeEqualIgnoringNanos#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code>.
 * @author Alexander Bischof
 */
public class ShouldBeEqualIgnoringNanos_create_Test {
  private ErrorMessageFactory factory;
  @Test public void should_create_error_message_for_LocalTime(){
    factory=shouldBeEqualIgnoringNanos(LocalTime.of(12,0),LocalTime.of(13,0));
    String message=factory.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + "  <12:00>%n"+ "to have same hour, minute and second as:%n"+ "  <13:00>%n"+ "but had not."));
  }
  @Test public void should_create_error_message_for_OffsetTime(){
    factory=shouldBeEqualIgnoringNanos(OffsetTime.of(12,0,0,0,ZoneOffset.UTC),OffsetTime.of(13,0,0,0,ZoneOffset.UTC));
    String message=factory.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + "  <12:00Z>%n"+ "to have same hour, minute and second as:%n"+ "  <13:00Z>%n"+ "but had not."));
  }
}
