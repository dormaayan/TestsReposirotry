/** 
 * Tests for  {@link ComparatorBasedComparisonStrategy#duplicatesFrom(java.util.Collection)}.<br>
 * @author Joel Costigliola
 */
public class ComparatorBasedComparisonStrategy_duplicatesFrom_Test extends AbstractTest_ComparatorBasedComparisonStrategy {
  @Test public void should_return_existing_duplicates(){
    Iterable<?> duplicates=caseInsensitiveComparisonStrategy.duplicatesFrom(newArrayList("Merry","Frodo","Merry","Sam","FrODO",null,null));
    assertThat(sizeOf(duplicates)).isEqualTo(3);
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(duplicates,"frodo")).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(duplicates,"MERRY")).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(duplicates,null)).isTrue();
  }
  @Test public void should_not_return_any_duplicates(){
    Iterable<?> duplicates=caseInsensitiveComparisonStrategy.duplicatesFrom(newArrayList("Frodo","Sam","Gandalf"));
    assertThat(isNullOrEmpty(duplicates)).isTrue();
  }
  @Test public void should_not_return_any_duplicates_if_collection_is_empty(){
    Iterable<?> duplicates=caseInsensitiveComparisonStrategy.duplicatesFrom(new ArrayList<>());
    assertThat(isNullOrEmpty(duplicates)).isTrue();
  }
  @Test public void should_not_return_any_duplicates_if_collection_is_null(){
    Iterable<?> duplicates=caseInsensitiveComparisonStrategy.duplicatesFrom(null);
    assertThat(isNullOrEmpty(duplicates)).isTrue();
  }
}
