/** 
 * Tests for <code> {@link Bytes#assertIsNegative(AssertionInfo,Comparable)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Bytes_assertIsZero_Test extends BytesBaseTest {
  @BeforeEach @Override public void setUp(){
    super.setUp();
    resetFailures();
  }
  @Test public void should_succeed_since_actual_is_zero(){
    bytes.assertIsZero(someInfo(),(byte)0x00);
  }
  @Test public void should_fail_since_actual_is_not_zero(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytes.assertIsZero(someInfo(),(byte)2)).withMessage(format("%nExpecting:%n <2>%nto be equal to:%n <0>%nbut was not."));
  }
  @Test public void should_fail_since_actual_is_not_zero_in_hex_representation(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytes.assertIsZero(someHexInfo(),(byte)0x02)).withMessage(format("%nExpecting:%n <0x02>%nto be equal to:%n <0x00>%nbut was not."));
  }
  @Test public void should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is(){
    bytesWithAbsValueComparisonStrategy.assertIsZero(someInfo(),(byte)0);
  }
  @Test public void should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is_in_hex_representation(){
    bytesWithAbsValueComparisonStrategy.assertIsZero(someHexInfo(),(byte)0x00);
  }
  @Test public void should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytesWithAbsValueComparisonStrategy.assertIsZero(someInfo(),(byte)1)).withMessage(format("%nExpecting:%n <1>%nto be equal to:%n <0>%nbut was not."));
  }
  @Test public void should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is_in_hex_representation(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytesWithAbsValueComparisonStrategy.assertIsZero(someHexInfo(),(byte)0x01)).withMessage(format("%nExpecting:%n <0x01>%nto be equal to:%n <0x00>%nbut was not."));
  }
}
