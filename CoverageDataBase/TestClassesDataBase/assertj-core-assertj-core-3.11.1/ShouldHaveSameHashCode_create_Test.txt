public class ShouldHaveSameHashCode_create_Test {
  @Test public void should_create_error_message(){
    Object actual=new FixedHashCode(123);
    Object expected=new FixedHashCode(456);
    String message=shouldHaveSameHashCode(actual,expected).create(new TextDescription("Test"),STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting%n" + "  <FixedHashCode[code=123]>%n"+ "to have the same hash code as:%n"+ "  <FixedHashCode[code=456]>%n"+ "but actual hash code is%n"+ "  <123>%n"+ "while expected hash code was:%n"+ "  <456>"));
  }
private static class FixedHashCode {
    private int code;
    public FixedHashCode(    int code){
      this.code=code;
    }
    @Override public int hashCode(){
      return code;
    }
    @Override public boolean equals(    Object obj){
      if (this == obj)       return true;
      if (obj == null)       return false;
      if (getClass() != obj.getClass())       return false;
      FixedHashCode other=(FixedHashCode)obj;
      if (code != other.code)       return false;
      return true;
    }
    @Override public String toString(){
      return String.format("FixedHashCode[code=%s]",code);
    }
  }
}
