public class CompletableFutureAssert_isCancelled_Test extends BaseTest {
  @Test public void should_pass_if_completable_future_is_cancelled(){
    CompletableFuture<String> future=new CompletableFuture<>();
    future.cancel(true);
    assertThat(future).isCancelled();
  }
  @Test public void should_fail_when_completable_future_is_null(){
    assertThatThrownBy(() -> assertThat((CompletableFuture<String>)null).isCancelled()).isInstanceOf(AssertionError.class).hasMessage(format(actualIsNull()));
  }
  @Test public void should_fail_if_completable_future_is_not_cancelled(){
    CompletableFuture<String> future=new CompletableFuture<>();
    assertThatThrownBy(() -> assertThat(future).isCancelled()).isInstanceOf(AssertionError.class).hasMessage(shouldBeCancelled(future).create());
  }
}
