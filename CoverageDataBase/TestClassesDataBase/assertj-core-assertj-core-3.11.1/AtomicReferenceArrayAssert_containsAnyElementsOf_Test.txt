public class AtomicReferenceArrayAssert_containsAnyElementsOf_Test extends AtomicReferenceArrayAssertBaseTest {
  private final List<Object> iterable=Arrays.asList(new Object(),"bar");
  @Override protected AtomicReferenceArrayAssert<Object> invoke_api_method(){
    return assertions.containsAnyElementsOf(iterable);
  }
  @Override protected void verify_internal_effects(){
    verify(arrays).assertContainsAnyOf(info(),internalArray(),iterable.toArray());
  }
  @Test public void should_allow_assertion_on_atomic_reference_array(){
    AtomicReferenceArray<Object> objectArray=new AtomicReferenceArray<>(array("foo","bar"));
    AtomicReferenceArray<String> stringArray=new AtomicReferenceArray<>(array("foo","bar"));
    assertThat(objectArray).containsAnyElementsOf(list("foo","baz"));
    assertThat(stringArray).containsAnyElementsOf(list("foo","baz"));
  }
}
