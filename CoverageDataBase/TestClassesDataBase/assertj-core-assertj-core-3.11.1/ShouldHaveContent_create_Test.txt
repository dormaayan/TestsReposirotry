public class ShouldHaveContent_create_Test {
  private static final String DIFF="diff !";
  @Test public void should_create_error_message(){
    final FakeFile file=new FakeFile("xyz");
    @SuppressWarnings("unchecked") Delta<String> delta=mock(Delta.class);
    when(delta.toString()).thenReturn(DIFF);
    List<Delta<String>> diffs=Lists.newArrayList(delta);
    ErrorMessageFactory factory=shouldHaveContent(file,defaultCharset(),diffs);
    String message=factory.create(new TextDescription("Test"),CONFIGURATION_PROVIDER.representation());
    assertThat(message).isEqualTo(format("[Test] %n" + "File:%n" + "  <xyz>%n"+ "read with charset <%s> does not have the expected content:%n%n"+ DIFF,defaultCharset().name()));
  }
}
