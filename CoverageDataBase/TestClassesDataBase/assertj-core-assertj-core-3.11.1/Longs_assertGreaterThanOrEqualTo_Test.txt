/** 
 * Tests for <code> {@link Longs#assertGreaterThanOrEqualTo(AssertionInfo,Long,long)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Longs_assertGreaterThanOrEqualTo_Test extends LongsBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> longs.assertGreaterThanOrEqualTo(someInfo(),null,8L)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other(){
    longs.assertGreaterThanOrEqualTo(someInfo(),8L,6L);
  }
  @Test public void should_pass_if_actual_is_equal_to_other(){
    longs.assertGreaterThanOrEqualTo(someInfo(),6L,6L);
  }
  @Test public void should_fail_if_actual_is_less_than_other(){
    AssertionInfo info=someInfo();
    try {
      longs.assertGreaterThanOrEqualTo(info,6L,8L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual(6L,8L));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> longsWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),null,8L)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy(){
    longsWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),-8L,6L);
  }
  @Test public void should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy(){
    longsWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),-6L,6L);
  }
  @Test public void should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      longsWithAbsValueComparisonStrategy.assertGreaterThanOrEqualTo(info,6L,-8L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual(6L,-8L,absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
