public class ObjectAssert_flatExtracting_Test {
  private Map<String,List<String>> mapOfList;
  @BeforeEach public void beforeEachTest(){
    mapOfList=new LinkedHashMap<>();
    mapOfList.put("name",asList("Dave","Jeff"));
    mapOfList.put("job",asList("Plumber","Builder"));
    mapOfList.put("city",asList("Dover","Boston","Paris"));
  }
  @Test public void should_allow_assertions_on_flattened_values_extracted_from_given_map_keys(){
    assertThat(mapOfList).flatExtracting("name","job","city").containsExactly("Dave","Jeff","Plumber","Builder","Dover","Boston","Paris");
    assertThat(mapOfList).flatExtracting("city","job","name").containsExactly("Dover","Boston","Paris","Plumber","Builder","Dave","Jeff");
  }
  @Test public void should_extract_null_from_unknown_key(){
    assertThat(mapOfList).flatExtracting("name","id","city").containsExactly("Dave","Jeff",null,"Dover","Boston","Paris");
    assertThat(mapOfList).flatExtracting("foo","bar").containsOnlyNulls();
  }
}
