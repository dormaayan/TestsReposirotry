/** 
 * Tests for <code> {@link Characters#assertGreaterThanOrEqualTo(AssertionInfo,Character,char)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Characters_assertGreaterThanOrEqualTo_Test extends CharactersBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> characters.assertGreaterThanOrEqualTo(someInfo(),null,'a')).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other(){
    characters.assertGreaterThanOrEqualTo(someInfo(),'b','a');
  }
  @Test public void should_pass_if_actual_is_equal_to_other(){
    characters.assertGreaterThanOrEqualTo(someInfo(),'b','b');
  }
  @Test public void should_fail_if_actual_is_less_than_other(){
    AssertionInfo info=someInfo();
    try {
      characters.assertGreaterThanOrEqualTo(info,'a','b');
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual('a','b'));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_according_to_custom_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> charactersWithCaseInsensitiveComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),null,'a')).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy(){
    charactersWithCaseInsensitiveComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),'B','a');
  }
  @Test public void should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy(){
    charactersWithCaseInsensitiveComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),'B','b');
  }
  @Test public void should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      charactersWithCaseInsensitiveComparisonStrategy.assertGreaterThanOrEqualTo(info,'a','B');
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual('a','B',caseInsensitiveComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
