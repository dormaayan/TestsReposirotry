/** 
 * Tests for  {@link ComparatorBasedComparisonStrategy#toString()}.
 * @author Joel Costigliola
 */
public class ComparatorBasedComparisonStrategy_toString_Test extends AbstractTest_ComparatorBasedComparisonStrategy {
  @Test public void toString_with_anonymous_comparator(){
    ComparatorBasedComparisonStrategy lengthComparisonStrategy=new ComparatorBasedComparisonStrategy(new Comparator<String>(){
      @Override public int compare(      String s1,      String s2){
        return s1.length() - s2.length();
      }
    }
);
    assertThat(lengthComparisonStrategy).hasToString("'anonymous comparator class'");
  }
  @Test public void toString_with_anonymous_comparator_with_description(){
    ComparatorBasedComparisonStrategy namedAnonymousComparator=new ComparatorBasedComparisonStrategy(new Comparator<String>(){
      @Override public int compare(      String s1,      String s2){
        return s1.compareTo(s2);
      }
    }
,"Mr. Comparator");
    assertThat(namedAnonymousComparator).hasToString("'Mr. Comparator'");
  }
  @Test public void toString_with_non_anonymous_comparator(){
    assertThat(caseInsensitiveComparisonStrategy).hasToString("CaseInsensitiveStringComparator");
  }
  @Test public void toString_with_provided_comparator_name(){
    assertThat(describedComparisonStrategy).hasToString("'Case-insensitive comparator for String class'");
  }
}
