/** 
 * Tests for <code> {@link ByteArrays#assertIsSortedAccordingToComparator(AssertionInfo,byte[],Comparator)}</code>
 * @author Joel Costigliola
 */
public class ByteArrays_assertIsSortedAccordingToComparator_Test extends ByteArraysBaseTest {
  private Comparator<Byte> byteDescendingOrderComparator;
  private Comparator<Byte> byteAscendingOrderComparator;
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=new byte[]{4,3,2,2,1};
    byteDescendingOrderComparator=(byte1,byte2) -> -byte1.compareTo(byte2);
    byteAscendingOrderComparator=(    Byte byte1,    Byte byte2) -> byte1.compareTo(byte2);
  }
  @Test public void should_pass_if_actual_is_sorted_according_to_given_comparator(){
    arrays.assertIsSortedAccordingToComparator(someInfo(),actual,byteDescendingOrderComparator);
  }
  @Test public void should_pass_if_actual_is_empty_whatever_given_comparator_is(){
    arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),byteDescendingOrderComparator);
    arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),byteAscendingOrderComparator);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertIsSortedAccordingToComparator(someInfo(),null,byteDescendingOrderComparator)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_comparator_is_null(){
    assertThatNullPointerException().isThrownBy(() -> arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),null));
  }
  @Test public void should_fail_if_actual_is_not_sorted_according_to_given_comparator(){
    AssertionInfo info=someInfo();
    actual=new byte[]{3,2,1,9};
    try {
      arrays.assertIsSortedAccordingToComparator(info,actual,byteDescendingOrderComparator);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeSortedAccordingToGivenComparator(2,actual,byteDescendingOrderComparator));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
