public class Urls_assertHasProtocol_Test extends UrlsBaseTest {
  @Test public void should_pass_if_actual_uri_has_the_given_protocol() throws MalformedURLException {
    urls.assertHasProtocol(info,new URL("http://example.com/pages/"),"http");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> urls.assertHasProtocol(info,null,"http")).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_protocol_is_not_the_expected_protocol() throws MalformedURLException {
    AssertionInfo info=someInfo();
    URL url=new URL("http://example.com/pages/");
    String expectedProtocol="ftp";
    try {
      urls.assertHasProtocol(info,url,expectedProtocol);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveProtocol(url,expectedProtocol));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
