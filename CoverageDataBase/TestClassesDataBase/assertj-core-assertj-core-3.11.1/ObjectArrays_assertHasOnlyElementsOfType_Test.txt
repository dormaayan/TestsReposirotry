/** 
 * Tests for  {@link ObjectArrayAssert#hasOnlyElementsOfType(Class)}.
 */
public class ObjectArrays_assertHasOnlyElementsOfType_Test extends ObjectArraysBaseTest {
  private static final Object[] array={6,7.0,8L};
  @Test public void should_pass_if_actual_has_only_elements_of_the_expected_type(){
    arrays.assertHasOnlyElementsOfType(someInfo(),array,Number.class);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertHasOnlyElementsOfType(someInfo(),null,Integer.class)).withMessage(actualIsNull());
  }
  @Test public void should_throw_exception_if_expected_type_is_null(){
    assertThatNullPointerException().isThrownBy(() -> arrays.assertHasOnlyElementsOfType(someInfo(),array,null));
  }
  @Test public void should_fail_if_one_element_in_actual_does_not_belong_to_the_expected_type(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertHasOnlyElementsOfType(someInfo(),array,Long.class)).withMessage(shouldHaveOnlyElementsOfType(array,Long.class,Integer.class).create());
  }
}
