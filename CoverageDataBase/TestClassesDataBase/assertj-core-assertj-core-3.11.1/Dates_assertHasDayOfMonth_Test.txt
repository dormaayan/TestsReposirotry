/** 
 * Tests for <code> {@link Dates#assertHasDayOfMonth(AssertionInfo,Date,int)}</code>.
 * @author Joel Costigliola
 */
public class Dates_assertHasDayOfMonth_Test extends DatesBaseTest {
  @Test public void should_fail_if_actual_has_not_given_day_of_month(){
    AssertionInfo info=someInfo();
    int day_of_month=5;
    try {
      dates.assertHasDayOfMonth(info,actual,day_of_month);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveDateField(actual,"day of month",day_of_month));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> dates.assertHasDayOfMonth(someInfo(),null,1)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_has_given_day_of_month(){
    dates.assertHasDayOfMonth(someInfo(),actual,1);
  }
  @Test public void should_fail_if_actual_has_not_given_day_of_month_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    int day_of_month=5;
    try {
      datesWithCustomComparisonStrategy.assertHasDayOfMonth(info,actual,day_of_month);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveDateField(actual,"day of month",day_of_month));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> datesWithCustomComparisonStrategy.assertHasDayOfMonth(someInfo(),null,1)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_has_given_day_of_month_whatever_custom_comparison_strategy_is(){
    datesWithCustomComparisonStrategy.assertHasDayOfMonth(someInfo(),actual,1);
  }
}
