/** 
 * Tests for <code> {@link Doubles#assertIsNaN(AssertionInfo,Double)}</code>.
 * @author Yvonne Wang
 * @author Joel Costigliola
 */
public class Doubles_assertIsNaN_Test extends DoublesBaseTest {
  @Test public void should_succeed_since_actual_is_equal_to_NaN(){
    doubles.assertIsNaN(someInfo(),Double.NaN);
  }
  @Test public void should_fail_since_actual_is_not_equal_to_NaN(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doubles.assertIsNaN(someInfo(),6d)).withMessage(format("%nExpecting:%n <6.0>%nto be equal to:%n <NaN>%nbut was not."));
  }
  @Test public void should_succeed_since_actual_is_equal_to_NaN_whatever_custom_comparison_strategy_is(){
    doublesWithAbsValueComparisonStrategy.assertIsNaN(someInfo(),Double.NaN);
  }
  @Test public void should_fail_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> doublesWithAbsValueComparisonStrategy.assertIsNaN(someInfo(),6d)).withMessage(format("%nExpecting:%n <6.0>%nto be equal to:%n <NaN>%nbut was not."));
  }
}
