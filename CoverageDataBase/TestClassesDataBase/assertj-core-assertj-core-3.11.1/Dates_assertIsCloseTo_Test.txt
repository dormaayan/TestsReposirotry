/** 
 * Tests for <code> {@link Dates#assertIsCloseTo(AssertionInfo,Date,Date,long)}</code>.
 * @author Joel Costigliola
 */
public class Dates_assertIsCloseTo_Test extends DatesBaseTest {
  private Date other;
  private int delta;
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=parseDatetime("2011-01-01T03:15:05");
    delta=100;
    other=new Date(actual.getTime() + delta + 1);
  }
  @Test public void should_fail_if_actual_is_not_close_to_given_date_by_less_than_given_delta(){
    AssertionInfo info=someInfo();
    try {
      dates.assertIsCloseTo(info,actual,other,delta);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeCloseTo(actual,other,delta,101));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_throw_error_if_given_date_is_null(){
    assertThatNullPointerException().isThrownBy(() -> dates.assertIsCloseTo(someInfo(),actual,null,10)).withMessage(dateToCompareActualWithIsNull());
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> dates.assertIsCloseTo(someInfo(),null,parseDate("2010-01-01"),10)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_close_to_given_date_by_less_than_given_delta(){
    dates.assertIsCloseTo(someInfo(),actual,parseDatetime("2011-01-01T03:15:05"),delta);
  }
  @Test public void should_fail_if_actual_is_not_close_to_given_date_by_less_than_given_delta_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    try {
      datesWithCustomComparisonStrategy.assertIsCloseTo(info,actual,other,delta);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeCloseTo(actual,other,delta,101));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is(){
    assertThatNullPointerException().isThrownBy(() -> datesWithCustomComparisonStrategy.assertIsCloseTo(someInfo(),actual,null,10)).withMessage(dateToCompareActualWithIsNull());
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> datesWithCustomComparisonStrategy.assertIsCloseTo(someInfo(),null,parseDate("2010-01-01"),10)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_close_to_given_date_by_less_than_given_delta_whatever_custom_comparison_strategy_is(){
    datesWithCustomComparisonStrategy.assertIsCloseTo(someInfo(),actual,parseDatetime("2011-01-01T03:15:05"),delta);
  }
}
