/** 
 * Tests for <code> {@link org.assertj.core.error.ShouldNotContainKeys#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code> .
 * @author dorzey
 */
public class ShouldNotContainKeys_create_Test {
  private Map<?,?> map;
  @BeforeEach public void setUp(){
    map=mapOf(entry("name","Yoda"),entry("color","green"));
  }
  @Test public void should_create_error_message(){
    ErrorMessageFactory factory=shouldNotContainKeys(map,newLinkedHashSet("age"));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting:%n" + "  <{\"color\"=\"green\", \"name\"=\"Yoda\"}>%n"+ "not to contain key:%n"+ "  <\"age\">"));
  }
  @Test public void should_create_error_message_with_multiple_keys(){
    ErrorMessageFactory factory=shouldNotContainKeys(map,newLinkedHashSet("name","color"));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting:%n" + "  <{\"color\"=\"green\", \"name\"=\"Yoda\"}>%n"+ "not to contain keys:%n"+ "  <[\"name\", \"color\"]>"));
  }
}
