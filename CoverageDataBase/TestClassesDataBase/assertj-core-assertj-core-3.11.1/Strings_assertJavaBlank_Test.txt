public class Strings_assertJavaBlank_Test extends StringsBaseTest {
  public static Stream<Arguments> blank(){
    return Stream.of(Arguments.of(" "),Arguments.of("\u005Ct"),Arguments.of("\u005Cn"),Arguments.of("\u005Cr"),Arguments.of(" \u005Cn\u005Cr  "));
  }
  @ParameterizedTest @MethodSource("blank") public void should_pass_string_is_blank(  String actual){
    strings.assertJavaBlank(someInfo(),actual);
  }
  public static Stream<Arguments> notBlank(){
    return Stream.of(Arguments.of((String)null),Arguments.of(""),Arguments.of("a"),Arguments.of(" bc "),Arguments.of("\u00A0"),Arguments.of("\u2007"),Arguments.of("\u202F"));
  }
  @ParameterizedTest @MethodSource("notBlank") public void should_fail_if_string_is_not_blank(  String actual){
    try {
      strings.assertJavaBlank(someInfo(),actual);
    }
 catch (    AssertionError expectedAssertionError) {
      verifyFailureThrownWhenStringIsNotBank(someInfo(),actual);
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  private void verifyFailureThrownWhenStringIsNotBank(  AssertionInfo info,  String actual){
    verify(failures).failure(info,shouldBeBlank(actual));
  }
}
