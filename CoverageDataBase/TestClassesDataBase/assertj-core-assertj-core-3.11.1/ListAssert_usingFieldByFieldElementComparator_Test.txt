public class ListAssert_usingFieldByFieldElementComparator_Test extends ListAssertBaseTest {
  private Lists listsBefore;
  private Iterables iterablesBefore;
  @BeforeEach public void before(){
    listsBefore=getLists(assertions);
    iterablesBefore=getIterables(assertions);
  }
  @Override protected ListAssert<String> invoke_api_method(){
    return assertions.usingFieldByFieldElementComparator();
  }
  @Override protected void verify_internal_effects(){
    Lists lists=getLists(assertions);
    Iterables iterables=getIterables(assertions);
    assertThat(lists).isNotSameAs(listsBefore);
    assertThat(iterables).isNotSameAs(iterablesBefore);
    assertThat(iterables.getComparisonStrategy()).isInstanceOf(ComparatorBasedComparisonStrategy.class);
    assertThat(lists.getComparisonStrategy()).isInstanceOf(ComparatorBasedComparisonStrategy.class);
    Comparator<?> listsElementComparator=((ExtendedByTypesComparator)((ComparatorBasedComparisonStrategy)lists.getComparisonStrategy()).getComparator()).getComparator();
    assertThat(listsElementComparator).isInstanceOf(FieldByFieldComparator.class);
    Comparator<?> iterablesElementComparator=((ExtendedByTypesComparator)((ComparatorBasedComparisonStrategy)iterables.getComparisonStrategy()).getComparator()).getComparator();
    assertThat(iterablesElementComparator).isInstanceOf(FieldByFieldComparator.class);
  }
}
