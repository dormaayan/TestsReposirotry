public class AtomicIntegerArrayAssert_usingElementComparator_Test extends AtomicIntegerArrayAssertBaseTest {
  @Mock private Comparator<Integer> comparator;
  private Objects objectsBefore;
  @BeforeEach public void before(){
    initMocks(this);
    objectsBefore=getObjects(assertions);
  }
  @Override protected AtomicIntegerArrayAssert invoke_api_method(){
    return assertions.usingElementComparator(comparator);
  }
  @Override protected void verify_internal_effects(){
    assertThat(objectsBefore).isSameAs(getObjects(assertions));
    assertThat(comparator).isSameAs(getArrays(assertions).getComparator());
  }
  @Test public void should_honor_the_given_element_comparator(){
    AtomicIntegerArray actual=new AtomicIntegerArray(new int[]{1,2,3,4});
    assertThat(actual).usingElementComparator(new AbsValueComparator<Integer>()).containsExactly(-1,2,3,-4);
  }
}
