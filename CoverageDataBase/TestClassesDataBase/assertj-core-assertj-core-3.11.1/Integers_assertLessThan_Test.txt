/** 
 * Tests for <code> {@link Integers#assertLessThan(AssertionInfo,Integer,int)}</code>.
 * @author Alex Ruiz
 */
public class Integers_assertLessThan_Test extends IntegersBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> integers.assertLessThan(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_less_than_other(){
    integers.assertLessThan(someInfo(),6,8);
  }
  @Test public void should_fail_if_actual_is_equal_to_other(){
    AssertionInfo info=someInfo();
    try {
      integers.assertLessThan(info,6,6);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeLess(6,6));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_greater_than_other(){
    AssertionInfo info=someInfo();
    try {
      integers.assertLessThan(info,8,6);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeLess(8,6));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> integersWithAbsValueComparisonStrategy.assertLessThan(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy(){
    integersWithAbsValueComparisonStrategy.assertLessThan(someInfo(),6,-8);
  }
  @Test public void should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      integersWithAbsValueComparisonStrategy.assertLessThan(info,6,-6);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeLess(6,-6,absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      integersWithAbsValueComparisonStrategy.assertLessThan(info,-8,6);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeLess(-8,6,absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
