public class BigDecimalComparatorTest {
  @Test public void should_consider_null_to_be_less_than_non_bull(){
    BigDecimal bigDecimal1=null;
    BigDecimal bigDecimal2=BigDecimal.ZERO;
    int result=BIG_DECIMAL_COMPARATOR.compare(bigDecimal1,bigDecimal2);
    assertThat(result).isNegative();
  }
  @Test public void should_consider_non_null_to_be_greater_than_null(){
    BigDecimal bigDecimal1=BigDecimal.ZERO;
    BigDecimal bigDecimal2=null;
    int result=BIG_DECIMAL_COMPARATOR.compare(bigDecimal1,bigDecimal2);
    assertThat(result).isPositive();
  }
  @Test public void should_return_0_when_both_BigDecimal_are_null(){
    BigDecimal bigDecimal1=null;
    BigDecimal bigDecimal2=null;
    int result=BIG_DECIMAL_COMPARATOR.compare(bigDecimal1,bigDecimal2);
    assertThat(result).isZero();
  }
  @Test public void should_compare_BigDecimal_with_natural_comparator(){
    BigDecimal bigDecimal1=new BigDecimal("0.0");
    BigDecimal bigDecimal2=new BigDecimal("0.000000");
    int result=BIG_DECIMAL_COMPARATOR.compare(bigDecimal1,bigDecimal2);
    assertThat(result).isZero();
  }
}
