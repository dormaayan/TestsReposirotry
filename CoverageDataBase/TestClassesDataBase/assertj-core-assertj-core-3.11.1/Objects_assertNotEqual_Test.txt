/** 
 * Tests for <code> {@link Objects#assertNotEqual(AssertionInfo,Object,Object)}</code>.
 * @author Alex Ruiz
 */
public class Objects_assertNotEqual_Test extends ObjectsBaseTest {
  @Test public void should_pass_if_objects_are_not_equal(){
    objects.assertNotEqual(someInfo(),"Yoda","Luke");
  }
  @Test public void should_fail_if_objects_are_equal(){
    AssertionInfo info=someInfo();
    try {
      objects.assertNotEqual(info,"Yoda","Yoda");
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotBeEqual("Yoda","Yoda"));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_objects_are_not_equal_according_to_custom_comparison_strategy(){
    objectsWithCustomComparisonStrategy.assertNotEqual(someInfo(),"Yoda","Luke");
  }
  @Test public void should_fail_if_objects_are_equal_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      objectsWithCustomComparisonStrategy.assertNotEqual(info,"YoDA","Yoda");
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotBeEqual("YoDA","Yoda",customComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
