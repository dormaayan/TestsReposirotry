/** 
 * Tests for <code> {@link TextDescription#equals(Object)}</code> and <code> {@link TextDescription#hashCode()}</code>.
 * @author Alex Ruiz
 */
public class TextDescription_equals_hashCode_Test {
  private static TextDescription description;
  @BeforeAll public static void setUpOnce(){
    description=new TextDescription("Yoda");
  }
  @Test public void should_have_reflexive_equals(){
    assertEqualsIsReflexive(description);
  }
  @Test public void should_have_symmetric_equals(){
    assertEqualsIsSymmetric(description,new TextDescription("Yoda"));
  }
  @Test public void should_have_transitive_equals(){
    assertEqualsIsTransitive(description,new TextDescription("Yoda"),new TextDescription("Yoda"));
  }
  @Test public void should_maintain_equals_and_hashCode_contract(){
    assertMaintainsEqualsAndHashCodeContract(description,new TextDescription("Yoda"));
  }
  @Test public void should_not_be_equal_to_Object_of_different_type(){
    assertThat(description.equals("Yoda")).isFalse();
  }
  @Test public void should_not_be_equal_to_null(){
    assertThat(description.equals(null)).isFalse();
  }
  @Test public void should_not_be_equal_to_TextDescription_with_different_value(){
    assertThat(description.equals(new TextDescription("Luke"))).isFalse();
  }
}
