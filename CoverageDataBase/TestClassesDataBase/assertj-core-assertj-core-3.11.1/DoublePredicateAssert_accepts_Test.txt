/** 
 * @author Filip Hrisafov
 */
public class DoublePredicateAssert_accepts_Test extends DoublePredicateAssertBaseTest {
  @Test public void should_fail_when_predicate_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat((DoublePredicate)null).accepts(1.0,2.0,3.0)).withMessage(actualIsNull());
  }
  @Test public void should_fail_when_predicate_does_not_accept_all_values(){
    DoublePredicate predicate=val -> val <= 2;
    double[] matchValues=new double[]{1.0,2.0,3.0};
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(predicate).accepts(matchValues)).withMessage(elementsShouldMatch(matchValues,3D,PredicateDescription.GIVEN).create());
  }
  @Test public void should_pass_when_predicate_accepts_all_values(){
    DoublePredicate predicate=val -> val <= 2;
    assertThat(predicate).accepts(1.0,2.0);
  }
  @Override protected DoublePredicateAssert invoke_api_method(){
    return assertions.accepts(1.0,2.0);
  }
  @Override protected void verify_internal_effects(){
    verify(iterables).assertAllMatch(getInfo(assertions),newArrayList(1.0D,2.0D),wrapped,PredicateDescription.GIVEN);
  }
}
