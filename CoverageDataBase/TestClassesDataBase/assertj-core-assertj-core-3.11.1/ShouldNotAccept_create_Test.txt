public class ShouldNotAccept_create_Test {
  @Test public void should_create_error_message_with_default_predicate_description(){
    ErrorMessageFactory factory=shouldNotAccept(color -> color.equals("red"),"Yoda",PredicateDescription.GIVEN);
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %nExpecting:%n  <given predicate>%nnot to accept <\"Yoda\"> but it did."));
  }
  @Test public void should_create_error_message_with_predicate_description(){
    ErrorMessageFactory factory=shouldNotAccept((    String color) -> color.equals("red"),"Yoda",new PredicateDescription("red light saber"));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %nExpecting:%n  <'red light saber' predicate>%nnot to accept <\"Yoda\"> but it did."));
  }
  @Test public void should_fail_if_predicate_description_is_null(){
    assertThatNullPointerException().isThrownBy(() -> shouldNotAccept(color -> color.equals("red"),"Yoda",null)).withMessage("The predicate description must not be null");
  }
}
