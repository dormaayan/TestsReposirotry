/** 
 * Tests for <code> {@link Strings#assertEmpty(AssertionInfo,CharSequence)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Strings_assertEmpty_Test extends StringsBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> strings.assertEmpty(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_is_not_empty(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> strings.assertEmpty(someInfo(),"Yoda")).withMessage(shouldBeEmpty("Yoda").create());
  }
  @Test public void should_pass_if_actual_is_empty(){
    strings.assertEmpty(someInfo(),"");
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> stringsWithCaseInsensitiveComparisonStrategy.assertEmpty(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_is_not_empty_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> stringsWithCaseInsensitiveComparisonStrategy.assertEmpty(someInfo(),"Yoda")).withMessage(shouldBeEmpty("Yoda").create());
  }
  @Test public void should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is(){
    stringsWithCaseInsensitiveComparisonStrategy.assertEmpty(someInfo(),"");
  }
}
