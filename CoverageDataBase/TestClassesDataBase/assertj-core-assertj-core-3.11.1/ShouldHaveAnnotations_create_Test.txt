/** 
 * Tests for <code> {@link ShouldHaveAnnotations#shouldHaveAnnotations(Class,java.util.Collection,java.util.Collection)}}</code>
 * @author William Delanoue
 */
public class ShouldHaveAnnotations_create_Test {
  private ErrorMessageFactory factory;
  @BeforeEach public void setUp(){
    factory=shouldHaveAnnotations(ShouldHaveAnnotations_create_Test.class,Lists.<Class<? extends Annotation>>newArrayList(Override.class,Deprecated.class),Lists.<Class<? extends Annotation>>newArrayList(SuppressWarnings.class));
  }
  @Test public void should_create_error_message(){
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting%n" + "  <org.assertj.core.error.ShouldHaveAnnotations_create_Test>%n"+ "to have annotations:%n"+ "  <[java.lang.Override, java.lang.Deprecated]>%n"+ "but the following annotations were not found:%n"+ "  <[java.lang.SuppressWarnings]>"));
  }
}
