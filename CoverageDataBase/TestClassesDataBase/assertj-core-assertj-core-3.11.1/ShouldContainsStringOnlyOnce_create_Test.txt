public class ShouldContainsStringOnlyOnce_create_Test {
  private ErrorMessageFactory factoryWithSeveralOccurrences;
  private ErrorMessageFactory factoryWithNoOccurrence;
  @BeforeEach public void setUp(){
    factoryWithSeveralOccurrences=shouldContainOnlyOnce("aaamotifmotifaabbbmotifaaa","motif",3);
    factoryWithNoOccurrence=shouldContainOnlyOnce("aaamodifmoifaabbbmotfaaa","motif",0);
  }
  @Test public void should_create_error_message_when_string_to_search_appears_several_times(){
    String message=factoryWithSeveralOccurrences.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %nExpecting:%n <\"motif\">%nto appear only once in:%n <\"aaamotifmotifaabbbmotifaaa\">%nbut it appeared 3 times "));
  }
  @Test public void should_create_error_message_when_string_to_search_does_not_appear(){
    String message=factoryWithNoOccurrence.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %nExpecting:%n <\"motif\">%nto appear only once in:%n <\"aaamodifmoifaabbbmotfaaa\">%nbut it did not appear "));
  }
  @Test public void should_create_error_message_when_string_to_search_does_not_appear_with_custom_comparison_strategy(){
    ErrorMessageFactory factory=shouldContainOnlyOnce("aaamoDifmoifaabbbmotfaaa","MOtif",0,new ComparatorBasedComparisonStrategy(CaseInsensitiveStringComparator.instance));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %nExpecting:%n <\"MOtif\">%nto appear only once in:%n <\"aaamoDifmoifaabbbmotfaaa\">%nbut it did not appear when comparing values using CaseInsensitiveStringComparator"));
  }
  @Test public void should_create_error_message_when_string_to_search_appears_several_times_with_custom_comparison_strategy(){
    ErrorMessageFactory factory=shouldContainOnlyOnce("aaamotIFmoTifaabbbmotifaaa","MOtif",3,new ComparatorBasedComparisonStrategy(CaseInsensitiveStringComparator.instance));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %nExpecting:%n <\"MOtif\">%nto appear only once in:%n <\"aaamotIFmoTifaabbbmotifaaa\">%nbut it appeared 3 times when comparing values using CaseInsensitiveStringComparator"));
  }
}
