/** 
 * Tests for <code> {@link ShouldNotContain#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code> .
 * @author Alex Ruiz
 * @author Yvonne Wang
 * @author Joel Costigliola
 */
public class ShouldNotContain_create_Test {
  @Test public void should_create_error_message(){
    ErrorMessageFactory factory=shouldNotContain(newArrayList("Yoda"),newArrayList("Luke","Yoda"),newLinkedHashSet("Yoda"));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting%n" + " <[\"Yoda\"]>%n"+ "not to contain%n"+ " <[\"Luke\", \"Yoda\"]>%n"+ "but found%n"+ " <[\"Yoda\"]>%n"));
  }
  @Test public void should_create_error_message_with_custom_comparison_strategy(){
    ErrorMessageFactory factory=shouldNotContain(newArrayList("Yoda"),newArrayList("Luke","Yoda"),newLinkedHashSet("Yoda"),new ComparatorBasedComparisonStrategy(CaseInsensitiveStringComparator.instance));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting%n" + " <[\"Yoda\"]>%n"+ "not to contain%n"+ " <[\"Luke\", \"Yoda\"]>%n"+ "but found%n <[\"Yoda\"]>%n"+ "when comparing values using CaseInsensitiveStringComparator"));
  }
}
