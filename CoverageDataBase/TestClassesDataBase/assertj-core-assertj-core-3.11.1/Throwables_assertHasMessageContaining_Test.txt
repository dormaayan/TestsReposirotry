/** 
 * Tests for <code> {@link Throwables#assertHasMessageContaining(AssertionInfo,Throwable,String)}</code>.
 * @author Joel Costigliola
 */
public class Throwables_assertHasMessageContaining_Test extends ThrowablesBaseTest {
  @Test public void should_pass_if_actual_has_message_containing_with_expected_description(){
    throwables.assertHasMessageContaining(someInfo(),actual,"able");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> throwables.assertHasMessageContaining(someInfo(),null,"Throwable")).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_has_message_not_containing_with_expected_description(){
    AssertionInfo info=someInfo();
    try {
      throwables.assertHasMessageContaining(info,actual,"expected description part");
      fail("AssertionError expected");
    }
 catch (    AssertionError err) {
      verify(failures).failure(info,shouldContain(actual.getMessage(),"expected description part"));
    }
  }
}
