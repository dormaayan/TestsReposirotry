/** 
 * @author Filip Hrisafov
 */
public class Java6Assertions_sync_assertThat_with_BDD_and_Soft_variants_Test extends BaseAssertionsTest {
  @Test public void standard_assertions_and_bdd_assertions_should_have_the_same_assertions_methods(){
    Method[] assertThatMethods=findMethodsWithName(Java6Assertions.class,"assertThat");
    Method[] thenMethods=findMethodsWithName(Java6BDDAssertions.class,"then");
    assertThat(assertThatMethods).usingElementComparator(IGNORING_DECLARING_CLASS_AND_METHOD_NAME).containsExactlyInAnyOrder(thenMethods);
  }
  @Test public void standard_assertions_and_soft_assertions_should_have_the_same_assertions_methods(){
    Method[] assertThatMethods=findMethodsWithName(Java6Assertions.class,"assertThat",SPECIAL_IGNORED_RETURN_TYPES);
    Method[] assertThatSoftMethods=findMethodsWithName(Java6AbstractStandardSoftAssertions.class,"assertThat");
    assertThat(assertThatMethods).usingElementComparator(IGNORING_DECLARING_CLASS_AND_RETURN_TYPE).containsExactlyInAnyOrder(assertThatSoftMethods);
  }
  @Test public void bdd_assertions_and_bdd_soft_assertions_should_have_the_same_assertions_methods(){
    Method[] thenMethods=findMethodsWithName(Java6BDDAssertions.class,"then",SPECIAL_IGNORED_RETURN_TYPES);
    Method[] thenSoftMethods=findMethodsWithName(Java6AbstractBDDSoftAssertions.class,"then");
    assertThat(thenMethods).usingElementComparator(IGNORING_DECLARING_CLASS_AND_RETURN_TYPE).containsExactlyInAnyOrder(thenSoftMethods);
  }
}
