public class AtomicLongAssert_doesNotHaveValue_Test {
  @Test public void should_pass_when_actual_does_not_have_the_expected_value(){
    AtomicLong actual=new AtomicLong(123L);
    assertThat(actual).doesNotHaveValue(456L);
  }
  @Test public void should_fail_when_actual_has_the_expected_value(){
    long value=123L;
    AtomicLong actual=new AtomicLong(value);
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(actual).doesNotHaveValue(value)).withMessage(shouldNotContainValue(actual,value).create());
  }
  @Test public void should_fail_when_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> {
      AtomicLong actual=null;
      assertThat(actual).doesNotHaveValue(1234L);
    }
).withMessage(actualIsNull());
  }
}
