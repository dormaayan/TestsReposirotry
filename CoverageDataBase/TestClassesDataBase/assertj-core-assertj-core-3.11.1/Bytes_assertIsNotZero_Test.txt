/** 
 * Tests for <code> {@link Bytes#assertIsNotZero(AssertionInfo,Byte)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Bytes_assertIsNotZero_Test extends BytesBaseTest {
  @Test public void should_succeed_since_actual_is_not_zero(){
    bytes.assertIsNotZero(someInfo(),(byte)2);
  }
  @Test public void should_fail_since_actual_is_zero(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytes.assertIsNotZero(someInfo(),(byte)0)).withMessage(format("%nExpecting:%n <0>%nnot to be equal to:%n <0>%n"));
  }
  @Test public void should_fail_since_actual_is_zero_in_hex_representation(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytes.assertIsNotZero(someHexInfo(),(byte)0x00)).withMessage(format("%nExpecting:%n <0x00>%nnot to be equal to:%n <0x00>%n"));
  }
  @Test public void should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is(){
    bytesWithAbsValueComparisonStrategy.assertIsNotZero(someInfo(),(byte)1);
  }
  @Test public void should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is_in_hex_representation(){
    bytesWithAbsValueComparisonStrategy.assertIsNotZero(someHexInfo(),(byte)0x01);
  }
  @Test public void should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytesWithAbsValueComparisonStrategy.assertIsNotZero(someInfo(),(byte)0)).withMessage(format("%nExpecting:%n <0>%nnot to be equal to:%n <0>%n"));
  }
  @Test public void should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is_in_hex_representation(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> bytesWithAbsValueComparisonStrategy.assertIsNotZero(someHexInfo(),(byte)0x00)).withMessage(format("%nExpecting:%n <0x00>%nnot to be equal to:%n <0x00>%n"));
  }
}
