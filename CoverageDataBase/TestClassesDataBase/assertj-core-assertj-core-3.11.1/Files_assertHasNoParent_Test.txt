/** 
 * Tests for <code> {@link org.assertj.core.internal.Files#assertHasNoParent(org.assertj.core.api.AssertionInfo,java.io.File)}</code> .
 * @author Jean-Christophe Gay
 */
public class Files_assertHasNoParent_Test extends FilesBaseTest {
  @Test public void should_throw_error_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> files.assertHasNoParent(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_has_parent(){
    AssertionInfo info=someInfo();
    when(actual.getParentFile()).thenReturn(mock(File.class));
    try {
      files.assertHasNoParent(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveNoParent(actual));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_has_no_parent(){
    when(actual.getParentFile()).thenReturn(null);
    files.assertHasNoParent(someInfo(),actual);
  }
}
