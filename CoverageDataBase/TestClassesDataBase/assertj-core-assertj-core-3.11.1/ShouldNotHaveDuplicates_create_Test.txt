/** 
 * Tests for <code> {@link ShouldNotHaveDuplicates#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class ShouldNotHaveDuplicates_create_Test {
  private ErrorMessageFactory factory;
  @BeforeEach public void setUp(){
    factory=shouldNotHaveDuplicates(newArrayList("Yoda","Yoda","Luke"),newArrayList("Yoda"));
  }
  @Test public void should_create_error_message(){
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %nFound duplicate(s):%n <[\"Yoda\"]>%nin:%n <[\"Yoda\", \"Yoda\", \"Luke\"]>%n"));
  }
  @Test public void should_create_error_message_with_custom_comparison_strategy(){
    factory=shouldNotHaveDuplicates(newArrayList("Yoda","Yoda","Luke"),newArrayList("Yoda"),new ComparatorBasedComparisonStrategy(CaseInsensitiveStringComparator.instance));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %nFound duplicate(s):%n <[\"Yoda\"]>%nin:%n <[\"Yoda\", \"Yoda\", \"Luke\"]>%n" + "when comparing values using CaseInsensitiveStringComparator"));
  }
}
