public class Arrays_array_Test {
  @Test public void should_return_parameter(){
    Object[] array={"one","two"};
    assertThat(array).isSameAs(Arrays.array(array));
  }
  @Test public void should_return_an_int_array_from_AtomicIntegerArray(){
    int[] expected=new int[]{1,2,3,4};
    AtomicIntegerArray atomicIntegerArray=new AtomicIntegerArray(expected);
    int[] actual=array(atomicIntegerArray);
    assertThat(actual).isEqualTo(expected);
  }
  @Test public void should_return_null_if_given_a_null_AtomicIntegerArray(){
    AtomicIntegerArray atomicIntegerArray=null;
    int[] actual=array(atomicIntegerArray);
    assertThat(actual).isNull();
  }
  @Test public void should_return_an_long_array_from_AtomicLongArray(){
    long[] expected=new long[]{1,2,3,4};
    AtomicLongArray atomicLongArray=new AtomicLongArray(expected);
    long[] actual=array(atomicLongArray);
    assertThat(actual).isEqualTo(expected);
  }
  @Test public void should_return_null_if_given_a_null_AtomicLongArray(){
    AtomicLongArray atomicLongArray=null;
    long[] actual=array(atomicLongArray);
    assertThat(actual).isNull();
  }
}
