/** 
 * Tests for <code> {@link Characters#assertEqual(AssertionInfo,Character,char)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Characters_assertEqual_Test extends CharactersBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> charactersWithCaseInsensitiveComparisonStrategy.assertEqual(someInfo(),null,'a')).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_characters_are_equal(){
    charactersWithCaseInsensitiveComparisonStrategy.assertEqual(someInfo(),'a','a');
  }
  @Test public void should_fail_if_characters_are_not_equal(){
    AssertionInfo info=someInfo();
    try {
      charactersWithCaseInsensitiveComparisonStrategy.assertEqual(info,'b','a');
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeEqual('b','a',info.representation()));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_according_to_custom_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> charactersWithCaseInsensitiveComparisonStrategy.assertEqual(someInfo(),null,'a')).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_characters_are_equal_according_to_custom_comparison_strategy(){
    charactersWithCaseInsensitiveComparisonStrategy.assertEqual(someInfo(),'a','A');
  }
  @Test public void should_fail_if_characters_are_not_equal_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      charactersWithCaseInsensitiveComparisonStrategy.assertEqual(info,'b','a');
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeEqual('b','a',caseInsensitiveComparisonStrategy,new StandardRepresentation()));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
