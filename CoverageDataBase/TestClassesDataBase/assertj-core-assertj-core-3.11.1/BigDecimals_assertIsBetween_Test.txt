/** 
 * Tests for <code> {@link BigDecimals#assertIsBetween(AssertionInfo,BigDecimal,BigDecimal,BigDecimal)}</code>.
 * @author William Delanoue
 */
public class BigDecimals_assertIsBetween_Test extends BigDecimalsBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> numbers.assertIsBetween(someInfo(),null,ZERO,ONE)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_start_is_null(){
    assertThatNullPointerException().isThrownBy(() -> numbers.assertIsBetween(someInfo(),ONE,null,ONE));
  }
  @Test public void should_fail_if_end_is_null(){
    assertThatNullPointerException().isThrownBy(() -> numbers.assertIsBetween(someInfo(),ONE,ZERO,null));
  }
  @Test public void should_pass_if_actual_is_in_range(){
    numbers.assertIsBetween(someInfo(),ONE,ZERO,TEN);
    numbers.assertIsBetween(someInfo(),ONE,ONE,TEN);
    numbers.assertIsBetween(someInfo(),ONE,new BigDecimal("1.00"),TEN);
    numbers.assertIsBetween(someInfo(),ONE,ZERO,new BigDecimal("1.00"));
  }
  @Test public void should_pass_if_actual_is_equal_to_range_start(){
    numbers.assertIsBetween(someInfo(),ONE,ONE,TEN);
  }
  @Test public void should_pass_if_actual_is_equal_to_range_end(){
    numbers.assertIsBetween(someInfo(),ONE,ZERO,ONE);
  }
  @Test public void should_fail_if_actual_is_not_in_range_start(){
    AssertionInfo info=someInfo();
    try {
      numbers.assertIsBetween(info,ONE,new BigDecimal(2),TEN);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeBetween(ONE,new BigDecimal(2),TEN,true,true));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_not_in_range_end(){
    AssertionInfo info=someInfo();
    try {
      numbers.assertIsBetween(info,ONE,ZERO,ZERO);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeBetween(ONE,ZERO,ZERO,true,true));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
