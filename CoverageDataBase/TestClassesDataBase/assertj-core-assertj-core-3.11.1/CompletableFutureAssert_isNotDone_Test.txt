public class CompletableFutureAssert_isNotDone_Test extends BaseTest {
  @Test public void should_pass_if_completable_future_is_not_done(){
    assertThat(new CompletableFuture<>()).isNotDone();
  }
  @Test public void should_fail_when_completable_future_is_null(){
    assertThatThrownBy(() -> assertThat((CompletableFuture<String>)null).isNotDone()).isInstanceOf(AssertionError.class).hasMessage(format(actualIsNull()));
  }
  @Test public void should_fail_if_completable_future_is_done(){
    CompletableFuture<String> future=CompletableFuture.completedFuture("done");
    assertThatThrownBy(() -> assertThat(future).isNotDone()).isInstanceOf(AssertionError.class).hasMessage(shouldNotBeDone(future).create());
  }
}
