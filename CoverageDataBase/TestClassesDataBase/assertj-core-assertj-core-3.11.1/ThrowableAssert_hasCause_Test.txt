public class ThrowableAssert_hasCause_Test extends ThrowableAssertBaseTest {
  private Throwable npe=new NullPointerException();
  @Override protected ThrowableAssert invoke_api_method(){
    return assertions.hasCause(npe);
  }
  @Override protected void verify_internal_effects(){
    verify(throwables).assertHasCause(getInfo(assertions),getActual(assertions),npe);
  }
  @Test public void should_fail_if_actual_and_expected_cause_have_different_types(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(new IllegalArgumentException(new IllegalStateException())).hasCause(new NullPointerException())).withMessage(format("%n" + "Expecting a cause with type:%n" + "  <\"java.lang.NullPointerException\">%n"+ "but type was:%n"+ "  <\"java.lang.IllegalStateException\">."));
  }
}
