/** 
 * Tests for <code> {@link BooleanArrays#assertIsSorted(AssertionInfo,Object[])}</code>.
 * @author Joel Costigliola
 */
public class BooleanArrays_assertIsSorted_Test extends BooleanArraysBaseTest {
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=new boolean[]{false,false,true,true,true};
  }
  @Test public void should_pass_if_actual_is_sorted_in_ascending_order(){
    arrays.assertIsSorted(someInfo(),actual);
  }
  @Test public void should_pass_if_actual_is_empty(){
    arrays.assertIsSorted(someInfo(),emptyArray());
  }
  @Test public void should_pass_if_actual_contains_only_one_element(){
    arrays.assertIsSorted(someInfo(),arrayOf(true));
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertIsSorted(someInfo(),(boolean[])null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_is_not_sorted_in_ascending_order(){
    AssertionInfo info=someInfo();
    actual=arrayOf(false,true,false);
    try {
      arrays.assertIsSorted(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeSorted(1,actual));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
