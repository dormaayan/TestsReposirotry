public class ElementsShouldSatisfy_create_Test {
  @Test public void should_create_error_message_all(){
    List<UnsatisfiedRequirement> unsatisfiedRequirements=list(new UnsatisfiedRequirement("Leia","Leia mistake."),new UnsatisfiedRequirement("Luke","Luke mistake."));
    ErrorMessageFactory factory=elementsShouldSatisfy(list("Leia","Luke","Yoda"),unsatisfiedRequirements);
    String message=factory.create(new TextDescription("Test"),STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting all elements of:%n" + "  <[\"Leia\", \"Luke\", \"Yoda\"]>%n"+ "to satisfy given requirements, but these elements did not:%n%n"+ "  <Leia> Leia mistake.%n%n"+ "  <Luke> Luke mistake."));
  }
  @Test public void should_create_error_message_any(){
    ErrorMessageFactory factory=elementsShouldSatisfyAny(list("Luke","Yoda"));
    String message=factory.create(new TextDescription("Test"),STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting any element of:%n" + "  <[\"Luke\", \"Yoda\"]>%n"+ "to satisfy the given assertions requirements but none did."));
  }
}
