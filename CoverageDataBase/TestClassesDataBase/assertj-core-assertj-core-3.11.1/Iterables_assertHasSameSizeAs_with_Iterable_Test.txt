/** 
 * Tests for <code> {@link Iterables#assertHasSameSizeAs(AssertionInfo,Iterable,Iterable)}</code>.
 * @author Nicolas FranÃ§ois
 */
public class Iterables_assertHasSameSizeAs_with_Iterable_Test extends IterablesBaseTest {
  @Test public void should_pass_if_size_of_actual_is_equal_to_expected_size(){
    iterables.assertHasSameSizeAs(someInfo(),newArrayList("Yoda","Luke"),newArrayList("Solo","Leia"));
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterables.assertHasSameSizeAs(someInfo(),null,newArrayList("Solo","Leia"))).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_other_is_null(){
    assertThatNullPointerException().isThrownBy(() -> {
      Iterable<?> other=null;
      iterables.assertHasSameSizeAs(someInfo(),newArrayList("Yoda","Luke"),other);
    }
).withMessage("The Iterable to compare actual size with should not be null");
  }
  @Test public void should_fail_if_actual_size_is_not_equal_to_other_size(){
    AssertionInfo info=someInfo();
    Collection<String> actual=newArrayList("Yoda");
    Collection<String> other=newArrayList("Solo","Luke","Leia");
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterables.assertHasSameSizeAs(info,actual,other)).withMessage(format(shouldHaveSameSizeAs(actual,actual.size(),other.size()).create(null,info.representation())));
  }
  @Test public void should_pass_if_actual_has_same_size_as_other_whatever_custom_comparison_strategy_is(){
    iterablesWithCaseInsensitiveComparisonStrategy.assertHasSameSizeAs(someInfo(),newArrayList("Luke","Yoda"),newArrayList("Solo","Leia"));
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterablesWithCaseInsensitiveComparisonStrategy.assertHasSameSizeAs(someInfo(),null,newArrayList("Solo","Leia"))).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_other_is_null_whatever_custom_comparison_strategy_is(){
    assertThatNullPointerException().isThrownBy(() -> {
      Iterable<?> other=null;
      iterables.assertHasSameSizeAs(someInfo(),newArrayList("Yoda","Luke"),other);
    }
).withMessage("The Iterable to compare actual size with should not be null");
  }
  @Test public void should_fail_if_actual_size_is_not_equal_to_other_size_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    Collection<String> actual=newArrayList("Yoda");
    Collection<String> other=newArrayList("Solo","Luke","Leia");
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterablesWithCaseInsensitiveComparisonStrategy.assertHasSameSizeAs(info,actual,other)).withMessage(shouldHaveSameSizeAs(actual,actual.size(),other.size()).create(null,info.representation()));
  }
}
