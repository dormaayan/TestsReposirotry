/** 
 * Tests for <code> {@link ShouldNotStartWith#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code> .
 * @author Michal Kordas
 */
public class ShouldNotStartWith_create_Test {
  private ErrorMessageFactory factory;
  @BeforeEach public void setUp(){
    factory=shouldNotStartWith(newArrayList("Yoda","Luke"),newArrayList("Han","Leia"));
  }
  @Test public void should_create_error_message(){
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting:%n" + "  <[\"Yoda\", \"Luke\"]>%n"+ "not to start with:%n  "+ "<[\"Han\", \"Leia\"]>%n"));
  }
  @Test public void should_create_error_message_with_custom_comparison_strategy(){
    factory=shouldNotStartWith(newArrayList("Yoda","Luke"),newArrayList("Han","Leia"),new ComparatorBasedComparisonStrategy(CaseInsensitiveStringComparator.instance));
    String message=factory.create(new TextDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(String.format("[Test] %n" + "Expecting:%n" + "  <[\"Yoda\", \"Luke\"]>%n"+ "not to start with:%n"+ "  <[\"Han\", \"Leia\"]>%n"+ "when comparing values using CaseInsensitiveStringComparator"));
  }
}
