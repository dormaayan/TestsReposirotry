/** 
 * Tests for  {@link StandardComparisonStrategy#isGreaterThan(Object,Object)}.
 * @author Joel Costigliola
 */
public class StandardComparisonStrategy_isGreaterThan_Test extends AbstractTest_StandardComparisonStrategy {
  @Test public void verify_that_isGreaterThan_delegates_to_compare_method(){
    Employee boss=mock(Employee.class);
    Employee young=new Employee(10000,25);
    standardComparisonStrategy.isGreaterThan(boss,young);
    verify(boss).compareTo(young);
  }
  @Test public void should_pass(){
    Employee boss=new Employee(10000,35);
    Employee young=new Employee(10000,25);
    assertThat(standardComparisonStrategy.isGreaterThan(boss,young)).isTrue();
    assertThat(standardComparisonStrategy.isGreaterThan(young,boss)).isFalse();
    assertThat(standardComparisonStrategy.isGreaterThan(boss,boss)).isFalse();
  }
  @Test public void should_fail_if_first_parameter_is_not_comparable(){
    assertThatIllegalArgumentException().isThrownBy(() -> standardComparisonStrategy.isGreaterThan(new Rectangle(),"foo"));
  }
}
