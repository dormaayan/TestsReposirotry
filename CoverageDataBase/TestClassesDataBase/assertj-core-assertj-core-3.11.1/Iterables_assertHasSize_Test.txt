/** 
 * Tests for <code> {@link Iterables#assertHasSize(org.assertj.core.api.AssertionInfo,Iterable,int)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Iterables_assertHasSize_Test extends IterablesBaseTest {
  @Test public void should_pass_if_size_of_actual_is_equal_to_expected_size(){
    iterables.assertHasSize(someInfo(),newArrayList("Luke","Yoda"),2);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterables.assertHasSize(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_size_of_actual_is_not_equal_to_expected_size(){
    AssertionInfo info=someInfo();
    Collection<String> actual=newArrayList("Yoda");
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterables.assertHasSize(info,actual,8)).withMessage(shouldHaveSize(actual,actual.size(),8).create());
  }
  @Test public void should_pass_if_size_of_actual_is_equal_to_expected_size_whatever_custom_comparison_strategy_is(){
    iterablesWithCaseInsensitiveComparisonStrategy.assertHasSize(someInfo(),newArrayList("Luke","Yoda"),2);
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterablesWithCaseInsensitiveComparisonStrategy.assertHasSize(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_size_of_actual_is_not_equal_to_expected_size_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    Collection<String> actual=newArrayList("Yoda");
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> iterablesWithCaseInsensitiveComparisonStrategy.assertHasSize(info,actual,8)).withMessage(shouldHaveSize(actual,actual.size(),8).create());
  }
}
