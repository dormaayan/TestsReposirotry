/** 
 * Tests for <code> {@link ShouldNotBeExactlyInstanceOf#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code>.
 * @author Nicolas Fran√ßois
 * @author Joel Costigliola
 */
public class ShouldNotBeExactlyInstance_create_Test {
  private ErrorMessageFactory factory;
  @BeforeEach public void setUp(){
    factory=shouldNotBeExactlyInstance("Yoda",String.class);
  }
  @Test public void should_create_error_message(){
    String message=factory.create(new TestDescription("Test"),new StandardRepresentation());
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting%n" + " <\"Yoda\">%n"+ "not to be of exact type:%n"+ " <java.lang.String>"));
  }
  @Test public void should_create_error_message_with_stack_trace_for_throwable(){
    IllegalArgumentException throwable=new IllegalArgumentException();
    String message=shouldNotBeExactlyInstance(throwable,IllegalArgumentException.class).create();
    assertThat(message).isEqualTo(format("%nExpecting%n" + " <\"" + getStackTrace(throwable) + "\">%n"+ "not to be of exact type:%n"+ " <java.lang.IllegalArgumentException>"));
  }
}
