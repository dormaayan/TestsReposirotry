/** 
 * Tests for <code> {@link Dates#assertHasTime(AssertionInfo,Date,long)}</code>.
 * @author Guillaume Girou
 * @author Nicolas FranÃ§ois
 */
public class Dates_assertHasTime_Test extends DatesBaseTest {
  @Override protected void initActualDate(){
    actual=new Date(42);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> dates.assertHasTime(someInfo(),null,1)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_has_same_time(){
    dates.assertHasTime(someInfo(),actual,42L);
  }
  @Test() public void should_fail_if_actual_has_not_same_time(){
    AssertionInfo info=someInfo();
    try {
      dates.assertHasTime(someInfo(),actual,24L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveTime(actual,24L));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
