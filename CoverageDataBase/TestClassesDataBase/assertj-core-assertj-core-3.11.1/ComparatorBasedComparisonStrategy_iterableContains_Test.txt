/** 
 * Tests for  {@link ComparatorBasedComparisonStrategy#iterableContains(java.util.Collection,Object)}.
 * @author Joel Costigliola
 */
public class ComparatorBasedComparisonStrategy_iterableContains_Test extends AbstractTest_ComparatorBasedComparisonStrategy {
  @Test public void should_return_true_if_collections_contains_value_according_to_given_comparator(){
    List<String> hobbits=newArrayList("Merry","Frodo",null,"Merry","Sam");
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"Sam")).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"SAM")).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"sAm")).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"sam")).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,null)).isTrue();
  }
  @Test public void should_return_false_if_collections_does_not_contain_value_according_to_given_comparator(){
    List<String> hobbits=newArrayList("Merry","Frodo","Merry",null,"Sam");
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"Pippin")).isFalse();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"SAM ")).isFalse();
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(hobbits,"Sam ")).isFalse();
  }
  @Test public void should_return_false_if_collections_is_empty_whatever_given_comparator_is(){
    assertThat(caseInsensitiveComparisonStrategy.iterableContains(newArrayList(),"anyone")).isFalse();
  }
}
