/** 
 * Tests for <code> {@link BooleanArrays#assertIsSortedAccordingToComparator(AssertionInfo,boolean[],Comparator)}</code>
 * @author Joel Costigliola
 */
public class BooleanArrays_assertIsSortedAccordingToComparator_Test extends BooleanArraysBaseTest {
  private Comparator<Boolean> booleanDescendingOrderComparator;
  private Comparator<Boolean> booleanAscendingOrderComparator;
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=new boolean[]{true,true,false,false};
    booleanDescendingOrderComparator=(boolean1,boolean2) -> -boolean1.compareTo(boolean2);
    booleanAscendingOrderComparator=(boolean1,boolean2) -> boolean1.compareTo(boolean2);
  }
  @Test public void should_pass_if_actual_is_sorted_according_to_given_comparator(){
    arrays.assertIsSortedAccordingToComparator(someInfo(),actual,booleanDescendingOrderComparator);
  }
  @Test public void should_pass_if_actual_is_empty_whatever_given_comparator_is(){
    arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),booleanDescendingOrderComparator);
    arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),booleanAscendingOrderComparator);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertIsSortedAccordingToComparator(someInfo(),null,booleanDescendingOrderComparator)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_comparator_is_null(){
    assertThatNullPointerException().isThrownBy(() -> arrays.assertIsSortedAccordingToComparator(someInfo(),emptyArray(),null));
  }
  @Test public void should_fail_if_actual_is_not_sorted_according_to_given_comparator(){
    AssertionInfo info=someInfo();
    actual=new boolean[]{true,true,false,true};
    try {
      arrays.assertIsSortedAccordingToComparator(info,actual,booleanDescendingOrderComparator);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeSortedAccordingToGivenComparator(2,actual,booleanDescendingOrderComparator));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
