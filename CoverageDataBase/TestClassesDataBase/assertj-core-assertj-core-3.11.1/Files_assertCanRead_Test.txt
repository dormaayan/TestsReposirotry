/** 
 * Tests for <code> {@link Files#assertCanRead(AssertionInfo,File)}</code>.
 * @author Olivier Demeijer
 * @author Joel Costigliola
 */
public class Files_assertCanRead_Test extends FilesBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> files.assertCanRead(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_can_not_read(){
    when(actual.canRead()).thenReturn(false);
    AssertionInfo info=someInfo();
    try {
      files.assertCanRead(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeReadable(actual));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_can_read(){
    when(actual.canRead()).thenReturn(true);
    files.assertCanRead(someInfo(),actual);
  }
}
