/** 
 * Tests for <code> {@link Dates#assertIsInSameMinuteWindowAs(AssertionInfo,Date,Date)}</code>.
 * @author Joel Costigliola
 */
public class Dates_assertIsInSameMinuteWindowAs_Test extends DatesBaseTest {
  @Override protected void initActualDate(){
    actual=parseDatetime("2011-01-01T03:15:00");
  }
  @Test public void should_pass_if_actual_is_in_same_minute_window_as_given_date(){
    dates.assertIsInSameMinuteWindowAs(someInfo(),actual,parseDatetime("2011-01-01T03:15:59"));
    dates.assertIsInSameMinuteWindowAs(someInfo(),actual,parseDatetime("2011-01-01T03:14:01"));
  }
  @Test public void should_fail_if_actual_is_exactly_one_minute_away_from_given_date(){
    AssertionInfo info=someInfo();
    Date other=parseDatetime("2011-01-01T03:16:00");
    try {
      dates.assertIsInSameMinuteWindowAs(info,actual,other);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeInSameMinuteWindow(actual,other));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_not_in_same_minute_window_as_given_date(){
    AssertionInfo info=someInfo();
    Date other=parseDatetime("2011-01-01T03:16:01");
    try {
      dates.assertIsInSameMinuteWindowAs(info,actual,other);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeInSameMinuteWindow(actual,other));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> dates.assertIsInSameMinuteWindowAs(someInfo(),null,new Date())).withMessage(actualIsNull());
  }
  @Test public void should_throw_error_if_given_date_is_null(){
    assertThatNullPointerException().isThrownBy(() -> dates.assertIsInSameMinuteWindowAs(someInfo(),actual,null)).withMessage(dateToCompareActualWithIsNull());
  }
  @Test public void should_fail_if_actual_is_not_in_same_minute_window_as_given_date_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    Date other=parseDatetime("2011-01-01T03:13:59");
    try {
      datesWithCustomComparisonStrategy.assertIsInSameMinuteWindowAs(info,actual,other);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeInSameMinuteWindow(actual,other));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> datesWithCustomComparisonStrategy.assertIsInSameMinuteWindowAs(someInfo(),null,new Date())).withMessage(actualIsNull());
  }
  @Test public void should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is(){
    assertThatNullPointerException().isThrownBy(() -> datesWithCustomComparisonStrategy.assertIsInSameMinuteWindowAs(someInfo(),actual,null)).withMessage(dateToCompareActualWithIsNull());
  }
  @Test public void should_pass_if_actual_is_in_same_minute_window_as_given_date_whatever_custom_comparison_strategy_is(){
    datesWithCustomComparisonStrategy.assertIsInSameMinuteWindowAs(someInfo(),actual,parseDatetime("2011-01-01T03:15:59"));
  }
}
