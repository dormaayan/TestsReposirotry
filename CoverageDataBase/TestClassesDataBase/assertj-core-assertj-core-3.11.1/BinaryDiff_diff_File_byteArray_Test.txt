/** 
 * Tests for <code> {@link BinaryDiff#diff(java.io.File,byte[])}</code>.
 * @author Olivier Michallat
 * @author Joel Costigliola
 */
public class BinaryDiff_diff_File_byteArray_Test {
  private static BinaryDiff binaryDiff;
  private static TextFileWriter writer;
  @BeforeAll public static void setUpOnce(){
    binaryDiff=new BinaryDiff();
    writer=TextFileWriter.instance();
  }
  private File actual;
  private byte[] expected;
  @BeforeEach public void setUp(){
    actual=Files.newTemporaryFile();
    actual.deleteOnExit();
  }
  @Test public void should_return_no_diff_if_file_and_array_have_equal_content() throws IOException {
    writer.write(actual,"test");
    expected=("test" + lineSeparator()).getBytes();
    BinaryDiffResult result=binaryDiff.diff(actual,expected);
    assertThat(result.hasNoDiff()).isTrue();
  }
  @Test public void should_return_diff_if_inputstreams_differ_on_one_byte() throws IOException {
    writer.write(actual,"test");
    expected=("fest" + lineSeparator()).getBytes();
    BinaryDiffResult result=binaryDiff.diff(actual,expected);
    assertThat(result.offset).isEqualTo(0);
    assertThat(result.actual).isEqualTo("0x74");
    assertThat(result.expected).isEqualTo("0x66");
  }
  @Test public void should_return_diff_if_actual_is_shorter() throws IOException {
    writer.write(actual,"foo");
    expected=("foo" + lineSeparator() + "bar").getBytes();
    BinaryDiffResult result=binaryDiff.diff(actual,expected);
    assertThat(result.offset).isEqualTo(3 + lineSeparator().length());
    assertThat(result.actual).isEqualTo("EOF");
    assertThat(result.expected).isEqualTo("0x62");
  }
  @Test public void should_return_diff_if_expected_is_shorter() throws IOException {
    writer.write(actual,"foobar");
    expected="foo".getBytes();
    BinaryDiffResult result=binaryDiff.diff(actual,expected);
    assertThat(result.offset).isEqualTo(3);
    assertThat(result.actual).isEqualTo("0x62");
    assertThat(result.expected).isEqualTo("EOF");
  }
}
