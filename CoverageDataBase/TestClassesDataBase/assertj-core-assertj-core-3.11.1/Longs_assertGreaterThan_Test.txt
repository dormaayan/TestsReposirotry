/** 
 * Tests for <code> {@link Longs#assertGreaterThan(AssertionInfo,Long,long)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Longs_assertGreaterThan_Test extends LongsBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> longs.assertGreaterThan(someInfo(),null,8L)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other(){
    longs.assertGreaterThan(someInfo(),8L,6L);
  }
  @Test public void should_fail_if_actual_is_equal_to_other(){
    AssertionInfo info=someInfo();
    try {
      longs.assertGreaterThan(info,6L,6L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreater(6L,6L));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_less_than_other(){
    AssertionInfo info=someInfo();
    try {
      longs.assertGreaterThan(info,6L,8L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreater(6L,8L));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy(){
    longsWithAbsValueComparisonStrategy.assertGreaterThan(someInfo(),8L,6L);
  }
  @Test public void should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      longsWithAbsValueComparisonStrategy.assertGreaterThan(info,-6L,6L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreater(-6L,6L,absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      longsWithAbsValueComparisonStrategy.assertGreaterThan(info,6L,-8L);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreater(6L,-8L,absValueComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
