/** 
 * @author Filip Hrisafov
 */
public class OptionalAssert_get_Test extends BaseTest {
  @Test public void should_fail_when_optional_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat((Optional<String>)null).get()).withMessage(actualIsNull());
  }
  @Test public void should_fail_when_optional_is_empty(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(Optional.<String>empty()).get()).withMessage(shouldBePresent(Optional.<String>empty()).create());
  }
  @Test public void should_pass_when_optional_contains_a_value(){
    TolkienCharacter frodo=TolkienCharacter.of("Frodo",33,Race.HOBBIT);
    assertThat(Optional.of(frodo)).get().hasNoNullFieldsOrProperties();
  }
}
