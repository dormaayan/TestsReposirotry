/** 
 * Tests for <code> {@link Comparables#assertGreaterThanOrEqualTo(AssertionInfo,Comparable,Comparable)}</code>.
 * @author Alex Ruiz
 * @author Joel Costigliola
 */
public class Comparables_assertGreaterThanOrEqualTo_Test extends ComparablesBaseTest {
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> comparables.assertGreaterThanOrEqualTo(someInfo(),null,8)).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_is_greater_than_other(){
    comparables.assertGreaterThanOrEqualTo(someInfo(),8,6);
  }
  @Test public void should_pass_if_actual_is_equal_to_other(){
    comparables.assertGreaterThanOrEqualTo(someInfo(),"Yoda","Yoda");
    comparables.assertGreaterThanOrEqualTo(someInfo(),BigDecimal.TEN,BigDecimal.TEN);
    comparables.assertGreaterThanOrEqualTo(someInfo(),BigDecimal.TEN,new BigDecimal("10.000"));
    comparables.assertGreaterThanOrEqualTo(someInfo(),new BigDecimal("10.0"),new BigDecimal("10.000"));
  }
  @Test public void should_fail_if_actual_is_less_than_other(){
    AssertionInfo info=someInfo();
    try {
      comparables.assertGreaterThanOrEqualTo(info,6,8);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual(6,8));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy(){
    comparablesWithCustomComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),8,-6);
  }
  @Test public void should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy(){
    comparablesWithCustomComparisonStrategy.assertGreaterThanOrEqualTo(someInfo(),-8,8);
  }
  @Test public void should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy(){
    AssertionInfo info=someInfo();
    try {
      comparablesWithCustomComparisonStrategy.assertGreaterThanOrEqualTo(info,6,-8);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldBeGreaterOrEqual(6,-8,customComparisonStrategy));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
