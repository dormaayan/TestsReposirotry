/** 
 * Tests for <code> {@link AbstractIterableAssert#doesNotContainSubsequence(List)}</code>.
 * @author Chris Arnott
 */
public class IterableAssert_doesNotContainSubsequence_List_Test extends IterableAssertBaseTest {
  @Override protected ConcreteIterableAssert<Object> invoke_api_method(){
    return assertions.doesNotContainSubsequence(newLinkedHashSet((Object)"Luke","Leia"));
  }
  @Override protected void verify_internal_effects(){
    verify(iterables).assertDoesNotContainSubsequence(getInfo(assertions),getActual(assertions),array("Luke","Leia"));
  }
  @Test public void should_throw_error_if_subsequence_is_null(){
    assertThatNullPointerException().isThrownBy(() -> {
      List<Object> nullList=null;
      assertions.doesNotContainSubsequence(nullList);
    }
).withMessage(nullSubsequence());
  }
}
