/** 
 * Only test String based assertion (tests with  {@link LocalDate} are already defined in assertj-core)
 */
public class LocalDateAssert_isNotEqualTo_Test extends LocalDateAssertBaseTest {
  @Test public void test_isNotEqualTo_assertion(){
    assertThat(REFERENCE).isNotEqualTo(REFERENCE.plusDays(1).toString());
    assertThatThrownBy(() -> assertThat(REFERENCE).isNotEqualTo(REFERENCE.toString())).isInstanceOf(AssertionError.class);
  }
  @Test public void test_isNotEqualTo_assertion_error_message(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(LocalDate.of(2000,1,5)).isNotEqualTo(LocalDate.of(2000,1,5).toString())).withMessage(format("%nExpecting:%n <2000-01-05>%nnot to be equal to:%n <2000-01-05>%n"));
  }
  @Test public void should_fail_if_date_as_string_parameter_is_null(){
    assertThatIllegalArgumentException().isThrownBy(() -> assertThat(LocalDate.now()).isNotEqualTo((String)null)).withMessage("The String representing the LocalDate to compare actual with should not be null");
  }
}
