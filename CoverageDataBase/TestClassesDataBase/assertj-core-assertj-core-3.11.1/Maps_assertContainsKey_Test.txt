/** 
 * Tests for <code> {@link Maps#assertContainsKey(AssertionInfo,Map,Object)}</code>.
 * @author Nicolas FranÃ§ois
 * @author Joel Costigliola
 */
public class Maps_assertContainsKey_Test extends MapsBaseTest {
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual=mapOf(entry("name","Yoda"),entry("color","green"),entry((String)null,(String)null));
  }
  @Test public void should_pass_if_actual_contains_given_key(){
    maps.assertContainsKeys(someInfo(),actual,"name");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> maps.assertContainsKeys(someInfo(),null,"name")).withMessage(actualIsNull());
  }
  @Test public void should_success_if_key_is_null(){
    maps.assertContainsKeys(someInfo(),actual,(String)null);
  }
  @Test public void should_fail_if_actual_does_not_contain_key(){
    AssertionInfo info=someInfo();
    String key="power";
    try {
      maps.assertContainsKeys(info,actual,key);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldContainKeys(actual,newLinkedHashSet(key)));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
