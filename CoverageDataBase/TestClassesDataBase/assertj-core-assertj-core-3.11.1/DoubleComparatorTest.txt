public class DoubleComparatorTest {
  private static DoubleComparator comparator=new DoubleComparator(0.01d);
  public static boolean nearlyEqual(  Double a,  Double b){
    return comparator.compare(a,b) == 0;
  }
  public static boolean nearlyEqual(  Double a,  Double b,  double epsilon){
    return new DoubleComparator(epsilon).compare(a,b) == 0;
  }
  @ParameterizedTest @CsvSource({"1.0, 1.0","1.001, 1.0","0.01, 0.0","1.0, 1.001","0.001, 0.0","0.0, 0.001","-1.001, -1.0","-1.0, -1.001",","}) public void should_be_equal_if_difference_is_less_than_or_equal_to_epsilon(  Double actual,  Double other){
    assertThat(nearlyEqual(actual,other)).as("comparing %f to %f with epsilon %f",actual,other,comparator.getEpsilon()).isTrue();
  }
  @ParameterizedTest @CsvSource({"1.0, 2.0","1.010001, 1.0","1.0, 1.010001","0.0, 0.010001","-1.010001, -1.0","-1.0, -1.010001",", 1.0","1.0,"}) public void should_not_be_equal_if_difference_is_more_than_epsilon(  Double actual,  Double other){
    assertThat(nearlyEqual(actual,other)).as("comparing %f to %f with epsilon %f",actual,other,comparator.getEpsilon()).isFalse();
  }
}
