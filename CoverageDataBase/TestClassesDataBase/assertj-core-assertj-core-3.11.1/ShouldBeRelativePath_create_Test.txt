/** 
 * Tests for <code> {@link ShouldBeRelativePath#create(org.assertj.core.description.Description,org.assertj.core.presentation.Representation)}</code> .
 */
public class ShouldBeRelativePath_create_Test {
  private static final TestDescription TEST_DESCRIPTION=new TestDescription("Test");
  private static final StandardRepresentation STANDARD_REPRESENTATION=new StandardRepresentation();
  @Test public void should_create_error_message_for_File(){
    FakeFile file=new FakeFile("xyz");
    ErrorMessageFactory factory=shouldBeRelativePath(file);
    String message=factory.create(TEST_DESCRIPTION,STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] " + SHOULD_BE_RELATIVE_PATH,file));
  }
  @Test public void should_create_error_message_for_Path(){
    final Path path=mock(Path.class);
    ErrorMessageFactory factory=shouldBeRelativePath(path);
    String message=factory.create(TEST_DESCRIPTION,STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] " + SHOULD_BE_RELATIVE_PATH,path));
  }
}
