/** 
 * Tests for <code> {@link MapAssert#hasEntrySatisfying(Condition)}</code>.
 */
public class MapAssert_hasEntrySatisfying_with_condition_Test extends MapAssertBaseTest {
  private final Condition<Object> condition=new Condition<Object>(){
    @Override public boolean matches(    Object value){
      return false;
    }
  }
;
  @Override protected MapAssert<Object,Object> invoke_api_method(){
    return assertions.hasEntrySatisfying(condition);
  }
  @Override protected void verify_internal_effects(){
    verify(maps).assertHasEntrySatisfying(getInfo(assertions),getActual(assertions),condition);
  }
  @Test public void invoke_like_user(){
    Map<String,Object> map=new HashMap<>();
    map.put("joe","cool");
    Condition<? super Entry<String,Object>> cond2=new Condition<Entry<String,Object>>(){
      @Override public boolean matches(      Entry<String,Object> entry){
        return !entry.getKey().isEmpty() && entry.getValue() != null;
      }
    }
;
    assertThat(map).hasEntrySatisfying(cond2);
  }
}
