/** 
 * Tests for <code> {@link AbstractAssert#isNotSameAs(Object)}</code>.
 * @author Alex Ruiz
 * @author Yvonne Wang
 * @author Mikhail Mazursky
 */
public class AbstractAssert_isNotSameAs_Test extends AbstractAssertBaseTest {
  @Override protected ConcreteAssert invoke_api_method(){
    return assertions.isNotSameAs(8L);
  }
  @Override protected void verify_internal_effects(){
    verify(objects).assertNotSame(getInfo(assertions),getActual(assertions),8L);
  }
  @Test public void should_be_loosely_typed1(){
    List<String> expected=new ArrayList<>();
    List<? extends String> actual=new ArrayList<>();
    Assertions.assertThat(actual).isNotSameAs(expected);
  }
  @Test public void should_be_loosely_typed2(){
    List<? extends String> expected=new ArrayList<>();
    List<? extends String> actual=new ArrayList<>();
    Assertions.assertThat(actual).isNotSameAs(expected);
  }
}
