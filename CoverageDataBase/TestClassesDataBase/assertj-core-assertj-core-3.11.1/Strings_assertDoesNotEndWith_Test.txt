/** 
 * Tests for <code> {@link Strings#assertDoesNotEndWith(AssertionInfo,CharSequence,CharSequence)}</code>.
 * @author Michal Kordas
 */
public class Strings_assertDoesNotEndWith_Test extends StringsBaseTest {
  @Test public void should_pass_if_actual_does_not_end_with_suffix(){
    strings.assertDoesNotEndWith(someInfo(),"Yoda","Luke");
    strings.assertDoesNotEndWith(someInfo(),"Yoda","DA");
  }
  @Test public void should_fail_if_actual_ends_with_suffix(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> strings.assertDoesNotEndWith(someInfo(),"Yoda","oda")).withMessage(shouldNotEndWith("Yoda","oda").create());
  }
  @Test public void should_throw_error_if_suffix_is_null(){
    assertThatNullPointerException().isThrownBy(() -> strings.assertDoesNotEndWith(someInfo(),"Yoda",null)).withMessage("The given suffix should not be null");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> strings.assertDoesNotEndWith(someInfo(),null,"Yoda")).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_actual_does_not_end_with_suffix_according_to_custom_comparison_strategy(){
    stringsWithCaseInsensitiveComparisonStrategy.assertDoesNotEndWith(someInfo(),"Yoda","Luke");
  }
  @Test public void should_fail_if_actual_ends_with_suffix_according_to_custom_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> stringsWithCaseInsensitiveComparisonStrategy.assertDoesNotEndWith(someInfo(),"Yoda","A")).withMessage(shouldNotEndWith("Yoda","A",comparisonStrategy).create());
  }
}
