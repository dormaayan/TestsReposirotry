/** 
 * Tests for <code> {@link BigDecimals#assertIsPositive(org.assertj.core.api.AssertionInfo,Comparable)}</code>.
 * @author Yvonne Wang
 * @author Joel Costigliola
 */
public class BigDecimals_assertIsPositive_Test extends BigDecimalsBaseTest {
  @Test public void should_succeed_since_actual_is_positive(){
    numbers.assertIsPositive(someInfo(),BigDecimal.ONE);
  }
  @Test public void should_fail_since_actual_is_not_positive(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> numbers.assertIsPositive(someInfo(),BigDecimal.ZERO)).withMessage(format("%nExpecting:%n <0>%nto be greater than:%n <0> "));
  }
  @Test public void should_fail_since_actual_is_zero(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> numbers.assertIsPositive(someInfo(),BigDecimal.ZERO)).withMessage(format("%nExpecting:%n <0>%nto be greater than:%n <0> "));
  }
  @Test public void should_succeed_since_actual_is_positive_according_to_custom_comparison_strategy(){
    numbersWithComparatorComparisonStrategy.assertIsPositive(someInfo(),BigDecimal.ONE);
  }
  @Test public void should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> numbersWithComparatorComparisonStrategy.assertIsPositive(someInfo(),BigDecimal.ZERO)).withMessage(format("%nExpecting:%n <0>%nto be greater than:%n <0> when comparing values using org.assertj.core.util.BigDecimalComparator"));
  }
}
