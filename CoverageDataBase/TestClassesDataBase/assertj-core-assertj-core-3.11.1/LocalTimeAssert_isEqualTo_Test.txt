public class LocalTimeAssert_isEqualTo_Test extends LocalTimeAssertBaseTest {
  @Test public void test_isEqualTo_assertion(){
    assertThat(REFERENCE).isEqualTo(REFERENCE.toString());
    assertThatThrownBy(() -> assertThat(REFERENCE).isEqualTo(REFERENCE.plusHours(1).toString())).isInstanceOf(AssertionError.class);
  }
  @Test public void test_isEqualTo_assertion_error_message(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(LocalTime.of(3,0,5)).isEqualTo("03:03:03")).withMessage(format("%nExpecting:%n <03:00:05>%nto be equal to:%n <03:03:03>%nbut was not."));
  }
  @Test public void should_fail_if_timeTime_as_string_parameter_is_null(){
    assertThatIllegalArgumentException().isThrownBy(() -> assertThat(LocalTime.now()).isEqualTo((String)null)).withMessage("The String representing the LocalTime to compare actual with should not be null");
  }
}
