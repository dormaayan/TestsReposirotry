public class LocalDateAssert_isToday_Test extends LocalDateAssertBaseTest {
  @Test public void test_isToday_assertion(){
    assertThat(REFERENCE).isToday();
    verify_that_isToday_assertion_fails_and_throws_AssertionError(BEFORE);
    verify_that_isToday_assertion_fails_and_throws_AssertionError(AFTER);
  }
  @Test public void test_isToday_assertion_error_message(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(parse("2000-01-01")).isToday()).withMessage(format("%n" + "Expecting:%n" + " <2000-01-01>%n"+ "to be today but was not."));
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> {
      LocalDate actual=null;
      assertThat(actual).isToday();
    }
).withMessage(actualIsNull());
  }
  private static void verify_that_isToday_assertion_fails_and_throws_AssertionError(  LocalDate dateToCheck){
    assertThatThrownBy(() -> assertThat(dateToCheck).isToday()).isInstanceOf(AssertionError.class);
  }
}
