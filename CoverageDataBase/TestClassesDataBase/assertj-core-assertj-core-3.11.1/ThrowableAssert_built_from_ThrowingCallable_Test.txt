public class ThrowableAssert_built_from_ThrowingCallable_Test {
  @Test public void should_build_ThrowableAssert_with_runtime_exception_thrown_by_callable_code(){
    assertThatThrownBy(new ThrowingCallable(){
      @Override public void call(){
        throw new IllegalArgumentException("something was wrong");
      }
    }
).isInstanceOf(IllegalArgumentException.class).hasMessage("something was wrong");
  }
  @Test public void should_build_ThrowableAssert_with_throwable_thrown_by_callable_code(){
    assertThatThrownBy(new ThrowingCallable(){
      @Override public void call() throws Exception {
        throw new Exception("something was wrong");
      }
    }
).isInstanceOf(Exception.class).hasMessage("something was wrong");
  }
  @Test public void should_fail_if_nothing_is_thrown_by_callable_code(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> {
      assertThatThrownBy(new ThrowingCallable(){
        @Override public void call(){
        }
      }
);
    }
).withMessage(String.format("%nExpecting code to raise a throwable."));
  }
}
