/** 
 * Tests for <code> {@link AbstractIterableAssert#containsAnyElementsOf(Iterable)}}</code>.
 * @author Marko Bekhta
 */
public class IterableAssert_containsAnyElementsOf_Test extends IterableAssertBaseTest {
  private final List<Object> iterable=Arrays.asList(new Object(),"bar");
  @Override protected ConcreteIterableAssert<Object> invoke_api_method(){
    return assertions.containsAnyElementsOf(iterable);
  }
  @Override protected void verify_internal_effects(){
    verify(iterables).assertContainsAnyOf(getInfo(assertions),getActual(assertions),iterable.toArray());
  }
  @Test public void should_compile_as_containsAnyElementsOf_declares_bounded_wildcard_parameter(){
    Map<String,String> map=newHashMap("some_key","some_value");
    assertThat(map).extracting("some_key").containsAnyElementsOf(list("some_value","some_other_value"));
  }
}
