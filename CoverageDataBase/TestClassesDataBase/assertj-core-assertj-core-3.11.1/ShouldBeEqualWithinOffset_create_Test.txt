/** 
 * Tests for <code> {@link ShouldBeEqualWithinOffset#create(Description,org.assertj.core.presentation.Representation)}</code>.
 * @author Alex Ruiz
 */
public class ShouldBeEqualWithinOffset_create_Test {
  @Test public void should_create_error_message(){
    ErrorMessageFactory factory=shouldBeEqual(8f,6f,offset(1f),2f);
    String message=factory.create(new TestDescription("Test"),STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + "  <8.0f>%n"+ "to be close to:%n"+ "  <6.0f>%n"+ "by less than <1.0f> but difference was <2.0f>.%n"+ "(a difference of exactly <1.0f> being considered valid)"));
  }
  @Test public void should_create_error_message_for_strict_offset(){
    ErrorMessageFactory factory=shouldBeEqual(8f,6f,byLessThan(1f),2f);
    String message=factory.create(new TestDescription("Test"),STANDARD_REPRESENTATION);
    assertThat(message).isEqualTo(format("[Test] %n" + "Expecting:%n" + "  <8.0f>%n"+ "to be close to:%n"+ "  <6.0f>%n"+ "by less than <1.0f> but difference was <2.0f>.%n"+ "(a difference of exactly <1.0f> being considered invalid)"));
  }
}
