/** 
 * Tests for  {@link ComparatorBasedComparisonStrategy#isLessThan(Object,Object)}.
 * @author Joel Costigliola
 */
public class ComparatorBasedComparisonStrategy_isLessThan_Test extends AbstractTest_ComparatorBasedComparisonStrategy {
  @Test public void should_pass(){
    String string="string";
    String greaterString="STRINGA";
    assertThat(caseInsensitiveComparisonStrategy.isLessThan(string,greaterString)).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.isLessThan(greaterString,string)).isFalse();
    assertThat(caseInsensitiveComparisonStrategy.isLessThan(string,string)).isFalse();
    assertThat(caseInsensitiveComparisonStrategy.isLessThan(string,"STRING")).isFalse();
    String lowerString="stringA";
    assertThat(caseInsensitiveComparisonStrategy.isLessThan(string,lowerString)).isTrue();
    assertThat(caseInsensitiveComparisonStrategy.isLessThan(lowerString,string)).isFalse();
  }
  @Test public void should_fail_if_a_parameter_is_not_comparable(){
    assertThatExceptionOfType(ClassCastException.class).isThrownBy(() -> caseInsensitiveComparisonStrategy.isLessThan(new Rectangle(),new Rectangle()));
  }
}
