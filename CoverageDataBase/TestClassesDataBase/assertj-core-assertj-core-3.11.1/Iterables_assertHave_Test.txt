/** 
 * Tests for <code> {@link Iterables#assertHave(AssertionInfo,Iterable,org.assertj.core.api.Condition)}</code> .
 * @author Nicolas FranÃ§ois
 * @author Mikhail Mazursky
 * @author Joel Costigliola
 */
public class Iterables_assertHave_Test extends IterablesWithConditionsBaseTest {
  @Test public void should_pass_if_each_element_satisfies_condition(){
    actual=newArrayList("Yoda","Luke");
    iterables.assertHave(someInfo(),actual,jediPower);
    verify(conditions).assertIsNotNull(jediPower);
  }
  @Test public void should_throw_error_if_condition_is_null(){
    assertThatNullPointerException().isThrownBy(() -> {
      actual=newArrayList("Yoda","Luke");
      iterables.assertHave(someInfo(),actual,null);
    }
).withMessage("The condition to evaluate should not be null");
  }
  @Test public void should_fail_if_condition_is_not_met(){
    testCondition.shouldMatch(false);
    AssertionInfo info=someInfo();
    try {
      actual=newArrayList("Yoda","Luke","Leia");
      iterables.assertHave(someInfo(),actual,jediPower);
    }
 catch (    AssertionError e) {
      verify(conditions).assertIsNotNull(jediPower);
      verify(failures).failure(info,elementsShouldHave(actual,newArrayList("Leia"),jediPower));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
