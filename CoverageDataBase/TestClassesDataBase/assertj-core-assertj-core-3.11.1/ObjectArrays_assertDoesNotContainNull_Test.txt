/** 
 * Tests for <code> {@link ObjectArrays#assertDoesNotContainNull(AssertionInfo,Object[])}</code>.
 * @author Joel Costigliola
 * @author Mikhail Mazursky
 */
public class ObjectArrays_assertDoesNotContainNull_Test extends ObjectArraysBaseTest {
  @Override protected void initActualArray(){
    actual=array("Luke","Yoda");
  }
  @Test public void should_pass_if_actual_does_not_contain_null(){
    arrays.assertDoesNotContainNull(someInfo(),actual);
  }
  @Test public void should_pass_if_actual_is_empty(){
    actual=Arrays.<String>array();
    arrays.assertDoesNotContainNull(someInfo(),actual);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arrays.assertDoesNotContainNull(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_contains_null(){
    AssertionInfo info=someInfo();
    actual=array("Luke","Yoda",null);
    try {
      arrays.assertDoesNotContainNull(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotContainNull(actual));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_pass_if_actual_does_not_contain_null_whatever_custom_comparison_strategy_is(){
    arraysWithCustomComparisonStrategy.assertDoesNotContainNull(someInfo(),actual);
  }
  @Test public void should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is(){
    actual=Arrays.<String>array();
    arraysWithCustomComparisonStrategy.assertDoesNotContainNull(someInfo(),actual);
  }
  @Test public void should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> arraysWithCustomComparisonStrategy.assertDoesNotContainNull(someInfo(),null)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_contains_null_whatever_custom_comparison_strategy_is(){
    AssertionInfo info=someInfo();
    actual=array("Luke","Yoda",null);
    try {
      arraysWithCustomComparisonStrategy.assertDoesNotContainNull(info,actual);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotContainNull(actual));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
