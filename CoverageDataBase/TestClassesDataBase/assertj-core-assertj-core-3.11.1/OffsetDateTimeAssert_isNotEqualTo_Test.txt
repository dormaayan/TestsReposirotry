/** 
 * Only test String based assertion (tests with  {@link java.time.OffsetDateTime} are already defined in assertj-core)
 * @author Joel Costigliola
 * @author Marcin ZajÄ…czkowski
 */
public class OffsetDateTimeAssert_isNotEqualTo_Test extends OffsetDateTimeAssertBaseTest {
  @Test public void test_isNotEqualTo_assertion(){
    assertThat(REFERENCE).isNotEqualTo(REFERENCE.plusDays(1));
    assertThat(REFERENCE).isNotEqualTo(REFERENCE.plusDays(1).toString());
    assertThatThrownBy(() -> assertThat(REFERENCE).isNotEqualTo(REFERENCE.toString())).isInstanceOf(AssertionError.class);
  }
  @Test public void test_isNotEqualTo_assertion_error_message(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> {
      String offsetDateTimeAsString=OffsetDateTime.of(2000,1,5,3,0,5,0,UTC).toString();
      assertThat(OffsetDateTime.of(2000,1,5,3,0,5,0,UTC)).isNotEqualTo(offsetDateTimeAsString);
    }
).withMessage(format("%nExpecting:%n" + " <2000-01-05T03:00:05Z>%n" + "not to be equal to:%n"+ " <2000-01-05T03:00:05Z>%n"));
  }
  @Test public void should_fail_if_dateTime_as_string_parameter_is_null(){
    assertThatIllegalArgumentException().isThrownBy(() -> assertThat(OffsetDateTime.now()).isNotEqualTo((String)null)).withMessage("The String representing the OffsetDateTime to compare actual with should not be null");
  }
}
