/** 
 * Tests for <code> {@link Objects#assertIsExactlyInstanceOf(AssertionInfo,Object,Class)}</code>.
 * @author Joel Costigliola
 * @author Nicolas FranÃ§ois
 */
public class Objects_assertIsExactlyInstanceOf_Test extends ObjectsBaseTest {
  @Test public void should_pass_if_actual_is_exactly_instance_of_type(){
    objects.assertIsExactlyInstanceOf(someInfo(),"Yoda",String.class);
  }
  @Test public void should_throw_error_if_type_is_null(){
    assertThatNullPointerException().isThrownBy(() -> objects.assertIsExactlyInstanceOf(someInfo(),"Yoda",null)).withMessage("The given type should not be null");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> objects.assertIsExactlyInstanceOf(someInfo(),null,String.class)).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_is_not_exactly_instance_of_type(){
    AssertionInfo info=someInfo();
    try {
      objects.assertIsExactlyInstanceOf(info,"Yoda",Object.class);
      failBecauseExpectedAssertionErrorWasNotThrown();
    }
 catch (    AssertionError err) {
      verify(failures).failure(info,shouldBeExactlyInstance("Yoda",Object.class));
    }
  }
}
