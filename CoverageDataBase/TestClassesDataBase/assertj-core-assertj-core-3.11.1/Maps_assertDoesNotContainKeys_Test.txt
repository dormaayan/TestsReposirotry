/** 
 * Tests for <code> {@link org.assertj.core.internal.Maps#assertDoesNotContainKeys(org.assertj.core.api.AssertionInfo,java.util.Map,Object)}</code>.
 * @author dorzey
 */
public class Maps_assertDoesNotContainKeys_Test extends MapsBaseTest {
  @Override @BeforeEach public void setUp(){
    super.setUp();
    actual.put(null,null);
  }
  @Test public void should_pass_if_actual_does_not_contain_given_keys(){
    maps.assertDoesNotContainKeys(someInfo(),actual,"age");
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> maps.assertDoesNotContainKeys(someInfo(),null,"name","color")).withMessage(actualIsNull());
  }
  @Test public void should_pass_if_key_is_null(){
    maps.assertDoesNotContainKeys(someInfo(),actual,(String)null);
  }
  @Test public void should_fail_if_actual_contains_key(){
    AssertionInfo info=someInfo();
    String key="name";
    try {
      maps.assertDoesNotContainKeys(info,actual,key);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotContainKeys(actual,newLinkedHashSet(key)));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
  @Test public void should_fail_if_actual_contains_keys(){
    AssertionInfo info=someInfo();
    String key1="name";
    String key2="color";
    try {
      maps.assertDoesNotContainKeys(info,actual,key1,key2);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldNotContainKeys(actual,newLinkedHashSet(key1,key2)));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
