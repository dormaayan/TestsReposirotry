public class Uris_assertHasScheme_Test extends UrisBaseTest {
  @Test public void should_pass_if_actual_uri_has_the_given_scheme() throws URISyntaxException {
    uris.assertHasScheme(info,new URI("http://example.com/pages/"),"http");
    uris.assertHasScheme(info,new URI("example.com/pages/"),null);
  }
  @Test public void should_fail_if_actual_is_null(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> uris.assertHasScheme(info,null,"http")).withMessage(actualIsNull());
  }
  @Test public void should_fail_if_actual_scheme_is_not_the_expected_scheme() throws URISyntaxException {
    AssertionInfo info=someInfo();
    URI uri=new URI("http://example.com/pages/");
    String expectedScheme="ftp";
    try {
      uris.assertHasScheme(info,uri,expectedScheme);
    }
 catch (    AssertionError e) {
      verify(failures).failure(info,shouldHaveScheme(uri,expectedScheme));
      return;
    }
    failBecauseExpectedAssertionErrorWasNotThrown();
  }
}
