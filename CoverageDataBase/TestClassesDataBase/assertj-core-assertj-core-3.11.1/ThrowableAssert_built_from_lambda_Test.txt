public class ThrowableAssert_built_from_lambda_Test {
  @Test public void should_build_ThrowableAssert_with_runtime_exception_thrown_by_lambda(){
    assertThatThrownBy(() -> {
      throw new IllegalArgumentException("something was wrong");
    }
).isInstanceOf(IllegalArgumentException.class).hasMessage("something was wrong");
  }
  @Test public void should_build_ThrowableAssert_with_checked_exception_thrown_by_lambda(){
    Jedi yoda=new Jedi("Yoda","Green");
    assertThatThrownBy(() -> {
      throw new Exception(yoda + " is no Sith");
    }
).isInstanceOf(Exception.class).hasMessage(yoda + " is no Sith");
  }
  @Test public void should_fail_if_nothing_is_thrown_by_lambda(){
    assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThatThrownBy(() -> {
    }
)).withMessage(format("%nExpecting code to raise a throwable."));
  }
}
