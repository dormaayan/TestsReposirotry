/** 
 * Test case for  {@link PathFileComparator}.
 */
public class PathFileComparatorTest extends ComparatorAbstractTestCase {
  @Before public void setUp() throws Exception {
    comparator=(AbstractFileComparator)PathFileComparator.PATH_COMPARATOR;
    reverse=PathFileComparator.PATH_REVERSE;
    equalFile1=new File("foo/file.txt");
    equalFile2=new File("foo/file.txt");
    lessFile=new File("abc/file.txt");
    moreFile=new File("xyz/file.txt");
  }
  /** 
 * Test case sensitivity 
 */
  @Test public void testCaseSensitivity(){
    final File file3=new File("FOO/file.txt");
    final Comparator<File> sensitive=new PathFileComparator(null);
    assertTrue("sensitive file1 & file2 = 0",sensitive.compare(equalFile1,equalFile2) == 0);
    assertTrue("sensitive file1 & file3 > 0",sensitive.compare(equalFile1,file3) > 0);
    assertTrue("sensitive file1 & less  > 0",sensitive.compare(equalFile1,lessFile) > 0);
    final Comparator<File> insensitive=PathFileComparator.PATH_INSENSITIVE_COMPARATOR;
    assertTrue("insensitive file1 & file2 = 0",insensitive.compare(equalFile1,equalFile2) == 0);
    assertTrue("insensitive file1 & file3 = 0",insensitive.compare(equalFile1,file3) == 0);
    assertTrue("insensitive file1 & file4 > 0",insensitive.compare(equalFile1,lessFile) > 0);
    assertTrue("insensitive file3 & less  > 0",insensitive.compare(file3,lessFile) > 0);
  }
}
