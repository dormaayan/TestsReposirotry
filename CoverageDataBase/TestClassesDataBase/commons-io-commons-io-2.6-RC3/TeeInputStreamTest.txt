/** 
 * JUnit Test Case for  {@link TeeInputStream}.
 */
public class TeeInputStreamTest {
  private final String ASCII="US-ASCII";
  private InputStream tee;
  private ByteArrayOutputStream output;
  @Before public void setUp() throws Exception {
    final InputStream input=new ByteArrayInputStream("abc".getBytes(ASCII));
    output=new ByteArrayOutputStream();
    tee=new TeeInputStream(input,output);
  }
  @Test public void testReadNothing() throws Exception {
    assertEquals("",new String(output.toString(ASCII)));
  }
  @Test public void testReadOneByte() throws Exception {
    assertEquals('a',tee.read());
    assertEquals("a",new String(output.toString(ASCII)));
  }
  @Test public void testReadEverything() throws Exception {
    assertEquals('a',tee.read());
    assertEquals('b',tee.read());
    assertEquals('c',tee.read());
    assertEquals(-1,tee.read());
    assertEquals("abc",new String(output.toString(ASCII)));
  }
  @Test public void testReadToArray() throws Exception {
    final byte[] buffer=new byte[8];
    assertEquals(3,tee.read(buffer));
    assertEquals('a',buffer[0]);
    assertEquals('b',buffer[1]);
    assertEquals('c',buffer[2]);
    assertEquals(-1,tee.read(buffer));
    assertEquals("abc",new String(output.toString(ASCII)));
  }
  @Test public void testReadToArrayWithOffset() throws Exception {
    final byte[] buffer=new byte[8];
    assertEquals(3,tee.read(buffer,4,4));
    assertEquals('a',buffer[4]);
    assertEquals('b',buffer[5]);
    assertEquals('c',buffer[6]);
    assertEquals(-1,tee.read(buffer,4,4));
    assertEquals("abc",new String(output.toString(ASCII)));
  }
  @Test public void testSkip() throws Exception {
    assertEquals('a',tee.read());
    assertEquals(1,tee.skip(1));
    assertEquals('c',tee.read());
    assertEquals(-1,tee.read());
    assertEquals("ac",new String(output.toString(ASCII)));
  }
  @Test public void testMarkReset() throws Exception {
    assertEquals('a',tee.read());
    tee.mark(1);
    assertEquals('b',tee.read());
    tee.reset();
    assertEquals('b',tee.read());
    assertEquals('c',tee.read());
    assertEquals(-1,tee.read());
    assertEquals("abbc",new String(output.toString(ASCII)));
  }
}
