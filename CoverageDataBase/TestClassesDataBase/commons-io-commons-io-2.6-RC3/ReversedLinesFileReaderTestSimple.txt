public class ReversedLinesFileReaderTestSimple {
  private ReversedLinesFileReader reversedLinesFileReader;
  @After public void closeReader(){
    try {
      reversedLinesFileReader.close();
    }
 catch (    final Exception e) {
    }
  }
  @Test public void testFileSizeIsExactMultipleOfBlockSize() throws URISyntaxException, IOException {
    final int blockSize=10;
    final File testFile20Bytes=new File(this.getClass().getResource("/test-file-20byteslength.bin").toURI());
    reversedLinesFileReader=new ReversedLinesFileReader(testFile20Bytes,blockSize,"ISO-8859-1");
    final String testLine="123456789";
    assertEqualsAndNoLineBreaks(testLine,reversedLinesFileReader.readLine());
    assertEqualsAndNoLineBreaks(testLine,reversedLinesFileReader.readLine());
  }
  @Test(expected=UnsupportedEncodingException.class) public void testUnsupportedEncodingUTF16() throws URISyntaxException, IOException {
    final File testFileEmpty=new File(this.getClass().getResource("/test-file-empty.bin").toURI());
    new ReversedLinesFileReader(testFileEmpty,4096,"UTF-16").close();
  }
  @Test(expected=UnsupportedEncodingException.class) public void testUnsupportedEncodingBig5() throws URISyntaxException, IOException {
    final File testFileEncodingBig5=new File(this.getClass().getResource("/test-file-empty.bin").toURI());
    new ReversedLinesFileReader(testFileEncodingBig5,4096,"Big5").close();
  }
}
