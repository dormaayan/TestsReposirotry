/** 
 * DirectoryWalker implementation that recursively lists all files and directories.
 */
static class ListDirectoryWalker extends DirectoryWalker<File> {
  ListDirectoryWalker(){
    super();
  }
  List<File> list(  final File startDirectory) throws IOException {
    final ArrayList<File> files=new ArrayList<>();
    walk(startDirectory,files);
    return files;
  }
  @Override protected void handleDirectoryStart(  final File directory,  final int depth,  final Collection<File> results) throws IOException {
    if (depth > 0) {
      results.add(directory);
    }
  }
  @Override protected void handleFile(  final File file,  final int depth,  final Collection<File> results) throws IOException {
    results.add(file);
  }
}
