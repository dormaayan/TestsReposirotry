/** 
 * Test case for  {@link SizeFileComparator}.
 */
public class SizeFileComparatorTest extends ComparatorAbstractTestCase {
  private File smallerDir;
  private File largerDir;
  private File smallerFile;
  private File largerFile;
  /** 
 * @see junit.framework.TestCase#setUp() 
 */
  @Before public void setUp() throws Exception {
    comparator=(AbstractFileComparator)SizeFileComparator.SIZE_COMPARATOR;
    reverse=SizeFileComparator.SIZE_REVERSE;
    final File dir=getTestDirectory();
    smallerDir=new File(dir,"smallerdir");
    largerDir=new File(dir,"largerdir");
    smallerFile=new File(smallerDir,"smaller.txt");
    final File equalFile=new File(dir,"equal.txt");
    largerFile=new File(largerDir,"larger.txt");
    smallerDir.mkdir();
    largerDir.mkdir();
    if (!smallerFile.getParentFile().exists()) {
      throw new IOException("Cannot create file " + smallerFile + " as the parent directory does not exist");
    }
    try (final BufferedOutputStream output2=new BufferedOutputStream(new FileOutputStream(smallerFile))){
      TestUtils.generateTestData(output2,32);
    }
     if (!equalFile.getParentFile().exists()) {
      throw new IOException("Cannot create file " + equalFile + " as the parent directory does not exist");
    }
    try (final BufferedOutputStream output1=new BufferedOutputStream(new FileOutputStream(equalFile))){
      TestUtils.generateTestData(output1,48);
    }
     if (!largerFile.getParentFile().exists()) {
      throw new IOException("Cannot create file " + largerFile + " as the parent directory does not exist");
    }
    try (final BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(largerFile))){
      TestUtils.generateTestData(output,64);
    }
     equalFile1=equalFile;
    equalFile2=equalFile;
    lessFile=smallerFile;
    moreFile=largerFile;
  }
  /** 
 * Test a file which doesn't exist.
 */
  @Test public void testNonexistantFile(){
    final File nonexistantFile=new File(new File("."),"nonexistant.txt");
    assertFalse(nonexistantFile.exists());
    assertTrue("less",comparator.compare(nonexistantFile,moreFile) < 0);
  }
  /** 
 * Test a file which doesn't exist.
 */
  @Test public void testCompareDirectorySizes(){
    assertEquals("sumDirectoryContents=false",0,comparator.compare(smallerDir,largerDir));
    assertEquals("less",-1,SizeFileComparator.SIZE_SUMDIR_COMPARATOR.compare(smallerDir,largerDir));
    assertEquals("less",1,SizeFileComparator.SIZE_SUMDIR_REVERSE.compare(smallerDir,largerDir));
  }
}
