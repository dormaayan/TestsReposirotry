static class RepeatingEntity extends AbstractHttpEntity {
  private final byte[] raw;
  private final int n;
  public RepeatingEntity(  final String content,  final Charset charset,  final int n){
    super();
    final Charset cs=charset != null ? charset : Charset.forName("US-ASCII");
    final byte[] b=content.getBytes(cs);
    this.raw=b;
    this.n=n;
  }
  @Override public InputStream getContent() throws IOException, IllegalStateException {
    throw new IllegalStateException("This method is not implemented");
  }
  @Override public long getContentLength(){
    return (this.raw.length + 2) * this.n;
  }
  @Override public boolean isRepeatable(){
    return true;
  }
  @Override public boolean isStreaming(){
    return false;
  }
  @Override public void writeTo(  final OutputStream outStream) throws IOException {
    for (int i=0; i < this.n; i++) {
      outStream.write(this.raw);
      outStream.write('\r');
      outStream.write('\n');
    }
    outStream.flush();
  }
}
