/** 
 * Unit tests for  {@link LangUtils}.
 */
public class TestLangUtils {
  @Test public void testBasicHash(){
    final Integer i=new Integer(1234);
    final int h1=LangUtils.hashCode(LangUtils.HASH_SEED,i.hashCode());
    final int h2=LangUtils.hashCode(LangUtils.HASH_SEED,i);
    Assert.assertTrue(h1 == h2);
  }
  @Test public void testNullObjectHash(){
    final int h1=LangUtils.hashCode(LangUtils.HASH_SEED,null);
    final int h2=LangUtils.hashCode(LangUtils.HASH_SEED,0);
    Assert.assertTrue(h1 == h2);
  }
  @Test public void testBooleanHash(){
    final int h1=LangUtils.hashCode(LangUtils.HASH_SEED,true);
    final int h2=LangUtils.hashCode(LangUtils.HASH_SEED,false);
    final int h3=LangUtils.hashCode(LangUtils.HASH_SEED,true);
    final int h4=LangUtils.hashCode(LangUtils.HASH_SEED,false);
    Assert.assertTrue(h1 != h2);
    Assert.assertTrue(h1 == h3);
    Assert.assertTrue(h2 == h4);
  }
  @Test public void testBasicEquality(){
    Assert.assertTrue(LangUtils.equals(null,null));
    Assert.assertFalse(LangUtils.equals(null,"abc"));
    Assert.assertFalse(LangUtils.equals("abc",null));
    Assert.assertTrue(LangUtils.equals("abc","abc"));
  }
  @Test public void testArrayEquals(){
    Assert.assertFalse(LangUtils.equals(null,new Object[]{}));
    Assert.assertFalse(LangUtils.equals(new Object[]{},null));
    Assert.assertTrue(LangUtils.equals(new Object[]{},new Object[]{}));
    Assert.assertFalse(LangUtils.equals(new Object[]{new Integer(1),new Integer(2)},new Object[]{new Integer(1)}));
    Assert.assertFalse(LangUtils.equals(new Object[]{new Integer(1),new Integer(2)},new Object[]{new Integer(1),new Integer(3)}));
    Assert.assertTrue(LangUtils.equals(new Object[]{new Integer(1),new Integer(2)},new Object[]{new Integer(1),new Integer(2)}));
  }
}
