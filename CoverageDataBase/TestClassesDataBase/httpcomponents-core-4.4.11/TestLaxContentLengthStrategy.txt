public class TestLaxContentLengthStrategy {
  @Test public void testEntityWithTransferEncoding() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Transfer-Encoding","identity, chunked");
    message.addHeader("Content-Length","plain wrong");
    Assert.assertEquals(ContentLengthStrategy.CHUNKED,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithIdentityTransferEncoding() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Transfer-Encoding","identity");
    message.addHeader("Content-Length","plain wrong");
    Assert.assertEquals(ContentLengthStrategy.IDENTITY,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithUnsupportedTransferEncoding() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Transfer-Encoding","whatever; param=value, chunked");
    message.addHeader("Content-Length","plain wrong");
    Assert.assertEquals(ContentLengthStrategy.CHUNKED,lenStrategy.determineLength(message));
  }
  @Test public void testChunkedTransferEncodingMustBeLast() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Transfer-Encoding","chunked, identity");
    message.addHeader("Content-Length","plain wrong");
    Assert.assertEquals(ContentLengthStrategy.IDENTITY,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithContentLength() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Content-Length","0");
    Assert.assertEquals(0,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithMultipleContentLength() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Content-Length","0");
    message.addHeader("Content-Length","0");
    message.addHeader("Content-Length","1");
    Assert.assertEquals(1,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithMultipleContentLengthSomeWrong() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Content-Length","1");
    message.addHeader("Content-Length","yyy");
    message.addHeader("Content-Length","xxx");
    Assert.assertEquals(1,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithMultipleContentLengthAllWrong() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Content-Length","yyy");
    message.addHeader("Content-Length","xxx");
    Assert.assertEquals(ContentLengthStrategy.IDENTITY,lenStrategy.determineLength(message));
  }
  @Test public void testEntityWithInvalidContentLength() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    message.addHeader("Content-Type","unknown");
    message.addHeader("Content-Length","xxx");
    Assert.assertEquals(ContentLengthStrategy.IDENTITY,lenStrategy.determineLength(message));
  }
  @Test public void testEntityNeitherContentLengthNorTransferEncoding() throws Exception {
    final ContentLengthStrategy lenStrategy=new LaxContentLengthStrategy();
    final HttpMessage message=new DummyHttpMessage();
    Assert.assertEquals(ContentLengthStrategy.IDENTITY,lenStrategy.determineLength(message));
  }
}
