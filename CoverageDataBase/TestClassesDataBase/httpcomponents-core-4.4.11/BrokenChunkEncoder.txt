static class BrokenChunkEncoder extends AbstractContentEncoder {
  private final CharArrayBuffer lineBuffer;
  private boolean done;
  public BrokenChunkEncoder(  final WritableByteChannel channel,  final SessionOutputBuffer buffer,  final HttpTransportMetricsImpl metrics){
    super(channel,buffer,metrics);
    this.lineBuffer=new CharArrayBuffer(16);
  }
  @Override public void complete() throws IOException {
    super.complete();
  }
  @Override public int write(  final ByteBuffer src) throws IOException {
    final int chunk;
    if (!this.done) {
      this.lineBuffer.clear();
      this.lineBuffer.append(Integer.toHexString(GARBAGE.length * 10));
      this.buffer.writeLine(this.lineBuffer);
      this.buffer.write(ByteBuffer.wrap(GARBAGE));
      this.done=true;
      chunk=GARBAGE.length;
    }
 else {
      chunk=0;
    }
    final long bytesWritten=this.buffer.flush(this.channel);
    if (bytesWritten > 0) {
      this.metrics.incrementBytesTransferred(bytesWritten);
    }
    if (!this.buffer.hasData()) {
      this.channel.close();
    }
    return chunk;
  }
}
