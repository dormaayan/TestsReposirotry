/** 
 * Unit tests for  {@link AbstractHttpEntity}.
 */
public class TestAbstractHttpEntity {
  @Test public void testContentType() throws Exception {
    final BasicHttpEntity httpentity=new BasicHttpEntity();
    httpentity.setContentType(new BasicHeader(HTTP.CONTENT_TYPE,"blah"));
    Assert.assertEquals(HTTP.CONTENT_TYPE,httpentity.getContentType().getName());
    Assert.assertEquals("blah",httpentity.getContentType().getValue());
    httpentity.setContentType("blah");
    Assert.assertEquals(HTTP.CONTENT_TYPE,httpentity.getContentType().getName());
    Assert.assertEquals("blah",httpentity.getContentType().getValue());
    httpentity.setContentType((Header)null);
    Assert.assertNull(httpentity.getContentType());
    httpentity.setContentType((String)null);
    Assert.assertNull(httpentity.getContentType());
  }
  @Test public void testContentEncoding() throws Exception {
    final BasicHttpEntity httpentity=new BasicHttpEntity();
    httpentity.setContentEncoding(new BasicHeader(HTTP.CONTENT_ENCODING,"gzip"));
    Assert.assertEquals(HTTP.CONTENT_ENCODING,httpentity.getContentEncoding().getName());
    Assert.assertEquals("gzip",httpentity.getContentEncoding().getValue());
    httpentity.setContentEncoding("gzip");
    Assert.assertEquals(HTTP.CONTENT_ENCODING,httpentity.getContentEncoding().getName());
    Assert.assertEquals("gzip",httpentity.getContentEncoding().getValue());
    httpentity.setContentEncoding((Header)null);
    Assert.assertNull(httpentity.getContentEncoding());
    httpentity.setContentEncoding((String)null);
    Assert.assertNull(httpentity.getContentEncoding());
  }
  @Test public void testChunkingFlag() throws Exception {
    final BasicHttpEntity httpentity=new BasicHttpEntity();
    Assert.assertFalse(httpentity.isChunked());
    httpentity.setChunked(true);
    Assert.assertTrue(httpentity.isChunked());
  }
}
