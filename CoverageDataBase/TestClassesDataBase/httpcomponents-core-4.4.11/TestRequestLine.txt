/** 
 * Simple tests for  {@link RequestLine}.
 */
public class TestRequestLine {
  @Test public void testConstructor(){
    final RequestLine requestline=new BasicRequestLine("GET","/stuff",HttpVersion.HTTP_1_1);
    Assert.assertEquals("GET",requestline.getMethod());
    Assert.assertEquals("/stuff",requestline.getUri());
    Assert.assertEquals(HttpVersion.HTTP_1_1,requestline.getProtocolVersion());
  }
  @Test public void testConstructorInvalidInput(){
    try {
      new BasicRequestLine(null,"/stuff",HttpVersion.HTTP_1_1);
      Assert.fail("IllegalArgumentException should have been thrown");
    }
 catch (    final IllegalArgumentException e) {
    }
    try {
      new BasicRequestLine("GET",null,HttpVersion.HTTP_1_1);
      Assert.fail("IllegalArgumentException should have been thrown");
    }
 catch (    final IllegalArgumentException e) {
    }
    try {
      new BasicRequestLine("GET","/stuff",(HttpVersion)null);
      Assert.fail("IllegalArgumentException should have been thrown");
    }
 catch (    final IllegalArgumentException e) {
    }
  }
  @Test public void testCloning() throws Exception {
    final BasicRequestLine orig=new BasicRequestLine("GET","/stuff",HttpVersion.HTTP_1_1);
    final BasicRequestLine clone=(BasicRequestLine)orig.clone();
    Assert.assertEquals(orig.getMethod(),clone.getMethod());
    Assert.assertEquals(orig.getUri(),clone.getUri());
    Assert.assertEquals(orig.getProtocolVersion(),clone.getProtocolVersion());
  }
  @Test public void testSerialization() throws Exception {
    final BasicRequestLine orig=new BasicRequestLine("GET","/stuff",HttpVersion.HTTP_1_1);
    final ByteArrayOutputStream outbuffer=new ByteArrayOutputStream();
    final ObjectOutputStream outStream=new ObjectOutputStream(outbuffer);
    outStream.writeObject(orig);
    outStream.close();
    final byte[] raw=outbuffer.toByteArray();
    final ByteArrayInputStream inBuffer=new ByteArrayInputStream(raw);
    final ObjectInputStream inStream=new ObjectInputStream(inBuffer);
    final BasicRequestLine clone=(BasicRequestLine)inStream.readObject();
    Assert.assertEquals(orig.getMethod(),clone.getMethod());
    Assert.assertEquals(orig.getUri(),clone.getUri());
    Assert.assertEquals(orig.getProtocolVersion(),clone.getProtocolVersion());
  }
}
