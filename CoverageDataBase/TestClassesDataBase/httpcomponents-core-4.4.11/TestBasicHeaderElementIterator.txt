/** 
 * Tests for  {@link BasicHeaderElementIterator}.
 */
public class TestBasicHeaderElementIterator {
  @Test public void testMultiHeader(){
    final Header[] headers=new Header[]{new BasicHeader("Name","value0"),new BasicHeader("Name","value1")};
    final HeaderElementIterator hei=new BasicHeaderElementIterator(new BasicHeaderIterator(headers,"Name"));
    Assert.assertTrue(hei.hasNext());
    HeaderElement elem=hei.nextElement();
    Assert.assertEquals("The two header values must be equal","value0",elem.getName());
    Assert.assertTrue(hei.hasNext());
    elem=hei.nextElement();
    Assert.assertEquals("The two header values must be equal","value1",elem.getName());
    Assert.assertFalse(hei.hasNext());
    try {
      hei.next();
      Assert.fail("NoSuchElementException should have been thrown");
    }
 catch (    final NoSuchElementException ex) {
    }
    Assert.assertFalse(hei.hasNext());
    try {
      hei.next();
      Assert.fail("NoSuchElementException should have been thrown");
    }
 catch (    final NoSuchElementException ex) {
    }
  }
  @Test public void testMultiHeaderSameLine(){
    final Header[] headers=new Header[]{new BasicHeader("name","value0,value1"),new BasicHeader("nAme","cookie1=1,cookie2=2")};
    final HeaderElementIterator hei=new BasicHeaderElementIterator(new BasicHeaderIterator(headers,"Name"));
    HeaderElement elem=hei.nextElement();
    Assert.assertEquals("The two header values must be equal","value0",elem.getName());
    elem=hei.nextElement();
    Assert.assertEquals("The two header values must be equal","value1",elem.getName());
    elem=hei.nextElement();
    Assert.assertEquals("The two header values must be equal","cookie1",elem.getName());
    Assert.assertEquals("The two header values must be equal","1",elem.getValue());
    elem=hei.nextElement();
    Assert.assertEquals("The two header values must be equal","cookie2",elem.getName());
    Assert.assertEquals("The two header values must be equal","2",elem.getValue());
  }
  @Test public void testFringeCases(){
    final Header[] headers=new Header[]{new BasicHeader("Name",null),new BasicHeader("Name","    "),new BasicHeader("Name",",,,")};
    final HeaderElementIterator hei=new BasicHeaderElementIterator(new BasicHeaderIterator(headers,"Name"));
    Assert.assertFalse(hei.hasNext());
    try {
      hei.next();
      Assert.fail("NoSuchElementException should have been thrown");
    }
 catch (    final NoSuchElementException ex) {
    }
    Assert.assertFalse(hei.hasNext());
    try {
      hei.next();
      Assert.fail("NoSuchElementException should have been thrown");
    }
 catch (    final NoSuchElementException ex) {
    }
  }
}
