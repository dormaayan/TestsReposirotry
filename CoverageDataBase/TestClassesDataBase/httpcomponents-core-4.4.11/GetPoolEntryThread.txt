static class GetPoolEntryThread extends Thread {
  private final Future<LocalPoolEntry> future;
  private final long time;
  private final TimeUnit timeUnit;
  private volatile LocalPoolEntry entry;
  private volatile Exception ex;
  GetPoolEntryThread(  final Future<LocalPoolEntry> future,  final long time,  final TimeUnit timeUnit){
    super();
    this.future=future;
    this.time=time;
    this.timeUnit=timeUnit;
    setDaemon(true);
  }
  GetPoolEntryThread(  final Future<LocalPoolEntry> future){
    this(future,1000,TimeUnit.SECONDS);
  }
  @Override public void run(){
    try {
      this.entry=this.future.get(this.time,this.timeUnit);
    }
 catch (    final Exception ex) {
      this.ex=ex;
    }
  }
  public boolean isDone(){
    return this.future.isDone();
  }
  public LocalPoolEntry getEntry(){
    return this.entry;
  }
  public Exception getException(){
    return this.ex;
  }
}
