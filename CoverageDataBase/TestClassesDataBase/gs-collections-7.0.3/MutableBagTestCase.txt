public interface MutableBagTestCase extends UnsortedBagTestCase, MutableUnorderedIterableTestCase, MutableBagIterableTestCase {
  @Override <T>MutableBag<T> newWith(  T... elements);
  @Test default void MutableBag_addOccurrences(){
    MutableBag<Integer> mutableBag=this.newWith(1,2,2,3,3,3);
    mutableBag.addOccurrences(4,4);
    assertEquals(Bags.immutable.with(1,2,2,3,3,3,4,4,4,4),mutableBag);
    mutableBag.addOccurrences(1,2);
    assertEquals(Bags.immutable.with(1,1,1,2,2,3,3,3,4,4,4,4),mutableBag);
  }
  @Test default void MutableBag_removeOccurrences(){
    MutableBag<Integer> mutableBag=this.newWith(1,2,2,3,3,3);
    assertFalse(mutableBag.removeOccurrences(4,4));
    assertEquals(Bags.immutable.with(1,2,2,3,3,3),mutableBag);
    assertTrue(mutableBag.removeOccurrences(1,2));
    assertEquals(Bags.immutable.with(2,2,3,3,3),mutableBag);
    assertTrue(mutableBag.removeOccurrences(3,2));
    assertEquals(Bags.immutable.with(2,2,3),mutableBag);
    assertTrue(mutableBag.removeOccurrences(2,1));
    assertEquals(Bags.immutable.with(2,3),mutableBag);
  }
}
