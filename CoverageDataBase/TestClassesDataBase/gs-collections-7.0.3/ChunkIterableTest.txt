public class ChunkIterableTest {
  private final StringBuffer buffer=new StringBuffer();
  private ChunkIterable<Integer> undertest;
  @Before public void setUp(){
    this.undertest=new ChunkIterable<>(FastList.newListWith(1,2,3,4,5),2);
  }
  @Test public void forEach(){
    this.undertest.forEach(Procedures.cast(this.buffer::append));
    Assert.assertEquals("[1, 2][3, 4][5]",this.buffer.toString());
  }
  @Test public void forEachWithIndex(){
    this.undertest.forEachWithIndex((each,index) -> {
      this.buffer.append('|');
      this.buffer.append(each);
      this.buffer.append(index);
    }
);
    Assert.assertEquals("|[1, 2]0|[3, 4]1|[5]2",this.buffer.toString());
  }
  @Test public void forEachWith(){
    this.undertest.forEachWith((argument1,argument2) -> {
      this.buffer.append('|');
      this.buffer.append(argument1);
      this.buffer.append(argument2);
    }
,'A');
    Assert.assertEquals("|[1, 2]A|[3, 4]A|[5]A",this.buffer.toString());
  }
}
