public class NonInstantiableTest {
  private static final Class<?>[] GENERATED_NON_INSTANTIABLE_CLASSES={BooleanStacks.class,ByteBooleanMaps.class,CharBooleanMaps.class,DoubleBooleanMaps.class,FloatBooleanMaps.class,IntBooleanMaps.class,LongBooleanMaps.class,ShortBooleanMaps.class,ObjectBooleanMaps.class,BooleanIterableIterate.class,BooleanIteratorIterate.class,LazyBooleanIterate.class};
  private static final Class<?>[] HAND_CODED_NON_INSTANTIABLE_CLASSES={PrimitiveFunctions.class,CharToCharFunctions.class,IntToIntFunctions.class,MaxFunction.class,MaxSizeFunction.class,MinFunction.class,MinSizeFunction.class,SubtractFunction.class,BooleanSets.class,Combiners.class,PrimitiveTuples.class,InternalArrayIterate.class,IteratorIterate.class,MutableCollectionIterate.class,ReflectionHelper.class,SetIterables.class,SetIterate.class,SortedMaps.class,SortedSetIterables.class};
  @Test public void generatedNonInstantiableClassesThrow(){
    for (    Class<?> aClass : GENERATED_NON_INSTANTIABLE_CLASSES) {
      Verify.assertClassNonInstantiable(aClass);
    }
  }
  @Test public void handCodedNonInstantiableClassesThrow(){
    for (    Class<?> aClass : HAND_CODED_NON_INSTANTIABLE_CLASSES) {
      Verify.assertClassNonInstantiable(aClass);
    }
  }
}
