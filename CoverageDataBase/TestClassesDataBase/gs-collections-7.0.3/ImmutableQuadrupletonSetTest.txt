public class ImmutableQuadrupletonSetTest extends AbstractImmutableSetTestCase {
  @Override protected ImmutableSet<Integer> classUnderTest(){
    return new ImmutableQuadrupletonSet<>(1,2,3,4);
  }
  @Override @Test public void newWithout(){
    ImmutableSet<Integer> immutable=this.classUnderTest();
    Verify.assertSize(3,immutable.newWithout(4).castToSet());
    Verify.assertSize(3,immutable.newWithout(3).castToSet());
    Verify.assertSize(3,immutable.newWithout(2).castToSet());
    Verify.assertSize(3,immutable.newWithout(1).castToSet());
    Verify.assertSize(4,immutable.newWithout(0).castToSet());
  }
  @Test public void selectInstanceOf(){
    ImmutableSet<Number> numbers=new ImmutableQuadrupletonSet<>(1,2.0,3,4.0);
    Assert.assertEquals(iSet(1,3),numbers.selectInstancesOf(Integer.class));
  }
}
