/** 
 * JUnit test for  {@link SynchronizedStack}.
 */
public class SynchronizedStackTest extends MutableStackTestCase {
  @Override protected <T>MutableStack<T> newStackWith(  T... elements){
    return new SynchronizedStack<>(ArrayStack.newStackWith(elements));
  }
  @Override protected <T>MutableStack<T> newStackFromTopToBottom(  T... elements){
    return new SynchronizedStack<>(ArrayStack.newStackFromTopToBottom(elements));
  }
  @Override protected <T>MutableStack<T> newStackFromTopToBottom(  Iterable<T> elements){
    return new SynchronizedStack<>(ArrayStack.newStackFromTopToBottom(elements));
  }
  @Override protected <T>MutableStack<T> newStack(  Iterable<T> elements){
    return new SynchronizedStack<>(ArrayStack.newStack(elements));
  }
  @Test public void testNullStack(){
    Verify.assertThrows(IllegalArgumentException.class,() -> SynchronizedStack.of(null));
  }
}
