@RunWith(Java8Runner.class) public class TreeSortedMapNoIteratorTest implements MutableSortedMapIterableTestCase, OrderedIterableNoIteratorTest {
  @Override public <T>MutableSortedMap<Object,T> newWith(  T... elements){
    int i=elements.length;
    MutableSortedMap<Object,T> result=new TreeSortedMapNoIterator<>(Comparators.reverseNaturalOrder());
    for (    T each : elements) {
      assertNull(result.put(i,each));
      i--;
    }
    return result;
  }
  @Override public void Iterable_remove(){
    OrderedIterableNoIteratorTest.super.Iterable_remove();
  }
public static class TreeSortedMapNoIterator<K,V> extends TreeSortedMap<K,V> {
    public TreeSortedMapNoIterator(){
    }
    public TreeSortedMapNoIterator(    Comparator<? super K> comparator){
      super(comparator);
    }
    @Override public Iterator<V> iterator(){
      throw new AssertionError("No iteration patterns should delegate to iterator()");
    }
  }
}
