/** 
 * JUnit test for  {@link SynchronizedSortedSet}.
 */
public class SynchronizedSortedSet2Test extends AbstractSortedSetTestCase {
  @Override protected <T>MutableSortedSet<T> newWith(  T... elements){
    return new SynchronizedSortedSet<>(TreeSortedSet.newSetWith(elements));
  }
  @Override protected <T>MutableSortedSet<T> newWith(  Comparator<? super T> comparator,  T... elements){
    return new SynchronizedSortedSet<>(TreeSortedSet.newSetWith(comparator,elements));
  }
  @Override public void asSynchronized(){
    MutableSortedSet<Object> synchronizedSet=this.newWith();
    Assert.assertSame(synchronizedSet,synchronizedSet.asSynchronized());
  }
  @Override public void asUnmodifiable(){
    Verify.assertInstanceOf(UnmodifiableSortedSet.class,this.newWith().asUnmodifiable());
  }
  @Test(expected=NoSuchElementException.class) public void min_empty_throws_without_comparator(){
    this.newWith().min();
  }
  @Test(expected=NoSuchElementException.class) public void max_empty_throws_without_comparator(){
    this.newWith().max();
  }
}
