public class MemoryEfficientMutableSetParallelSetIterableTest extends ParallelUnsortedSetIterableTestCase {
  @Override protected ParallelUnsortedSetIterable<Integer> classUnderTest(){
    return this.newWith(1,2,3,4);
  }
  @Override protected ParallelUnsortedSetIterable<Integer> newWith(  Integer... littleElements){
    return Sets.fixedSize.withAll(ArrayAdapter.adapt(littleElements)).asParallel(this.executorService,this.batchSize);
  }
  @Override protected MutableSet<Integer> getExpectedWith(  Integer... littleElements){
    return Sets.fixedSize.withAll(ArrayAdapter.adapt(littleElements));
  }
  @Test(expected=IllegalArgumentException.class) public void asParallel_small_batch(){
    Sets.fixedSize.with(1,2,3,4).asParallel(this.executorService,0);
  }
  @Test(expected=NullPointerException.class) public void asParallel_null_executorService(){
    Sets.fixedSize.with(1,2,3,4).asParallel(null,2);
  }
}
