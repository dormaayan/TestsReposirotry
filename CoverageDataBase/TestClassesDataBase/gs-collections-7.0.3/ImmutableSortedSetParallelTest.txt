public class ImmutableSortedSetParallelTest extends ParallelSortedSetIterableTestCase {
  @Override protected ParallelSortedSetIterable<Integer> classUnderTest(){
    return this.newWith(4,3,2,1);
  }
  @Override protected ParallelSortedSetIterable<Integer> newWith(  Integer... littleElements){
    return SortedSets.immutable.with(Comparators.reverseNaturalOrder(),littleElements).asParallel(this.executorService,this.batchSize);
  }
  @Test(expected=IllegalArgumentException.class) public void asParallel_small_batch(){
    SortedSets.immutable.with(Comparators.reverseNaturalOrder(),4,3,2,1).asParallel(this.executorService,0);
  }
  @Test(expected=NullPointerException.class) public void asParallel_null_executorService(){
    SortedSets.immutable.with(Comparators.reverseNaturalOrder(),4,3,2,1).asParallel(null,2);
  }
}
