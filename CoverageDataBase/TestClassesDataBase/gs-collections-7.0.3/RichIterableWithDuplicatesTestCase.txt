public interface RichIterableWithDuplicatesTestCase extends RichIterableTestCase {
  @Override default boolean allowsDuplicates(){
    return true;
  }
  @Test default void Iterable_sanity_check(){
    String s="";
    Iterable<String> oneCopy=this.newWith(s);
    Iterable<String> twoCopies=this.newWith(s,s);
    IterableTestCase.assertEquals(!this.allowsDuplicates(),twoCopies.equals(oneCopy));
  }
  @Test default void RichIterable_size(){
    IterableTestCase.assertEquals(6,this.newWith(3,3,3,2,2,1).size());
  }
}
