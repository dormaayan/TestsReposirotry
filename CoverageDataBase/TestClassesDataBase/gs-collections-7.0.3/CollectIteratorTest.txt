public class CollectIteratorTest {
  @Test public void iterator(){
    Iterator<String> iterator=new CollectIterator<>(iList(Boolean.TRUE),String::valueOf);
    Assert.assertTrue(iterator.hasNext());
    Assert.assertEquals("true",iterator.next());
    Assert.assertFalse(iterator.hasNext());
  }
  @Test public void iteratorWithFunctionName(){
    Iterator<String> iterator=new CollectIterator<>(iList(Boolean.TRUE),String::valueOf);
    Assert.assertTrue(iterator.hasNext());
    Assert.assertEquals("true",iterator.next());
    Assert.assertFalse(iterator.hasNext());
  }
  @Test public void iteratorWithFunctionNameAndIterator(){
    Iterator<String> iterator=new CollectIterator<>(iList(Boolean.TRUE).iterator(),String::valueOf);
    Assert.assertTrue(iterator.hasNext());
    Assert.assertEquals("true",iterator.next());
    Assert.assertFalse(iterator.hasNext());
  }
  @Test(expected=NoSuchElementException.class) public void noSuchElementException(){
    new CollectIterator<>(Lists.mutable.<Boolean>of(),String::valueOf).next();
  }
  @Test(expected=UnsupportedOperationException.class) public void remove(){
    new CollectIterator<>(Lists.mutable.<Boolean>of(),String::valueOf).remove();
  }
}
