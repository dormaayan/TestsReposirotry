public class CounterTest {
  @Test public void basicLifecycle(){
    Counter counter=new Counter();
    Assert.assertEquals(0,counter.getCount());
    counter.increment();
    Assert.assertEquals(1,counter.getCount());
    counter.increment();
    Assert.assertEquals(2,counter.getCount());
    counter.add(16);
    Assert.assertEquals(18,counter.getCount());
    Interval.oneTo(1000).forEach(Procedures.cast(each -> counter.increment()));
    Assert.assertEquals(1018,counter.getCount());
    Assert.assertEquals("1018",counter.toString());
    counter.reset();
    Assert.assertEquals(0,counter.getCount());
    counter.add(4);
    Assert.assertEquals(4,counter.getCount());
    counter.increment();
    Assert.assertEquals(5,counter.getCount());
    Assert.assertEquals("5",counter.toString());
  }
  @Test public void equalsAndHashCode(){
    Verify.assertEqualsAndHashCode(new Counter(1),new Counter(1));
    Assert.assertNotEquals(new Counter(1),new Counter(2));
  }
  @Test public void serialization(){
    Verify.assertPostSerializedEqualsAndHashCode(new Counter());
  }
}
