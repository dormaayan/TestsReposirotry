/** 
 * JUnit test for  {@link MapAdapter}.
 */
public class MapAdapterTest extends MutableMapTestCase {
  @Override public <K,V>MutableMap<K,V> newMap(){
    return MapAdapter.adapt(new HashMap<>());
  }
  @Override public <K,V>MutableMap<K,V> newMapWithKeyValue(  K key,  V value){
    return MapAdapter.adapt(new HashMap<K,V>()).withKeyValue(key,value);
  }
  @Override public <K,V>MutableMap<K,V> newMapWithKeysValues(  K key1,  V value1,  K key2,  V value2){
    return MapAdapter.adapt(new HashMap<K,V>()).withKeyValue(key1,value1).withKeyValue(key2,value2);
  }
  @Override public <K,V>MutableMap<K,V> newMapWithKeysValues(  K key1,  V value1,  K key2,  V value2,  K key3,  V value3){
    return MapAdapter.adapt(new HashMap<K,V>()).withKeyValue(key1,value1).withKeyValue(key2,value2).withKeyValue(key3,value3);
  }
  @Override public <K,V>MutableMap<K,V> newMapWithKeysValues(  K key1,  V value1,  K key2,  V value2,  K key3,  V value3,  K key4,  V value4){
    return MapAdapter.adapt(new HashMap<K,V>()).withKeyValue(key1,value1).withKeyValue(key2,value2).withKeyValue(key3,value3).withKeyValue(key4,value4);
  }
  @Test public void adaptNull(){
    Verify.assertThrows(NullPointerException.class,() -> new MapAdapter<>(null));
    Verify.assertThrows(NullPointerException.class,() -> MapAdapter.adapt(null));
  }
}
