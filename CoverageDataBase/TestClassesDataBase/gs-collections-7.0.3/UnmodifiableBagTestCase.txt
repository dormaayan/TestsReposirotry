public interface UnmodifiableBagTestCase extends UnmodifiableMutableCollectionTestCase, MutableBagTestCase {
  @Override @Test default void Iterable_remove(){
    UnmodifiableMutableCollectionTestCase.super.Iterable_remove();
  }
  @Override @Test default void MutableBag_addOccurrences_throws(){
    Verify.assertThrows(UnsupportedOperationException.class,() -> this.newWith(1,2,2,3,3,3).addOccurrences(4,-1));
  }
  @Override @Test default void MutableBag_removeOccurrences_throws(){
    Verify.assertThrows(UnsupportedOperationException.class,() -> this.newWith(1,2,2,3,3,3).removeOccurrences(4,-1));
  }
  @Override @Test(expected=UnsupportedOperationException.class) default void MutableBag_addOccurrences(){
    MutableBag<Integer> mutableBag=this.newWith(1,2,2,3,3,3);
    mutableBag.addOccurrences(4,4);
  }
  @Override @Test(expected=UnsupportedOperationException.class) default void MutableBag_removeOccurrences(){
    MutableBag<Integer> mutableBag=this.newWith(1,2,2,3,3,3);
    mutableBag.removeOccurrences(4,4);
  }
}
