/** 
 * Junit test for  {@link PrimitiveFunctions}.
 */
public class PrimitiveFunctionsTest {
  @Test public void unboxNumberToInt(){
    Assert.assertEquals(IntHashSet.newSetWith(1,2,3),UnifiedSet.newSetWith(Integer.valueOf(1),Integer.valueOf(2),Integer.valueOf(3)).collectInt(PrimitiveFunctions.unboxNumberToInt()));
    Assert.assertEquals(IntHashSet.newSetWith(1,2,3),UnifiedSet.newSetWith(1.1,2.2,3.3).collectInt(PrimitiveFunctions.unboxNumberToInt()));
  }
  @Test public void unboxNumberToFloat(){
    Assert.assertEquals(FloatHashSet.newSetWith(1.0f,2.0f,3.0f),UnifiedSet.newSetWith(1,2,3).collectFloat(PrimitiveFunctions.unboxNumberToFloat()));
  }
  @Test public void unboxNumberToLong(){
    Assert.assertEquals(LongHashSet.newSetWith(1L,2L,3L),UnifiedSet.newSetWith(1,2,3).collectLong(PrimitiveFunctions.unboxNumberToLong()));
  }
  @Test public void unboxNumberToDouble(){
    Assert.assertEquals(DoubleHashSet.newSetWith(1.0,2.0,3.0),UnifiedSet.newSetWith(1,2,3).collectDouble(PrimitiveFunctions.unboxNumberToDouble()));
  }
  @Test public void unboxDoubleToDouble(){
    Assert.assertEquals(DoubleHashSet.newSetWith(1.0,2.0,3.0),UnifiedSet.newSetWith(Double.valueOf(1.0),Double.valueOf(2.0),Double.valueOf(3.0)).collectDouble(PrimitiveFunctions.unboxDoubleToDouble()));
  }
  @Test public void unboxFloatToFloat(){
    Assert.assertEquals(FloatHashSet.newSetWith(1.0f,2.0f,3.0f),UnifiedSet.newSetWith(Float.valueOf(1.0f),Float.valueOf(2.0f),Float.valueOf(3.0f)).collectFloat(PrimitiveFunctions.unboxFloatToFloat()));
  }
}
