public abstract class AbstractSynchronizedCollectionTestCase extends AbstractCollectionTestCase {
  @Override @Test public void testToString(){
    MutableCollection<Object> collection=this.newWith(1,2);
    String string=collection.toString();
    Assert.assertTrue("[1, 2]".equals(string) || "[2, 1]".equals(string));
  }
  @Override @Test public void makeString(){
    MutableCollection<Object> collection=this.newWith(1,2,3);
    Assert.assertEquals(collection.toString(),'[' + collection.makeString() + ']');
  }
  @Override @Test public void appendString(){
    MutableCollection<Object> collection=this.newWith(1,2,3);
    Appendable builder=new StringBuilder();
    collection.appendString(builder);
    Assert.assertEquals(collection.toString(),'[' + builder.toString() + ']');
  }
  @Override @Test public void asSynchronized(){
    MutableCollection<Object> collection=this.newWith();
    Assert.assertSame(collection,collection.asSynchronized());
  }
}
