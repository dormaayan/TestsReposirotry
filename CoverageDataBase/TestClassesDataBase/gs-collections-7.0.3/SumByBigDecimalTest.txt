@State(Scope.Thread) @BenchmarkMode(Mode.Throughput) @OutputTimeUnit(TimeUnit.SECONDS) public class SumByBigDecimalTest extends AbstractJMHTestRunner {
  private final Positions positions=new Positions().shuffle();
  @Benchmark public MutableMap<Product,BigDecimal> sumByBigDecimalProduct_serial_eager_gsc(){
    return Iterate.sumByBigDecimal(this.positions.getGscPositions(),Position::getProduct,Position::getPreciseMarketValue);
  }
  @Benchmark public MutableMap<Product,BigDecimal> sumByBigDecimalProduct_parallel_eager_gsc(){
    return ParallelIterate.sumByBigDecimal(this.positions.getGscPositions(),Position::getProduct,Position::getPreciseMarketValue);
  }
  @Test public void sumByProduct_gsc(){
    Assert.assertEquals(this.sumByBigDecimalProduct_parallel_eager_gsc(),this.sumByBigDecimalProduct_serial_eager_gsc());
  }
  @Benchmark public MutableMap<Account,BigDecimal> sumByBigDecimalAccount_serial_eager_gsc(){
    return Iterate.sumByBigDecimal(this.positions.getGscPositions(),Position::getAccount,Position::getPreciseMarketValue);
  }
  @Benchmark public MutableMap<Account,BigDecimal> sumByBigDecimalAccount_parallel_eager_gsc(){
    return ParallelIterate.sumByBigDecimal(this.positions.getGscPositions(),Position::getAccount,Position::getPreciseMarketValue);
  }
  @Test public void sumByAccount_gsc(){
    Assert.assertEquals(this.sumByBigDecimalAccount_parallel_eager_gsc(),this.sumByBigDecimalAccount_serial_eager_gsc());
  }
  @Benchmark public MutableMap<String,BigDecimal> sumByBigDecimalCategory_serial_eager_gsc(){
    return Iterate.sumByBigDecimal(this.positions.getGscPositions(),Position::getCategory,Position::getPreciseMarketValue);
  }
  @Benchmark public MutableMap<String,BigDecimal> sumByBigDecimalCategory_parallel_eager_gsc(){
    return ParallelIterate.sumByBigDecimal(this.positions.getGscPositions(),Position::getCategory,Position::getPreciseMarketValue);
  }
  @Test public void sumByCategory_gsc(){
    Assert.assertEquals(this.sumByBigDecimalCategory_parallel_eager_gsc(),this.sumByBigDecimalCategory_serial_eager_gsc());
  }
}
