/** 
 * JUnit test to make sure that methods like  {@link Verify#assertThrows(Class,Runnable)} really throw whenthey ought to.
 */
public class ExceptionThrownTest {
  @Test public void specificRuntimeException(){
    try {
      Verify.assertThrows(NullPointerException.class,new EmptyRunnable());
      Assert.fail("AssertionError expected");
    }
 catch (    AssertionError e) {
      Verify.assertContains(ExceptionThrownTest.class.getName(),e.getStackTrace()[0].toString());
    }
  }
  @Test public void callableException(){
    try {
      Verify.assertThrows(NullPointerException.class,new EmptyCallable());
      Assert.fail("AssertionError expected");
    }
 catch (    AssertionError e) {
      Verify.assertContains(ExceptionThrownTest.class.getName(),e.getStackTrace()[0].toString());
    }
  }
  @Test public void nullCause(){
    try {
      Verify.assertThrowsWithCause(IllegalStateException.class,IllegalArgumentException.class,new Runnable(){
        public void run(){
          throw new IllegalStateException();
        }
      }
);
      Assert.fail("AssertionError expected");
    }
 catch (    AssertionError e) {
      Verify.assertContains(ExceptionThrownTest.class.getName(),e.getStackTrace()[0].toString());
    }
  }
private static final class EmptyRunnable implements Runnable {
    public void run(){
    }
  }
private static final class EmptyCallable implements Callable<Void> {
    public Void call(){
      return null;
    }
  }
}
