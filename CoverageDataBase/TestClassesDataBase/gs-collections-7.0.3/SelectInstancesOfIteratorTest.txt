public class SelectInstancesOfIteratorTest {
  @Test public void iterator(){
    MutableList<Number> list=FastList.<Number>newListWith(null,1,2.0,null,3,4.0,5,null);
    this.assertElements(new SelectInstancesOfIterator<>(list.iterator(),Integer.class));
    this.assertElements(new SelectInstancesOfIterator<>(list,Integer.class));
  }
  private void assertElements(  Iterator<Integer> iterator){
    MutableList<Integer> result=FastList.newList();
    while (iterator.hasNext()) {
      result.add(iterator.next());
    }
    Assert.assertEquals(FastList.newListWith(1,3,5),result);
  }
  @Test public void noSuchElementException(){
    Verify.assertThrows(NoSuchElementException.class,() -> new SelectInstancesOfIterator<>(Lists.fixedSize.of(),Object.class).next());
  }
  @Test public void remove(){
    Verify.assertThrows(UnsupportedOperationException.class,() -> new SelectInstancesOfIterator<>(Lists.fixedSize.of(),Object.class).remove());
  }
}
