public interface SortedSetTestCase extends CollectionTestCase {
  @Override <T>SortedSet<T> newWith(  T... elements);
  @Override @Test default void Iterable_next(){
    Set<Integer> iterable=this.newWith(3,2,1);
    Iterator<Integer> iterator=iterable.iterator();
    assertTrue(iterator.hasNext());
    assertEquals(Integer.valueOf(3),iterator.next());
    assertTrue(iterator.hasNext());
    assertEquals(Integer.valueOf(2),iterator.next());
    assertTrue(iterator.hasNext());
    assertEquals(Integer.valueOf(1),iterator.next());
    assertFalse(iterator.hasNext());
  }
  @Override @Test default void Iterable_remove(){
    Iterable<Integer> iterable=this.newWith(3,2,1);
    Iterator<Integer> iterator=iterable.iterator();
    assertEquals(Integer.valueOf(3),iterator.next());
    iterator.remove();
    assertEquals(this.newWith(2,1),iterable);
  }
  @Override @Test default void Collection_add(){
    Collection<Integer> collection=this.newWith(1,2,3);
    assertFalse(collection.add(3));
  }
  @Override @Test default void Collection_size(){
    assertThat(this.newWith(3,2,1),hasSize(3));
    assertThat(this.newWith(),hasSize(0));
  }
}
