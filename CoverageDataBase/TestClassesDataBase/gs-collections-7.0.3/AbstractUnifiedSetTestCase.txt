public abstract class AbstractUnifiedSetTestCase extends AbstractMutableSetTestCase {
  @Test public void addOnObjectWithCastInEquals(){
    if (this.newWith() instanceof SortedSet) {
      return;
    }
    MutableSet<IntegerWithCast> mutableSet=this.newWith(new IntegerWithCast(0));
    Assert.assertFalse(mutableSet.add(new IntegerWithCast(0)));
    Assert.assertTrue(mutableSet.add(null));
    Assert.assertFalse(mutableSet.add(null));
  }
  @Test public void retainAllFromKeySet_null_collision(){
    IntegerWithCast key=new IntegerWithCast(0);
    MutableSet<IntegerWithCast> mutableSet=this.newWith(null,key);
    Assert.assertFalse(mutableSet.retainAll(FastList.newListWith(key,null)));
    Assert.assertEquals(this.newWith(null,key),mutableSet);
  }
  @Test public void rehash_null_collision(){
    MutableSet<IntegerWithCast> mutableMap=this.newWith((IntegerWithCast)null);
    for (int i=0; i < 1000; i++) {
      mutableMap.add(new IntegerWithCast(i));
    }
  }
}
