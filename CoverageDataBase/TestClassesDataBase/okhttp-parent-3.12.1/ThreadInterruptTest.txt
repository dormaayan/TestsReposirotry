public final class ThreadInterruptTest {
  private static final int SOCKET_BUFFER_SIZE=256 * 1024;
  private MockWebServer server;
  private OkHttpClient client;
  @Before public void setUp() throws Exception {
    server=new MockWebServer();
    server.setServerSocketFactory(new DelegatingServerSocketFactory(ServerSocketFactory.getDefault()){
      @Override protected ServerSocket configureServerSocket(      ServerSocket serverSocket) throws IOException {
        serverSocket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
        return serverSocket;
      }
    }
);
    client=defaultClient().newBuilder().socketFactory(new DelegatingSocketFactory(SocketFactory.getDefault()){
      @Override protected Socket configureSocket(      Socket socket) throws IOException {
        socket.setSendBufferSize(SOCKET_BUFFER_SIZE);
        socket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
        return socket;
      }
    }
).build();
  }
  @Test public void interruptWritingRequestBody() throws Exception {
    int requestBodySize=2 * 1024 * 1024;
    server.enqueue(new MockResponse().throttleBody(64 * 1024,125,TimeUnit.MILLISECONDS));
    server.start();
    interruptLater(500);
    HttpURLConnection connection=new OkUrlFactory(client).open(server.url("/").url());
    connection.setDoOutput(true);
    connection.setFixedLengthStreamingMode(requestBodySize);
    OutputStream requestBody=connection.getOutputStream();
    byte[] buffer=new byte[1024];
    try {
      for (int i=0; i < requestBodySize; i+=buffer.length) {
        requestBody.write(buffer);
        requestBody.flush();
      }
      fail("Expected thread to be interrupted");
    }
 catch (    InterruptedIOException expected) {
      assertTrue(Thread.interrupted());
    }
    connection.disconnect();
  }
  @Test public void interruptReadingResponseBody() throws Exception {
    int responseBodySize=2 * 1024 * 1024;
    server.enqueue(new MockResponse().setBody(new Buffer().write(new byte[responseBodySize])).throttleBody(64 * 1024,125,TimeUnit.MILLISECONDS));
    server.start();
    interruptLater(500);
    HttpURLConnection connection=new OkUrlFactory(client).open(server.url("/").url());
    InputStream responseBody=connection.getInputStream();
    byte[] buffer=new byte[1024];
    try {
      while (responseBody.read(buffer) != -1) {
      }
      fail("Expected thread to be interrupted");
    }
 catch (    InterruptedIOException expected) {
      assertTrue(Thread.interrupted());
    }
    responseBody.close();
  }
  private void interruptLater(  final int delayMillis){
    final Thread toInterrupt=Thread.currentThread();
    Thread interruptingCow=new Thread(){
      @Override public void run(){
        try {
          sleep(delayMillis);
          toInterrupt.interrupt();
        }
 catch (        InterruptedException e) {
          throw new AssertionError(e);
        }
      }
    }
;
    interruptingCow.start();
  }
}
