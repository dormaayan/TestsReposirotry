private static class RecordingPushObserver implements PushObserver {
  final List<Object> events=new ArrayList<>();
  public synchronized Object takeEvent() throws Exception {
    while (events.isEmpty()) {
      wait();
    }
    return events.remove(0);
  }
  @Override public synchronized boolean onRequest(  int streamId,  List<Header> requestHeaders){
    assertEquals(2,streamId);
    events.add(requestHeaders);
    notifyAll();
    return false;
  }
  @Override public synchronized boolean onHeaders(  int streamId,  List<Header> responseHeaders,  boolean last){
    assertEquals(2,streamId);
    assertTrue(last);
    events.add(responseHeaders);
    notifyAll();
    return false;
  }
  @Override public synchronized boolean onData(  int streamId,  BufferedSource source,  int byteCount,  boolean last){
    events.add(new AssertionError("onData"));
    notifyAll();
    return false;
  }
  @Override public synchronized void onReset(  int streamId,  ErrorCode errorCode){
    events.add(new AssertionError("onReset"));
    notifyAll();
  }
}
