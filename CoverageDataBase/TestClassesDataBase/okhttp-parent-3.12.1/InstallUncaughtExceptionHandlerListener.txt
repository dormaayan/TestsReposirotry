/** 
 * A  {@link org.junit.runner.notification.RunListener} used to install an aggressive default {@link java.lang.Thread.UncaughtExceptionHandler} similar to the one found on Android. No exceptionsshould escape from OkHttp that might cause apps to be killed or tests to fail on Android.
 */
public class InstallUncaughtExceptionHandlerListener extends RunListener {
  private Thread.UncaughtExceptionHandler oldDefaultUncaughtExceptionHandler;
  private Description lastTestStarted;
  private final Map<Throwable,String> exceptions=new LinkedHashMap<>();
  @Override public void testRunStarted(  Description description){
    System.err.println("Installing aggressive uncaught exception handler");
    oldDefaultUncaughtExceptionHandler=Thread.getDefaultUncaughtExceptionHandler();
    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
      @Override public void uncaughtException(      Thread thread,      Throwable throwable){
        StringWriter errorText=new StringWriter(256);
        errorText.append("Uncaught exception in OkHttp thread \"");
        errorText.append(thread.getName());
        errorText.append("\"\n");
        throwable.printStackTrace(new PrintWriter(errorText));
        errorText.append("\n");
        if (lastTestStarted != null) {
          errorText.append("Last test to start was: ");
          errorText.append(lastTestStarted.getDisplayName());
          errorText.append("\n");
        }
        System.err.print(errorText.toString());
synchronized (exceptions) {
          exceptions.put(throwable,lastTestStarted.getDisplayName());
        }
      }
    }
);
  }
  @Override public void testStarted(  Description description){
    lastTestStarted=description;
  }
  @Override public void testRunFinished(  Result result) throws Exception {
    Thread.setDefaultUncaughtExceptionHandler(oldDefaultUncaughtExceptionHandler);
    System.err.println("Uninstalled aggressive uncaught exception handler");
synchronized (exceptions) {
      if (!exceptions.isEmpty()) {
        throw Throwables.rethrowAsException(exceptions.keySet().iterator().next());
      }
    }
  }
}
