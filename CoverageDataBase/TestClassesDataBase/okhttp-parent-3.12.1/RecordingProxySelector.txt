public final class RecordingProxySelector extends ProxySelector {
  public final List<Proxy> proxies=new ArrayList<>();
  public final List<URI> requestedUris=new ArrayList<>();
  public final List<String> failures=new ArrayList<>();
  @Override public List<Proxy> select(  URI uri){
    requestedUris.add(uri);
    return proxies;
  }
  public void assertRequests(  URI... expectedUris){
    assertEquals(Arrays.asList(expectedUris),requestedUris);
    requestedUris.clear();
  }
  @Override public void connectFailed(  URI uri,  SocketAddress sa,  IOException ioe){
    InetSocketAddress socketAddress=(InetSocketAddress)sa;
    failures.add(Util.format("%s %s:%d %s",uri,socketAddress,socketAddress.getPort(),ioe.getMessage()));
  }
  @Override public String toString(){
    return "RecordingProxySelector";
  }
}
