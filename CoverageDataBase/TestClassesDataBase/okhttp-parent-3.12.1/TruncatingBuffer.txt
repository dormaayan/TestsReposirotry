/** 
 * A buffer wrapper that drops data after  {@code bodyLimit} bytes. 
 */
private static class TruncatingBuffer implements Sink {
  private final Buffer buffer=new Buffer();
  private long remainingByteCount;
  private long receivedByteCount;
  TruncatingBuffer(  long bodyLimit){
    remainingByteCount=bodyLimit;
  }
  @Override public void write(  Buffer source,  long byteCount) throws IOException {
    long toRead=Math.min(remainingByteCount,byteCount);
    if (toRead > 0) {
      source.read(buffer,toRead);
    }
    long toSkip=byteCount - toRead;
    if (toSkip > 0) {
      source.skip(toSkip);
    }
    remainingByteCount-=toRead;
    receivedByteCount+=byteCount;
  }
  @Override public void flush() throws IOException {
  }
  @Override public Timeout timeout(){
    return Timeout.NONE;
  }
  @Override public void close() throws IOException {
  }
}
