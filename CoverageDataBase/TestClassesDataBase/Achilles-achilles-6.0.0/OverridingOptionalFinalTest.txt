public class OverridingOptionalFinalTest {
  @Test public void should_get_first_present_value() throws Exception {
    final String actual=OverridingOptional.from(Optional.<String>empty()).andThen(Optional.<String>empty()).andThen(Optional.ofNullable("value")).defaultValue("default").get();
    assertThat(actual).isEqualTo("value");
  }
  @Test public void should_get_first_value() throws Exception {
    final String actual=OverridingOptional.from(Optional.ofNullable("first")).andThen(Optional.<String>empty()).andThen(Optional.ofNullable("value")).defaultValue("default").get();
    assertThat(actual).isEqualTo("first");
  }
  @Test public void should_get_default_value() throws Exception {
    final String actual=OverridingOptional.from(Optional.<String>empty()).andThen(Optional.<String>empty()).andThen(Optional.ofNullable(null)).defaultValue("default").get();
    assertThat(actual).isEqualTo("default");
  }
}
