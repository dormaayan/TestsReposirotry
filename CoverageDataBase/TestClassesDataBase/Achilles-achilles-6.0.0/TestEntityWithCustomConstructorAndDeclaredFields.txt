public class TestEntityWithCustomConstructorAndDeclaredFields {
  @Rule public AchillesTestResource<ManagerFactory> resource=AchillesTestResourceBuilder.forJunit().entityClassesToTruncate(EntityWithCustomConstructorAndDeclaredFields.class).truncateBeforeAndAfterTest().withScript("create_keyspace.cql").build((cluster,statementsCache) -> ManagerFactoryBuilder.builder(cluster).withManagedEntityClasses(EntityWithCustomConstructorAndDeclaredFields.class).doForceSchemaCreation(true).withStatementsCache(statementsCache).withDefaultKeyspaceName(DEFAULT_CASSANDRA_EMBEDDED_KEYSPACE_NAME).build());
  private Session session=resource.getNativeSession();
  private ScriptExecutor scriptExecutor=resource.getScriptExecutor();
  private EntityWithCustomConstructorAndDeclaredFields_Manager manager=resource.getManagerFactory().forEntityWithCustomConstructorAndDeclaredFields();
  @Test public void should_find_by_id() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithCustomConstructorAndDeclaredFields/should_insert_row.cql",ImmutableMap.of("id",id));
    final EntityWithCustomConstructorAndDeclaredFields actual=manager.crud().findById(id).get();
    assertThat(actual).isNotNull();
    assertThat(actual.getName()).isEqualTo("my_name");
    assertThat(actual.getValue()).isEqualTo(3.0);
    assertThat(actual.getUdt()).isNotNull();
    assertThat(actual.getUdt().getIdx()).isEqualTo(4L);
    assertThat(actual.getUdt().getValue()).isEqualTo("my_value_udt");
  }
  @Test public void should_dsl_select_one() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithCustomConstructorAndDeclaredFields/should_insert_row.cql",ImmutableMap.of("id",id));
    final EntityWithCustomConstructorAndDeclaredFields actual=manager.dsl().select().allColumns_FromBaseTable().where().id().Eq(id).getOne();
    assertThat(actual).isNotNull();
    assertThat(actual.getName()).isEqualTo("my_name");
    assertThat(actual.getValue()).isEqualTo(3.0);
    assertThat(actual.getUdt()).isNotNull();
    assertThat(actual.getUdt().getIdx()).isEqualTo(4L);
    assertThat(actual.getUdt().getValue()).isEqualTo("my_value_udt");
  }
  @Test public void should_typed_query() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithCustomConstructorAndDeclaredFields/should_insert_row.cql",ImmutableMap.of("id",id));
    final SimpleStatement statement=new SimpleStatement("SELECT id,value,udt FROM achilles_embedded.custom_constructor_declared_fields WHERE id=?");
    final PreparedStatement ps=session.prepare(statement);
    final EntityWithCustomConstructorAndDeclaredFields actual=manager.raw().typedQueryForSelect(ps.bind(id)).getOne();
    assertThat(actual).isNotNull();
    assertThat(actual.getName()).isNull();
    assertThat(actual.getValue()).isEqualTo(3.0);
    assertThat(actual.getUdt()).isNotNull();
    assertThat(actual.getUdt().getIdx()).isEqualTo(4L);
    assertThat(actual.getUdt().getValue()).isEqualTo("my_value_udt");
  }
}
