public class TestEntityWithComplexCounter {
  @Rule public AchillesTestResource<ManagerFactory> resource=AchillesTestResourceBuilder.forJunit().entityClassesToTruncate(EntityWithComplexCounters.class).truncateBeforeAndAfterTest().build((cluster,statementsCache) -> ManagerFactoryBuilder.builder(cluster).withManagedEntityClasses(EntityWithComplexCounters.class).doForceSchemaCreation(true).withStatementsCache(statementsCache).withDefaultKeyspaceName(DEFAULT_CASSANDRA_EMBEDDED_KEYSPACE_NAME).build());
  private Session session=resource.getNativeSession();
  private ScriptExecutor scriptExecutor=resource.getScriptExecutor();
  private EntityWithComplexCounters_Manager manager=resource.getManagerFactory().forEntityWithComplexCounters();
  @Test public void should_find() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final UUID uuid=UUIDs.timeBased();
    final long count=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long staticCount=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long codecCount=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithComplexCounters/insert_single_row.cql",ImmutableMap.of("id",id,"uuid",uuid,"count",count,"staticCount",staticCount,"codecCount",codecCount));
    final EntityWithComplexCounters actual=manager.crud().findById(id,uuid).get();
    assertThat(actual).isNotNull();
    assertThat(actual.getSimpleCounter()).isEqualTo(count);
    assertThat(actual.getStaticCounter()).isEqualTo(staticCount);
    assertThat(actual.getCounterWithCodec()).isEqualTo(codecCount + "");
  }
  @Test public void should_dsl_update_codec_counter() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final UUID uuid=UUIDs.timeBased();
    final long codecCount=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    manager.dsl().update().fromBaseTable().counterWithCodec().Incr(codecCount + "").where().id().Eq(id).uuid().Eq(uuid).execute();
    final Row actual=session.execute("SELECT codec_count FROM entity_complex_counters WHERE id = " + id + " AND uuid = "+ uuid).one();
    assertThat(actual).isNotNull();
    assertThat(actual.getLong("codec_count")).isEqualTo(codecCount);
  }
}
