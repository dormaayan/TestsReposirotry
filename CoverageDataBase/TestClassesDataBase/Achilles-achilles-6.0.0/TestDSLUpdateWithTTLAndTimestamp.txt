public class TestDSLUpdateWithTTLAndTimestamp {
  @Rule public AchillesTestResource<ManagerFactory> resource=AchillesTestResourceBuilder.forJunit().entityClassesToTruncate(SimpleEntity.class).truncateBeforeAndAfterTest().withScript("create_keyspace.cql").build((cluster,statementsCache) -> ManagerFactoryBuilder.builder(cluster).withManagedEntityClasses(SimpleEntity.class).doForceSchemaCreation(true).withStatementsCache(statementsCache).withDefaultKeyspaceName(DEFAULT_CASSANDRA_EMBEDDED_KEYSPACE_NAME).build());
  private Session session=resource.getNativeSession();
  private ScriptExecutor scriptExecutor=resource.getScriptExecutor();
  private SimpleEntity_Manager manager=resource.getManagerFactory().forSimpleEntity();
  @Test public void should_dsl_update_with_ttl() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final Date date=buildDateKey();
    scriptExecutor.executeScriptTemplate("SimpleEntity/insert_single_row.cql",ImmutableMap.of("id",id,"table","simple"));
    manager.dsl().update().fromBaseTable().value().Set("new value").consistencyList().Set(Arrays.asList(ConsistencyLevel.ALL)).where().id().Eq(id).date().Eq(date).usingTimeToLive(1).usingTimestamp(new Date().getTime()).execute();
    Thread.sleep(2000);
    Row row=session.execute("SELECT * FROM simple WHERE id = " + id + " AND date = '2015-10-01 00:00:00.000+0000'").one();
    assertThat(row).isNotNull();
    assertThat(row.getList("consistencylist",String.class)).hasSize(2).containsExactly("QUORUM","LOCAL_ONE");
    assertThat(row.getString("value")).isEqualTo("0 AM");
  }
  private Date buildDateKey() throws ParseException {
    SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss z");
    dateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
    return dateFormat.parse("2015-10-01 00:00:00 GMT");
  }
}
