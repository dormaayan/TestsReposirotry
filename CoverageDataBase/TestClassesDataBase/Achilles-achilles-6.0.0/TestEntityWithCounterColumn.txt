public class TestEntityWithCounterColumn {
  @Rule public AchillesTestResource<ManagerFactory> resource=AchillesTestResourceBuilder.forJunit().entityClassesToTruncate(EntityWithCounterColumn.class).truncateBeforeAndAfterTest().build((cluster,statementsCache) -> ManagerFactoryBuilder.builder(cluster).withManagedEntityClasses(EntityWithCounterColumn.class).doForceSchemaCreation(true).withStatementsCache(statementsCache).withDefaultKeyspaceName(DEFAULT_CASSANDRA_EMBEDDED_KEYSPACE_NAME).build());
  private Session session=resource.getNativeSession();
  private ScriptExecutor scriptExecutor=resource.getScriptExecutor();
  private EntityWithCounterColumn_Manager manager=resource.getManagerFactory().forEntityWithCounterColumn();
  @Test public void should_find() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long incr=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithCounterColumn/insert_single_row.cql",ImmutableMap.of("id",id,"incr",incr));
    final EntityWithCounterColumn actual=manager.crud().findById(id).get();
    assertThat(actual).isNotNull();
    assertThat(actual.getCount()).isEqualTo(incr);
  }
  @Test public void should_dsl_update() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long incr=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    manager.dsl().update().fromBaseTable().count().Incr(incr).where().id().Eq(id).execute();
    final Row actual=session.execute("SELECT count FROM entity_counter WHERE id = " + id).one();
    assertThat(actual).isNotNull();
    assertThat(actual.getLong("count")).isEqualTo(incr);
  }
  @Test public void should_delete_by_id() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long incr=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithCounterColumn/insert_single_row.cql",ImmutableMap.of("id",id,"incr",incr));
    manager.crud().deleteById(id).execute();
    final Row actual=session.execute("SELECT * FROM entity_counter WHERE id = " + id).one();
    assertThat(actual).isNull();
  }
  @Test public void should_delete_instance() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long incr=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final EntityWithCounterColumn entity=new EntityWithCounterColumn(id,incr);
    manager.crud().delete(entity).execute();
    final Row actual=session.execute("SELECT * FROM entity_counter WHERE id = " + id).one();
    assertThat(actual).isNull();
  }
  @Test public void should_dsl_delete() throws Exception {
    final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    final long incr=RandomUtils.nextLong(0L,Long.MAX_VALUE);
    scriptExecutor.executeScriptTemplate("EntityWithCounterColumn/insert_single_row.cql",ImmutableMap.of("id",id,"incr",incr));
    manager.dsl().delete().allColumns_FromBaseTable().where().id().Eq(id).execute();
    final Row actual=session.execute("SELECT * FROM entity_counter WHERE id = " + id).one();
    assertThat(actual).isNull();
  }
}
