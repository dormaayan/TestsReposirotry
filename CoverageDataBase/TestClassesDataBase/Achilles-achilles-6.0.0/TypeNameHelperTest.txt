public class TypeNameHelperTest {
  @Test public void should_convert_type_name_to_string() throws Exception {
    final TypeName nativeBool=TypeName.get(boolean.class);
    final TypeName objectLong=TypeName.get(Long.class);
    final TypeName localDate=TypeName.get(LocalDate.class);
    final TypeName bigDecimal=TypeName.get(BigDecimal.class);
    final TypeName listString=genericType(LIST,STRING);
    final TypeName mapStringTuple=genericType(MAP,STRING,JAVA_DRIVER_TUPLE_VALUE_TYPE);
    final TypeName mapStringListUDT=genericType(MAP,STRING,genericType(LIST,JAVA_DRIVER_UDT_VALUE_TYPE));
    assertThat(TypeNameHelper.asString(nativeBool)).isEqualTo("Boolean");
    assertThat(TypeNameHelper.asString(objectLong)).isEqualTo("Long");
    assertThat(TypeNameHelper.asString(localDate)).isEqualTo("DriverLocalDate");
    assertThat(TypeNameHelper.asString(bigDecimal)).isEqualTo("BigDecimal");
    assertThat(TypeNameHelper.asString(listString)).isEqualTo("List_String");
    assertThat(TypeNameHelper.asString(mapStringTuple)).isEqualTo("Map_String_TupleValue");
    assertThat(TypeNameHelper.asString(mapStringListUDT)).isEqualTo("Map_String_List_UDTValue");
  }
}
