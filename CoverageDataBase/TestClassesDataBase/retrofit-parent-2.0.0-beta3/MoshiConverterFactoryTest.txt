public final class MoshiConverterFactoryTest {
interface AnInterface {
    String getName();
  }
static class AnImplementation implements AnInterface {
    private final String theName;
    AnImplementation(    String name){
      theName=name;
    }
    @Override public String getName(){
      return theName;
    }
  }
static class AnInterfaceAdapter {
    @ToJson public void write(    JsonWriter jsonWriter,    AnInterface anInterface) throws IOException {
      jsonWriter.beginObject();
      jsonWriter.name("name").value(anInterface.getName());
      jsonWriter.endObject();
    }
    @FromJson public AnInterface read(    JsonReader jsonReader) throws IOException {
      jsonReader.beginObject();
      String name=null;
      while (jsonReader.hasNext()) {
switch (jsonReader.nextName()) {
case "name":
          name=jsonReader.nextString();
        break;
    }
  }
  jsonReader.endObject();
  return new AnImplementation(name);
}
}
interface Service {
@POST("/") Call<AnImplementation> anImplementation(@Body AnImplementation impl);
@POST("/") Call<AnInterface> anInterface(@Body AnInterface impl);
}
@Rule public final MockWebServer server=new MockWebServer();
private Service service;
@Before public void setUp(){
Moshi moshi=new Moshi.Builder().add(new AnInterfaceAdapter()).build();
Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url("/")).addConverterFactory(MoshiConverterFactory.create(moshi)).build();
service=retrofit.create(Service.class);
}
@Test public void anInterface() throws IOException, InterruptedException {
server.enqueue(new MockResponse().setBody("{\"name\":\"value\"}"));
Call<AnInterface> call=service.anInterface(new AnImplementation("value"));
Response<AnInterface> response=call.execute();
AnInterface body=response.body();
assertThat(body.getName()).isEqualTo("value");
RecordedRequest request=server.takeRequest();
assertThat(request.getBody().readUtf8()).isEqualTo("{\"name\":\"value\"}");
assertThat(request.getHeader("Content-Type")).isEqualTo("application/json; charset=UTF-8");
}
@Test public void anImplementation() throws IOException, InterruptedException {
server.enqueue(new MockResponse().setBody("{\"theName\":\"value\"}"));
Call<AnImplementation> call=service.anImplementation(new AnImplementation("value"));
Response<AnImplementation> response=call.execute();
AnImplementation body=response.body();
assertThat(body.theName).isEqualTo("value");
RecordedRequest request=server.takeRequest();
assertThat(request.getBody().readUtf8()).isEqualTo("{\"theName\":\"value\"}");
assertThat(request.getHeader("Content-Type")).isEqualTo("application/json; charset=UTF-8");
}
}
