public class MDCClearFilterTest {
  /** 
 * instance of test target.
 */
  private MDCClearFilter testTarget;
  /** 
 * mock instance of http servlet requset.
 */
  private MockHttpServletRequest mockRequest;
  /** 
 * mock instance of http servlet response.
 */
  private MockHttpServletResponse mockResponse;
  /** 
 * mock instance of filter chain.
 */
  private MockFilterChainForMDCClearFilterTest mockFilterChain;
  /** 
 * setup all test case.
 */
  @Before public void setup(){
    this.testTarget=new MDCClearFilter();
    this.mockRequest=new MockHttpServletRequest();
    this.mockResponse=new MockHttpServletResponse();
    this.mockFilterChain=spy(new MockFilterChainForMDCClearFilterTest());
    MDC.clear();
  }
  /** 
 * [doFilterInternal] Case of normal(not occur exception). <p> [Expected Result] <ol> <li>not remove existing values from MDC on before chain.</li> <li>remove all values from MDC on after chain.</li> </ol> </p>
 * @throws ServletException
 * @throws IOException
 */
  @Test public void testDoFilterInternal_normal() throws ServletException, IOException {
    MDC.put("key0","value0");
    testTarget.doFilterInternal(mockRequest,mockResponse,mockFilterChain);
    assertThat(mockFilterChain.actualMdcContextMap.size(),is(1));
    assertThat(mockFilterChain.actualMdcContextMap.containsKey("key0"),is(true));
    assertThat(MDC.getCopyOfContextMap(),is(nullValue()));
  }
  /** 
 * [doFilterInternal] Case of occur exception. <p> [Expected Result] <ol> <li>remove all values from MDC on after chain.</li> </ol> </p>
 * @throws ServletException
 * @throws IOException
 */
  @Test public void testDoFilterInternal_occur_exception() throws ServletException, IOException {
    ServletException occurException=new ServletException("test");
    doThrow(occurException).when(mockFilterChain).doFilter(mockRequest,mockResponse);
    MDC.put("key0","value0");
    try {
      testTarget.doFilterInternal(mockRequest,mockResponse,mockFilterChain);
      fail("don't occur ServletException.");
    }
 catch (    ServletException e) {
      assertThat(e,is(occurException));
    }
    assertThat(MDC.getCopyOfContextMap(),is(nullValue()));
  }
  /** 
 * Mock class of FilterChain.
 */
private class MockFilterChainForMDCClearFilterTest implements FilterChain {
    @SuppressWarnings("rawtypes") private Map actualMdcContextMap;
    @Override public void doFilter(    ServletRequest request,    ServletResponse response) throws ServletException, IOException {
      this.actualMdcContextMap=MDC.getCopyOfContextMap();
    }
  }
}
