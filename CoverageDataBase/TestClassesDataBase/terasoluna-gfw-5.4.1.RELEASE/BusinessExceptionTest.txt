public class BusinessExceptionTest {
  private BusinessException exception;
  @Rule public ExpectedException expectedException=ExpectedException.none();
  @Test public void testResultMessagesNullValue(){
    expectedException.expect(IllegalArgumentException.class);
    expectedException.expectMessage("messages must not be null");
    throw new BusinessException(null,null);
  }
  @Test public void testConstructor1() throws Exception {
    String message="resultMessages";
    expectedException.expect(BusinessException.class);
    expectedException.expectMessage(message);
    ResultMessages resultMessages=ResultMessages.error().add(ResultMessage.fromText(message));
    exception=new BusinessException(resultMessages);
    throw exception;
  }
  @Test public void testConstructor2() throws Exception {
    String message="resultMessages";
    Exception cause=new IllegalArgumentException("cause");
    expectedException.expect(BusinessException.class);
    expectedException.expectMessage(message);
    Matcher<? extends Throwable> matcher=CoreMatchers.instanceOf(IllegalArgumentException.class);
    expectedException.expectCause(matcher);
    ResultMessages resultMessages=ResultMessages.error().add(ResultMessage.fromText(message));
    exception=new BusinessException(resultMessages,cause);
    throw exception;
  }
}
