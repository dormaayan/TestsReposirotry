public class EnumCodeListTest {
  public static enum OrderStatus implements EnumCodeList.CodeListItem {  RECEIVED("1","Received"),   SENT("2","Sent"),   CANCELLED("3","Cancelled");   private final String value;
  private final String label;
  private OrderStatus(  String code,  String label){
    this.value=code;
    this.label=label;
  }
  @Override public String getCodeValue(){
    return value;
  }
  @Override public String getCodeLabel(){
    return label;
  }
}
  public static enum IllegalEnum {}
  @Test public void testAsMap(){
    EnumCodeList codeList=new EnumCodeList(OrderStatus.class);
    Map<String,String> expected=new LinkedHashMap<String,String>();
    expected.put("1","Received");
    expected.put("2","Sent");
    expected.put("3","Cancelled");
    assertThat(codeList.asMap(),is(expected));
  }
  @Test(expected=IllegalArgumentException.class) public void testSetInvalidEnum(){
    new EnumCodeList(IllegalEnum.class);
  }
}
