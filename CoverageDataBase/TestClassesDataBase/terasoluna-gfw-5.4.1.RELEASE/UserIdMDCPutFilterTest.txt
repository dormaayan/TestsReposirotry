public class UserIdMDCPutFilterTest {
  SecurityContext securityContext;
  Authentication authentication;
  User user;
  MockHttpServletRequest request;
  MockHttpServletResponse response;
  @Before public void setUp() throws Exception {
    request=new MockHttpServletRequest();
    response=new MockHttpServletResponse();
  }
  @After public void tearDown() throws Exception {
    SecurityContextHolder.clearContext();
  }
  @Test public void testGetMDCKey(){
    UserIdMDCPutFilter mdcPutFilter=new UserIdMDCPutFilter();
    String mdcKeyStr=mdcPutFilter.getMDCKey(request,response);
    assertThat(mdcKeyStr,is("USER"));
  }
  @Test public void testGetMDCKey_SpecifyCustomKey(){
    UserIdMDCPutFilter mdcPutFilter=new UserIdMDCPutFilter();
    mdcPutFilter.setAttributeName("LOGIN_USER_ID");
    String mdcKeyStr=mdcPutFilter.getMDCKey(request,response);
    assertThat(mdcKeyStr,is("LOGIN_USER_ID"));
  }
  @Test public void testGetMDCValue(){
    UserIdMDCPutFilter mdcPutFilter=new UserIdMDCPutFilter();
    String userName="terasoluna@nttd.co.jp";
    securityContext=mock(SecurityContext.class);
    authentication=mock(Authentication.class);
    user=new User(userName,"yyyy",Arrays.asList(new SimpleGrantedAuthority("user")));
    when(authentication.getPrincipal()).thenReturn(user);
    when(securityContext.getAuthentication()).thenReturn(authentication);
    SecurityContextHolder.setContext(securityContext);
    String mdcValueStr=mdcPutFilter.getMDCValue(request,response);
    assertThat(mdcValueStr,is(userName));
  }
  @Test public void testGetMDCValueNullAuthentication(){
    UserIdMDCPutFilter mdcPutFilter=new UserIdMDCPutFilter();
    String mdcValueStr=mdcPutFilter.getMDCValue(request,response);
    assertNull(mdcValueStr);
  }
  @Test public void testGetMDCValuePrincipalStringValue(){
    UserIdMDCPutFilter mdcPutFilter=new UserIdMDCPutFilter();
    String userName="terasoluna@nttd.co.jp";
    securityContext=mock(SecurityContext.class);
    authentication=mock(Authentication.class);
    when(authentication.getPrincipal()).thenReturn(userName);
    when(securityContext.getAuthentication()).thenReturn(authentication);
    SecurityContextHolder.setContext(securityContext);
    String mdcValueStr=mdcPutFilter.getMDCValue(request,response);
    assertThat(mdcValueStr,is(userName));
  }
}
