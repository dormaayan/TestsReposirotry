/** 
 * @author Ari Pollak
 */
public final class EAN13WriterTestCase extends Assert {
  @Test public void testEncode() throws WriterException {
    String testStr="00001010001011010011101100110010011011110100111010101011001101101100100001010111001001110100010010100000";
    BitMatrix result=new EAN13Writer().encode("5901234123457",BarcodeFormat.EAN_13,testStr.length(),0);
    assertEquals(testStr,BitMatrixTestCase.matrixToString(result));
  }
  @Test public void testAddChecksumAndEncode() throws WriterException {
    String testStr="00001010001011010011101100110010011011110100111010101011001101101100100001010111001001110100010010100000";
    BitMatrix result=new EAN13Writer().encode("590123412345",BarcodeFormat.EAN_13,testStr.length(),0);
    assertEquals(testStr,BitMatrixTestCase.matrixToString(result));
  }
  @Test(expected=IllegalArgumentException.class) public void testEncodeIllegalCharacters() throws WriterException {
    new EAN13Writer().encode("5901234123abc",BarcodeFormat.EAN_13,0,0);
  }
}
