/** 
 * @author Sean Owen
 */
public final class FormatInformationTestCase extends Assert {
  private static final int MASKED_TEST_FORMAT_INFO=0x2BED;
  private static final int UNMASKED_TEST_FORMAT_INFO=MASKED_TEST_FORMAT_INFO ^ 0x5412;
  @Test public void testBitsDiffering(){
    assertEquals(0,FormatInformation.numBitsDiffering(1,1));
    assertEquals(1,FormatInformation.numBitsDiffering(0,2));
    assertEquals(2,FormatInformation.numBitsDiffering(1,2));
    assertEquals(32,FormatInformation.numBitsDiffering(-1,0));
  }
  @Test public void testDecode(){
    FormatInformation expected=FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO,MASKED_TEST_FORMAT_INFO);
    assertNotNull(expected);
    assertEquals((byte)0x07,expected.getDataMask());
    assertSame(ErrorCorrectionLevel.Q,expected.getErrorCorrectionLevel());
    assertEquals(expected,FormatInformation.decodeFormatInformation(UNMASKED_TEST_FORMAT_INFO,MASKED_TEST_FORMAT_INFO));
  }
  @Test public void testDecodeWithBitDifference(){
    FormatInformation expected=FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO,MASKED_TEST_FORMAT_INFO);
    assertEquals(expected,FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO ^ 0x01,MASKED_TEST_FORMAT_INFO ^ 0x01));
    assertEquals(expected,FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO ^ 0x03,MASKED_TEST_FORMAT_INFO ^ 0x03));
    assertEquals(expected,FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO ^ 0x07,MASKED_TEST_FORMAT_INFO ^ 0x07));
    assertNull(FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO ^ 0x0F,MASKED_TEST_FORMAT_INFO ^ 0x0F));
  }
  @Test public void testDecodeWithMisread(){
    FormatInformation expected=FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO,MASKED_TEST_FORMAT_INFO);
    assertEquals(expected,FormatInformation.decodeFormatInformation(MASKED_TEST_FORMAT_INFO ^ 0x03,MASKED_TEST_FORMAT_INFO ^ 0x0F));
  }
}
