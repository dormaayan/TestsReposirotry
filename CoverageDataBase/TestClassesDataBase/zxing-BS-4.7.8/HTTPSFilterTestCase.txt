/** 
 * Tests  {@link HTTPSFilter}.
 */
public final class HTTPSFilterTestCase extends Assert {
  private MockHttpServletRequest request;
  private MockHttpServletResponse response;
  private MockFilterChain chain;
  @Before public void setUp(){
    request=new MockHttpServletRequest();
    request.setServerName("example.org");
    request.setRequestURI("/path");
    response=new MockHttpServletResponse();
    chain=new MockFilterChain();
  }
  @Test public void testNoRedirect() throws Exception {
    request.setSecure(true);
    request.setScheme("https");
    request.setServerPort(443);
    new HTTPSFilter().doFilter(request,response,chain);
    assertEquals(HttpServletResponse.SC_OK,response.getStatus());
  }
  @Test public void testRedirect() throws Exception {
    request.setScheme("http");
    request.setServerPort(80);
    new HTTPSFilter().doFilter(request,response,chain);
    assertEquals(HttpServletResponse.SC_MOVED_PERMANENTLY,response.getStatus());
    assertEquals("https://example.org/path",response.getHeader(HttpHeaders.LOCATION));
  }
}
