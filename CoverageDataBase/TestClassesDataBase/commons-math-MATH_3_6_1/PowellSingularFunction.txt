private static class PowellSingularFunction extends MinpackFunction {
  public PowellSingularFunction(  double[] startParams,  double theoreticalStartCost){
    super(4,startParams,0.0,buildArray(4,0.0));
  }
  @Override public double[][] computeJacobian(  double[] variables){
    double x1=variables[0];
    double x2=variables[1];
    double x3=variables[2];
    double x4=variables[3];
    return new double[][]{{1,10,0,0},{0,0,sqrt5,-sqrt5},{0,2 * (x2 - 2 * x3),-4 * (x2 - 2 * x3),0},{2 * sqrt10 * (x1 - x4),0,0,-2 * sqrt10 * (x1 - x4)}};
  }
  @Override public double[] computeValue(  double[] variables){
    double x1=variables[0];
    double x2=variables[1];
    double x3=variables[2];
    double x4=variables[3];
    return new double[]{x1 + 10 * x2,sqrt5 * (x3 - x4),(x2 - 2 * x3) * (x2 - 2 * x3),sqrt10 * (x1 - x4) * (x1 - x4)};
  }
  private static final double sqrt5=FastMath.sqrt(5.0);
  private static final double sqrt10=FastMath.sqrt(10.0);
}
