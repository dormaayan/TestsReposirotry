/** 
 * Test cases for the  {@link Sum} class.
 */
public class SumTest extends StorelessUnivariateStatisticAbstractTest {
  protected Sum stat;
  /** 
 * {@inheritDoc}
 */
  @Override public UnivariateStatistic getUnivariateStatistic(){
    return new Sum();
  }
  /** 
 * {@inheritDoc}
 */
  @Override public double expectedValue(){
    return this.sum;
  }
  /** 
 * Expected value for  the testArray defined in UnivariateStatisticAbstractTest 
 */
  public double expectedWeightedValue(){
    return this.weightedSum;
  }
  @Test public void testSpecialValues(){
    Sum sum=new Sum();
    Assert.assertEquals(0,sum.getResult(),0);
    sum.increment(1);
    Assert.assertEquals(1,sum.getResult(),0);
    sum.increment(Double.POSITIVE_INFINITY);
    Assert.assertEquals(Double.POSITIVE_INFINITY,sum.getResult(),0);
    sum.increment(Double.NEGATIVE_INFINITY);
    Assert.assertTrue(Double.isNaN(sum.getResult()));
    sum.increment(1);
    Assert.assertTrue(Double.isNaN(sum.getResult()));
  }
  @Test public void testWeightedSum(){
    Sum sum=new Sum();
    Assert.assertEquals(expectedWeightedValue(),sum.evaluate(testArray,testWeightsArray,0,testArray.length),getTolerance());
    Assert.assertEquals(expectedValue(),sum.evaluate(testArray,unitWeightsArray,0,testArray.length),getTolerance());
  }
  @Override protected void checkClearValue(  StorelessUnivariateStatistic statistic){
    Assert.assertEquals(0,statistic.getResult(),0);
  }
}
