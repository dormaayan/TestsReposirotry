private static class LinearRank1Function extends MinpackFunction {
  public LinearRank1Function(  int m,  int n,  double x0,  double theoreticalStartCost,  double theoreticalMinCost){
    super(m,buildArray(n,x0),theoreticalMinCost,null);
  }
  @Override public double[][] computeJacobian(  double[] variables){
    double[][] jacobian=new double[m][];
    for (int i=0; i < m; ++i) {
      jacobian[i]=new double[n];
      for (int j=0; j < n; ++j) {
        jacobian[i][j]=(i + 1) * (j + 1);
      }
    }
    return jacobian;
  }
  @Override public double[] computeValue(  double[] variables){
    double[] f=new double[m];
    double sum=0;
    for (int i=0; i < n; ++i) {
      sum+=(i + 1) * variables[i];
    }
    for (int i=0; i < m; ++i) {
      f[i]=(i + 1) * sum - 1;
    }
    return f;
  }
}
