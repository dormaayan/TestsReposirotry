/** 
 * A helper class for testSmallDistances(). This class is similar to EuclideanIntegerPoint, but it defines a different distanceFrom() method that tends to return distances less than 1.
 */
private class CloseIntegerPoint implements Clusterable<CloseIntegerPoint> {
  public CloseIntegerPoint(  EuclideanIntegerPoint point){
    euclideanPoint=point;
  }
  public double distanceFrom(  CloseIntegerPoint p){
    return euclideanPoint.distanceFrom(p.euclideanPoint) * 0.001;
  }
  public CloseIntegerPoint centroidOf(  Collection<CloseIntegerPoint> p){
    Collection<EuclideanIntegerPoint> euclideanPoints=new ArrayList<EuclideanIntegerPoint>();
    for (    CloseIntegerPoint point : p) {
      euclideanPoints.add(point.euclideanPoint);
    }
    return new CloseIntegerPoint(euclideanPoint.centroidOf(euclideanPoints));
  }
  @Override public boolean equals(  Object o){
    if (!(o instanceof CloseIntegerPoint)) {
      return false;
    }
    CloseIntegerPoint p=(CloseIntegerPoint)o;
    return euclideanPoint.equals(p.euclideanPoint);
  }
  @Override public int hashCode(){
    return euclideanPoint.hashCode();
  }
  private EuclideanIntegerPoint euclideanPoint;
}
