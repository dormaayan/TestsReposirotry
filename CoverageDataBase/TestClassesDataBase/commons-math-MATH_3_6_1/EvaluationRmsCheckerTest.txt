/** 
 * Unit tests for  {@link EvaluationRmsChecker}. 
 */
public class EvaluationRmsCheckerTest {
  /** 
 * check  {@link ConvergenceChecker#converged(int,Object,Object)}. 
 */
  @Test public void testConverged(){
    ConvergenceChecker<Evaluation> checker=new EvaluationRmsChecker(0.1,1);
    Evaluation e200=mockEvaluation(200);
    Evaluation e1=mockEvaluation(1);
    Assert.assertEquals(true,checker.converged(0,e200,mockEvaluation(210)));
    Assert.assertEquals(true,checker.converged(0,e1,mockEvaluation(1.9)));
    Assert.assertEquals(true,checker.converged(0,e1,mockEvaluation(1.01)));
    Assert.assertEquals(false,checker.converged(0,e200,mockEvaluation(300)));
  }
  /** 
 * Create a mock  {@link Evaluation}.
 * @param rms the evaluation's rms.
 * @return a new mock evaluation.
 */
  private static Evaluation mockEvaluation(  final double rms){
    return new Evaluation(){
      public RealMatrix getCovariances(      double threshold){
        return null;
      }
      public RealVector getSigma(      double covarianceSingularityThreshold){
        return null;
      }
      public double getRMS(){
        return rms;
      }
      public RealMatrix getJacobian(){
        return null;
      }
      public double getCost(){
        return 0;
      }
      public RealVector getResiduals(){
        return null;
      }
      public RealVector getPoint(){
        return null;
      }
    }
;
  }
}
