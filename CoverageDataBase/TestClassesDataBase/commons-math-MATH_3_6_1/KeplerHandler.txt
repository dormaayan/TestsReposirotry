private static class KeplerHandler implements StepHandler {
  public KeplerHandler(  TestProblem3 pb){
    this.pb=pb;
    maxError=0;
  }
  public void init(  double t0,  double[] y0,  double t){
    maxError=0;
  }
  public void handleStep(  StepInterpolator interpolator,  boolean isLast){
    double[] interpolatedY=interpolator.getInterpolatedState();
    double[] theoreticalY=pb.computeTheoreticalState(interpolator.getCurrentTime());
    double dx=interpolatedY[0] - theoreticalY[0];
    double dy=interpolatedY[1] - theoreticalY[1];
    double error=dx * dx + dy * dy;
    if (error > maxError) {
      maxError=error;
    }
    if (isLast) {
      Assert.assertTrue(maxError < 2.2e-7);
    }
  }
  private double maxError=0;
  private TestProblem3 pb;
}
