/** 
 * Test for  {@link BaseRuleFactory}.
 */
public class BaseRuleFactoryTest {
  /** 
 * Tests that a given rule rule will be computed and added once to the cache whatever the number of times this rule is called concurrently.
 */
  @Test public void testConcurrentCreation() throws InterruptedException, ExecutionException {
    final int numTasks=20;
    final ThreadPoolExecutor exec=new ThreadPoolExecutor(3,numTasks,1,TimeUnit.SECONDS,new ArrayBlockingQueue<Runnable>(2));
    final List<Future<Pair<double[],double[]>>> results=new ArrayList<Future<Pair<double[],double[]>>>();
    for (int i=0; i < numTasks; i++) {
      results.add(exec.submit(new RuleBuilder()));
    }
    for (    Future<Pair<double[],double[]>> f : results) {
      f.get();
    }
    final int n=RuleBuilder.getNumberOfCalls();
    Assert.assertEquals("Rule computation was called " + n + " times",1,n);
  }
}
