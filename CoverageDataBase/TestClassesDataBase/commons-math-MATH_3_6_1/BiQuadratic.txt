private static class BiQuadratic implements MultivariateFunction {
  private final double xOptimum;
  private final double yOptimum;
  private final double xMin;
  private final double xMax;
  private final double yMin;
  private final double yMax;
  public BiQuadratic(  final double xOptimum,  final double yOptimum,  final double xMin,  final double xMax,  final double yMin,  final double yMax){
    this.xOptimum=xOptimum;
    this.yOptimum=yOptimum;
    this.xMin=xMin;
    this.xMax=xMax;
    this.yMin=yMin;
    this.yMax=yMax;
  }
  public double value(  double[] point){
    Assert.assertTrue(point[0] >= xMin);
    Assert.assertTrue(point[0] <= xMax);
    Assert.assertTrue(point[1] >= yMin);
    Assert.assertTrue(point[1] <= yMax);
    final double dx=point[0] - xOptimum;
    final double dy=point[1] - yOptimum;
    return dx * dx + dy * dy;
  }
  public double[] getLower(){
    return new double[]{xMin,yMin};
  }
  public double[] getUpper(){
    return new double[]{xMax,yMax};
  }
  public double getBoundedXOptimum(){
    return (xOptimum < xMin) ? xMin : ((xOptimum > xMax) ? xMax : xOptimum);
  }
  public double getBoundedYOptimum(){
    return (yOptimum < yMin) ? yMin : ((yOptimum > yMax) ? yMax : yOptimum);
  }
}
