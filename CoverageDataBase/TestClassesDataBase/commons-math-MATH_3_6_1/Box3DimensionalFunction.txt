private static class Box3DimensionalFunction extends MinpackFunction {
  public Box3DimensionalFunction(  int m,  double[] startParams,  double theoreticalStartCost){
    super(m,startParams,0.0,new double[]{1.0,10.0,1.0});
  }
  @Override public double[][] computeJacobian(  double[] variables){
    double x1=variables[0];
    double x2=variables[1];
    double[][] jacobian=new double[m][];
    for (int i=0; i < m; ++i) {
      double tmp=(i + 1) / 10.0;
      jacobian[i]=new double[]{-tmp * FastMath.exp(-tmp * x1),tmp * FastMath.exp(-tmp * x2),FastMath.exp(-i - 1) - FastMath.exp(-tmp)};
    }
    return jacobian;
  }
  @Override public double[] computeValue(  double[] variables){
    double x1=variables[0];
    double x2=variables[1];
    double x3=variables[2];
    double[] f=new double[m];
    for (int i=0; i < m; ++i) {
      double tmp=(i + 1) / 10.0;
      f[i]=FastMath.exp(-tmp * x1) - FastMath.exp(-tmp * x2) + (FastMath.exp(-i - 1) - FastMath.exp(-tmp)) * x3;
    }
    return f;
  }
}
