private static class LinearRank1ZeroColsAndRowsFunction extends MinpackFunction {
  public LinearRank1ZeroColsAndRowsFunction(  int m,  int n,  double x0){
    super(m,buildArray(n,x0),FastMath.sqrt((m * (m + 3) - 6) / (2.0 * (2 * m - 3))),null);
  }
  @Override public double[][] computeJacobian(  double[] variables){
    double[][] jacobian=new double[m][];
    for (int i=0; i < m; ++i) {
      jacobian[i]=new double[n];
      jacobian[i][0]=0;
      for (int j=1; j < (n - 1); ++j) {
        if (i == 0) {
          jacobian[i][j]=0;
        }
 else         if (i != (m - 1)) {
          jacobian[i][j]=i * (j + 1);
        }
 else {
          jacobian[i][j]=0;
        }
      }
      jacobian[i][n - 1]=0;
    }
    return jacobian;
  }
  @Override public double[] computeValue(  double[] variables){
    double[] f=new double[m];
    double sum=0;
    for (int i=1; i < (n - 1); ++i) {
      sum+=(i + 1) * variables[i];
    }
    for (int i=0; i < (m - 1); ++i) {
      f[i]=i * sum - 1;
    }
    f[m - 1]=-1;
    return f;
  }
}
