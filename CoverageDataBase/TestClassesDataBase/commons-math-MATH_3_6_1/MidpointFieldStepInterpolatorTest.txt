public class MidpointFieldStepInterpolatorTest extends RungeKuttaFieldStepInterpolatorAbstractTest {
  protected <T extends RealFieldElement<T>>RungeKuttaFieldStepInterpolator<T> createInterpolator(  Field<T> field,  boolean forward,  T[][] yDotK,  FieldODEStateAndDerivative<T> globalPreviousState,  FieldODEStateAndDerivative<T> globalCurrentState,  FieldODEStateAndDerivative<T> softPreviousState,  FieldODEStateAndDerivative<T> softCurrentState,  FieldEquationsMapper<T> mapper){
    return new MidpointFieldStepInterpolator<T>(field,forward,yDotK,globalPreviousState,globalCurrentState,softPreviousState,softCurrentState,mapper);
  }
  protected <T extends RealFieldElement<T>>FieldButcherArrayProvider<T> createButcherArrayProvider(  final Field<T> field){
    return new MidpointFieldIntegrator<T>(field,field.getOne());
  }
  @Test public void interpolationAtBounds(){
    doInterpolationAtBounds(Decimal64Field.getInstance(),1.0e-15);
  }
  @Test public void interpolationInside(){
    doInterpolationInside(Decimal64Field.getInstance(),3.3e-4,1.1e-5);
  }
  @Test public void nonFieldInterpolatorConsistency(){
    doNonFieldInterpolatorConsistency(Decimal64Field.getInstance(),1.4e-17,1.0e-50,1.0e-50,7.0e-18);
  }
}
