/** 
 * Represents an idealized Cannonball only taking into account gravity.
 */
public static class Cannonball {
  private final double[] gravity={0,-9.81};
  private final double[] velocity;
  private final double[] location;
  private double timeslice;
  public Cannonball(  double timeslice,  double angle,  double initialVelocity){
    this.timeslice=timeslice;
    final double angleInRadians=FastMath.toRadians(angle);
    this.velocity=new double[]{initialVelocity * FastMath.cos(angleInRadians),initialVelocity * FastMath.sin(angleInRadians)};
    this.location=new double[]{0,0};
  }
  public double getX(){
    return location[0];
  }
  public double getY(){
    return location[1];
  }
  public double getXVelocity(){
    return velocity[0];
  }
  public double getYVelocity(){
    return velocity[1];
  }
  public void step(){
    double[] slicedGravity=gravity.clone();
    for (int i=0; i < slicedGravity.length; i++) {
      slicedGravity[i]*=timeslice;
    }
    double[] slicedVelocity=velocity.clone();
    for (int i=0; i < velocity.length; i++) {
      velocity[i]+=slicedGravity[i];
      slicedVelocity[i]=velocity[i] * timeslice;
      location[i]+=slicedVelocity[i];
    }
    if (location[1] < 0) {
      location[1]=0;
    }
  }
}
