private static class QuadraticProblem implements MultivariateDifferentiableVectorFunction, Serializable {
  private static final long serialVersionUID=7072187082052755854L;
  private List<Double> x;
  private List<Double> y;
  public QuadraticProblem(){
    x=new ArrayList<Double>();
    y=new ArrayList<Double>();
  }
  public void addPoint(  double x,  double y){
    this.x.add(x);
    this.y.add(y);
  }
  public double[] value(  double[] variables){
    double[] values=new double[x.size()];
    for (int i=0; i < values.length; ++i) {
      values[i]=(variables[0] * x.get(i) + variables[1]) * x.get(i) + variables[2];
    }
    return values;
  }
  public DerivativeStructure[] value(  DerivativeStructure[] variables){
    DerivativeStructure[] values=new DerivativeStructure[x.size()];
    for (int i=0; i < values.length; ++i) {
      values[i]=(variables[0].multiply(x.get(i)).add(variables[1])).multiply(x.get(i)).add(variables[2]);
    }
    return values;
  }
}
