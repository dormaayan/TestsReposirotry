/** 
 * Chromosomes representing a permutation of (0,1,2,...,DIMENSION-1). The goal is to sort the sequence.
 */
private static class MinPermutations extends RandomKey<Integer> {
  public MinPermutations(  List<Double> representation){
    super(representation);
  }
  public double fitness(){
    int res=0;
    List<Integer> decoded=decode(sequence);
    for (int i=0; i < decoded.size(); i++) {
      int value=decoded.get(i);
      if (value != i) {
        res+=FastMath.abs(value - i);
      }
    }
    return -res;
  }
  @Override public AbstractListChromosome<Double> newFixedLengthChromosome(  List<Double> chromosomeRepresentation){
    return new MinPermutations(chromosomeRepresentation);
  }
}
