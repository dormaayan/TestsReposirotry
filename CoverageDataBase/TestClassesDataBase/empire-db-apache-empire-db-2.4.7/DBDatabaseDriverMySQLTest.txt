public class DBDatabaseDriverMySQLTest {
  @Test public void appendSQLTextValue(){
    CompanyDB db=new CompanyDB();
    DBDatabaseDriver driver=new DBDatabaseDriverMySQL();
    db.open(driver,null);
    Departments TD=db.DEPARTMENT;
    DBCommand cmd=db.createCommand();
    cmd.select(TD.count());
    cmd.where(TD.NAME.is("\\LCI\\"));
    assertTrue(cmd.getSelect().endsWith(("`NAME`='\\\\LCI\\\\'")));
    cmd=db.createCommand();
    cmd.select(TD.count());
    cmd.where(TD.NAME.is("'"));
    assertTrue(cmd.getSelect().contains("`NAME`=''''"));
    cmd=db.createCommand();
    cmd.select(TD.count());
    cmd.where(TD.NAME.is("Tarkk\\'ampujankatu"));
    assertTrue(cmd.getSelect().contains("`NAME`='Tarkk\\\\''ampujankatu'"));
  }
  @Test public void testGetConvertPhrase(){
    DBDatabaseDriver driver=new DBDatabaseDriverMySQL();
    assertEquals("CAST(? AS UNSIGNED)",driver.getConvertPhrase(DataType.BOOL,null,null));
    assertEquals("CAST(? AS UNSIGNED)",driver.getConvertPhrase(DataType.BOOL,null,"test"));
    assertEquals("CAST(? AS SIGNED)",driver.getConvertPhrase(DataType.INTEGER,null,null));
    assertEquals("CAST(? AS SIGNED)",driver.getConvertPhrase(DataType.INTEGER,null,"test"));
    assertEquals("CAST(? AS DECIMAL)",driver.getConvertPhrase(DataType.DECIMAL,null,null));
    assertEquals("CAST(? AS DECIMAL)",driver.getConvertPhrase(DataType.DECIMAL,null,"test"));
    assertEquals("CAST(? AS DECIMAL)",driver.getConvertPhrase(DataType.FLOAT,null,null));
    assertEquals("CAST(? AS DECIMAL)",driver.getConvertPhrase(DataType.FLOAT,null,"test"));
    assertEquals("CAST(? AS DATE)",driver.getConvertPhrase(DataType.DATE,null,null));
    assertEquals("CAST(? AS DATE)",driver.getConvertPhrase(DataType.DATE,null,"test"));
    assertEquals("CAST(? AS DATETIME)",driver.getConvertPhrase(DataType.DATETIME,null,null));
    assertEquals("CAST(? AS DATETIME)",driver.getConvertPhrase(DataType.DATETIME,null,"test"));
    assertEquals("CAST(? AS CHAR CHARACTER SET cp1250)",driver.getConvertPhrase(DataType.TEXT,null,"CHARACTER SET cp1250"));
    assertEquals("CAST(? AS CHAR)",driver.getConvertPhrase(DataType.TEXT,null,null));
    assertEquals("CAST(? AS BLOB)",driver.getConvertPhrase(DataType.BLOB,null,null));
    assertEquals("CAST(? AS BLOB)",driver.getConvertPhrase(DataType.BLOB,null,"test"));
    assertEquals("?",driver.getConvertPhrase(DataType.AUTOINC,null,null));
    assertEquals("?",driver.getConvertPhrase(DataType.AUTOINC,null,"test"));
  }
}
