/** 
 * @author francisdb
 */
public class DBCommandTest {
  @Test public void testDBCommand(){
    MockDB mock=new MockDB();
    mock.open(new MockDriver(),null);
    List<DBColumn> list=new ArrayList<DBColumn>();
    DBCommand command=mock.createCommand();
    command.select(list);
    assertNull(command.getSelectExprList());
    List<DBColumnExpr> list2=new ArrayList<DBColumnExpr>();
    list2.add(mock.TABLE.COL1);
    list2.add(mock.TABLE.COL3);
    DBCommand command2=mock.createCommand();
    command2.select(list2);
    assertEquals(2,command2.getSelectExprList().length);
    DBCommand command3=mock.createCommand();
    command3.select(mock.TABLE.getColumns());
    command3.groupBy(mock.TABLE.COL1,mock.TABLE.COL2,mock.TABLE.COL2);
    assertEquals(3,command3.getSelectExprList().length);
    assertEquals(2,command3.groupBy.size());
  }
private static class MockDB extends DBDatabase {
    private static final long serialVersionUID=1L;
    private final MockDBTable TABLE=new MockDBTable(this);
  }
private static class MockDBTable extends DBTable {
    private static final long serialVersionUID=1L;
    private final DBColumn COL1;
    private final DBColumn COL2;
    private final DBColumn COL3;
    public MockDBTable(    MockDB db){
      super("MOCK_TABLE",db);
      COL1=addColumn("COL1",DataType.INTEGER,0,true);
      COL2=addColumn("COL2",DataType.TEXT,20,true);
      COL3=addColumn("COL3",DataType.DATETIME,0,false);
    }
  }
}
