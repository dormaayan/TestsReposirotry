public class ValidatePluginRunTest {
  private static Connection conn=null;
  @BeforeClass public static void openConnection() throws Exception {
    Class.forName("org.hsqldb.jdbcDriver").newInstance();
    conn=DriverManager.getConnection("jdbc:hsqldb:file:src/test/resources/hsqldb/sample;shutdown=true","sa","");
  }
  @AfterClass public static void closeConnection() throws Exception {
    if (conn != null) {
      try {
        Statement st=conn.createStatement();
        st.execute("SHUTDOWN");
      }
 catch (      SQLException ex) {
        ex.printStackTrace();
      }
      conn.close();
    }
  }
  @Test public void testTargetFolder(){
    File file=new File("target/generated-sources/empiredb");
    assertTrue("No sources generated",file.exists());
  }
  @Test public void testGeneratedClass() throws ClassNotFoundException {
    Class<?> cls=Class.forName("org.apache.empire.db.example.MyDB");
    assertNotNull("Could not load generated class.",cls);
  }
  @Test public void useGeneratedCode() throws Exception {
    System.out.println("Opening database...");
    DBDatabaseDriver driver=new DBDatabaseDriverHSql();
    MyDatabase db=MyDatabase.get();
    db.open(driver,conn);
    System.out.println("Createing query command...");
    Employees EMP=db.EMPLOYEES;
    DBCommand cmd=db.createCommand();
    cmd.select(EMP.EMPLOYEE_ID,EMP.FIRSTNAME);
    int rowCount=0;
    DBReader reader=new DBReader();
    try {
      System.out.println("Executing query:");
      System.err.println(cmd.getSelect());
      reader.open(cmd,conn);
      System.out.println("Reading results:");
      while (reader.moveNext()) {
        rowCount++;
        System.out.println(reader.getString(EMP.EMPLOYEE_ID) + "\t" + reader.getString(EMP.FIRSTNAME));
      }
      System.out.println("Result contained " + String.valueOf(rowCount) + " records");
    }
  finally {
      reader.close();
    }
    assertEquals("We expect 3 rows",3,rowCount);
  }
}
