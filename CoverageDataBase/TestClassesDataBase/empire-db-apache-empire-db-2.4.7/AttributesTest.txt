/** 
 * @author francisdb
 */
public class AttributesTest {
  /** 
 * Test method for  {@link org.apache.empire.commons.Attributes#get(java.lang.String)}.
 */
  @Test public void testGetString(){
    Attributes attributes=new Attributes();
    Object val=attributes.get("unexisting");
    assertEquals(null,val);
    attributes.set("test",Integer.valueOf(123));
    val=attributes.get("test");
    assertEquals(Integer.valueOf(123),val);
  }
  /** 
 * Test method for  {@link org.apache.empire.commons.Attributes#set(java.lang.String,java.lang.Object)}.
 */
  @Test public void testSet(){
    Attributes attributes=new Attributes();
    attributes.set(null,null);
    assertEquals(null,attributes.get(null));
    attributes.set("",null);
    assertEquals(null,attributes.get(""));
    attributes.set("test",null);
    assertEquals(null,attributes.get("test"));
    attributes.set("test",Integer.valueOf(456));
    assertEquals(Integer.valueOf(456),attributes.get("test"));
  }
  /** 
 * Test method for  {@link org.apache.empire.commons.Attributes#addXml(org.w3c.dom.Element,long)}.
 * @throws ParserConfigurationException 
 */
  @Test public void testAddXml() throws ParserConfigurationException {
    Attributes attributes=new Attributes();
    attributes.set("test","testvalue");
    attributes.set("test2","testvalue2");
    DocumentBuilder builder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
    Document doc=builder.newDocument();
    Element root=doc.createElement("root");
    doc.appendChild(root);
    Random random=new Random();
    attributes.addXml(root,random.nextInt());
    root.getAttribute("test").equals("testvalue");
    root.getAttribute("test2").equals("testvalue2");
  }
}
