/** 
 * Tests  {@link io.dropwizard.testing.junit.ResourceTestRule} with a differenttest container factory.
 */
public class ResourceTestRuleWithGrizzlyTest {
  @Rule public final ResourceTestRule resourceTestRule=ResourceTestRule.builder().addResource(ContextInjectionResource::new).setTestContainerFactory(new GrizzlyWebTestContainerFactory()).addProvider(RuntimeExceptionMapper::new).build();
  @Test public void testResource(){
    assertThat(resourceTestRule.target("test").request().get(String.class)).isEqualTo("test");
  }
  @Test public void testExceptionMapper(){
    final Response resp=resourceTestRule.target("test").request().post(Entity.json(""));
    assertThat(resp.getStatus()).isEqualTo(500);
    assertThat(resp.readEntity(String.class)).isEqualTo("Can't touch this");
  }
private static class RuntimeExceptionMapper implements ExceptionMapper<RuntimeException> {
    @Override public Response toResponse(    RuntimeException exception){
      return Response.serverError().type(MediaType.TEXT_PLAIN_TYPE).entity(exception.getMessage()).build();
    }
  }
}
