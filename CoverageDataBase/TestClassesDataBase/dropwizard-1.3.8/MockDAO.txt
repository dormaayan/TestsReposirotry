private static class MockDAO extends AbstractDAO<String> {
  MockDAO(  SessionFactory factory){
    super(factory);
  }
  @Override public Session currentSession(){
    return super.currentSession();
  }
  @Override public Criteria criteria(){
    return super.criteria();
  }
  @Override public Query namedQuery(  String queryName) throws HibernateException {
    return super.namedQuery(queryName);
  }
  @Override public Class<String> getEntityClass(){
    return super.getEntityClass();
  }
  @Override public String uniqueResult(  Criteria criteria) throws HibernateException {
    return super.uniqueResult(criteria);
  }
  @Override public String uniqueResult(  Query<String> query) throws HibernateException {
    return super.uniqueResult(query);
  }
  @Override public List<String> list(  Criteria criteria) throws HibernateException {
    return super.list(criteria);
  }
  @Override public List<String> list(  Query<String> query) throws HibernateException {
    return super.list(query);
  }
  @Override public String get(  Serializable id){
    return super.get(id);
  }
  @Override public String persist(  String entity) throws HibernateException {
    return super.persist(entity);
  }
  @Override public <T>T initialize(  T proxy){
    return super.initialize(proxy);
  }
}
