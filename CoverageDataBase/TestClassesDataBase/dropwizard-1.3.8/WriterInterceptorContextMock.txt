private static class WriterInterceptorContextMock implements WriterInterceptorContext {
  private final MultivaluedMap<String,Object> headers;
  private OutputStream os=new OutputStream(){
    @Override public void write(    int i) throws IOException {
    }
  }
;
  private boolean proceedCalled=false;
  public WriterInterceptorContextMock(  MultivaluedMap<String,Object> headers){
    this.headers=headers;
  }
  @Override public void proceed() throws IOException, WebApplicationException {
    proceedCalled=true;
  }
  @Override @Nullable public Object getEntity(){
    return null;
  }
  @Override public void setEntity(  Object entity){
  }
  @Override public OutputStream getOutputStream(){
    return os;
  }
  @Override public void setOutputStream(  OutputStream os){
    this.os=os;
  }
  @Override public MultivaluedMap<String,Object> getHeaders(){
    return headers;
  }
  @Override @Nullable public Object getProperty(  String name){
    return null;
  }
  @Override @Nullable public Collection<String> getPropertyNames(){
    return null;
  }
  @Override public void setProperty(  String name,  Object object){
  }
  @Override public void removeProperty(  String name){
  }
  @Override public Annotation[] getAnnotations(){
    return new Annotation[0];
  }
  @Override public void setAnnotations(  Annotation[] annotations){
  }
  @Override @Nullable public Class<?> getType(){
    return null;
  }
  @Override public void setType(  Class<?> type){
  }
  @Override @Nullable public Type getGenericType(){
    return null;
  }
  @Override public void setGenericType(  Type genericType){
  }
  @Override @Nullable public MediaType getMediaType(){
    return null;
  }
  @Override public void setMediaType(  MediaType mediaType){
  }
  public boolean isProceedCalled(){
    return proceedCalled;
  }
}
