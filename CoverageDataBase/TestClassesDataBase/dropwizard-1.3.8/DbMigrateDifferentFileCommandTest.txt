@NotThreadSafe public class DbMigrateDifferentFileCommandTest extends AbstractMigrationTest {
  private DbMigrateCommand<TestMigrationConfiguration> migrateCommand=new DbMigrateCommand<>(TestMigrationConfiguration::getDataSource,TestMigrationConfiguration.class,"migrations-ddl.xml");
  private TestMigrationConfiguration conf;
  private String databaseUrl;
  @Before public void setUp() throws Exception {
    databaseUrl=getDatabaseUrl();
    conf=createConfiguration(databaseUrl);
  }
  @Test public void testRun() throws Exception {
    migrateCommand.run(null,new Namespace(ImmutableMap.of()),conf);
    try (Handle handle=new DBI(databaseUrl,"sa","").open()){
      final List<Map<String,Object>> rows=handle.select("select * from persons");
      assertThat(rows).hasSize(0);
    }
   }
  @Test public void testRunForFileFromFilesystem() throws Exception {
    final String migrationsPath=new File(Resources.getResource("migrations.xml").toURI()).getAbsolutePath();
    migrateCommand.run(null,new Namespace(ImmutableMap.of("migrations-file",migrationsPath)),conf);
    try (Handle handle=new DBI(databaseUrl,"sa","").open()){
      assertThat(handle.select("select * from persons")).hasSize(1);
    }
   }
}
