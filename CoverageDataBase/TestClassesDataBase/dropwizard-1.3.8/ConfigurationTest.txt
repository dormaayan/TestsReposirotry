public class ConfigurationTest {
  private final Configuration configuration=new Configuration();
  @Test public void hasAnHttpConfiguration() throws Exception {
    assertThat(configuration.getServerFactory()).isNotNull();
  }
  @Test public void hasALoggingConfiguration() throws Exception {
    assertThat(configuration.getLoggingFactory()).isNotNull();
  }
  @Test public void ensureConfigSerializable() throws Exception {
    final ObjectMapper mapper=Jackson.newObjectMapper();
    Class<?>[] dummyArray={};
    mapper.getSubtypeResolver().registerSubtypes(StreamSupport.stream(ServiceLoader.load(AppenderFactory.class).spliterator(),false).map(Object::getClass).collect(Collectors.toList()).toArray(dummyArray));
    mapper.getSubtypeResolver().registerSubtypes(StreamSupport.stream(ServiceLoader.load(ConnectorFactory.class).spliterator(),false).map(Object::getClass).collect(Collectors.toList()).toArray(dummyArray));
    final String json=mapper.writeValueAsString(configuration);
    assertThat(json).isNotNull();
    final Configuration cfg=mapper.readValue(json,Configuration.class);
    assertThat(cfg).isNotNull();
  }
}
