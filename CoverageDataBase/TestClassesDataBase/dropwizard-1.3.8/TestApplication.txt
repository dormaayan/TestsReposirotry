public static class TestApplication extends Application<TestConfiguration> {
  final HibernateBundle<TestConfiguration> hibernate=new HibernateBundle<TestConfiguration>(Person.class,Dog.class){
    @Override public PooledDataSourceFactory getDataSourceFactory(    TestConfiguration configuration){
      return configuration.dataSource;
    }
  }
;
  @Override public void initialize(  Bootstrap<TestConfiguration> bootstrap){
    bootstrap.addBundle(hibernate);
  }
  @Override public void run(  TestConfiguration configuration,  Environment environment) throws Exception {
    final SessionFactory sessionFactory=hibernate.getSessionFactory();
    initDatabase(sessionFactory);
    environment.jersey().register(new UnitOfWorkApplicationListener("hr-db",sessionFactory));
    environment.jersey().register(new PersonResource(new PersonDAO(sessionFactory),new DogDAO(sessionFactory)));
  }
  private void initDatabase(  SessionFactory sessionFactory){
    try (Session session=sessionFactory.openSession()){
      Transaction transaction=session.beginTransaction();
      session.createNativeQuery("CREATE TABLE people (name varchar(100) primary key, email varchar(16), birthday timestamp)").executeUpdate();
      session.createNativeQuery("INSERT INTO people VALUES ('Greg', 'greg@yahooo.com', '1989-02-13')").executeUpdate();
      session.createNativeQuery("CREATE TABLE dogs (name varchar(100) primary key, owner varchar(100) REFERENCES people(name))").executeUpdate();
      session.createNativeQuery("INSERT INTO dogs VALUES ('Bello', 'Greg')").executeUpdate();
      transaction.commit();
    }
   }
}
