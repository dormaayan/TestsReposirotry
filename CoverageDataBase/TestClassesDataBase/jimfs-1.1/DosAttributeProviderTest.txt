/** 
 * Tests for  {@link DosAttributeProvider}.
 * @author Colin Decker
 */
@RunWith(JUnit4.class) public class DosAttributeProviderTest extends AbstractAttributeProviderTest<DosAttributeProvider> {
  private static final ImmutableList<String> DOS_ATTRIBUTES=ImmutableList.of("hidden","archive","readonly","system");
  @Override protected DosAttributeProvider createProvider(){
    return new DosAttributeProvider();
  }
  @Override protected Set<? extends AttributeProvider> createInheritedProviders(){
    return ImmutableSet.of(new BasicAttributeProvider(),new OwnerAttributeProvider());
  }
  @Test public void testInitialAttributes(){
    for (    String attribute : DOS_ATTRIBUTES) {
      assertThat(provider.get(file,attribute)).isEqualTo(false);
    }
  }
  @Test public void testSet(){
    for (    String attribute : DOS_ATTRIBUTES) {
      assertSetAndGetSucceeds(attribute,true);
      assertSetFailsOnCreate(attribute,true);
    }
  }
  @Test public void testView() throws IOException {
    DosFileAttributeView view=provider.view(fileLookup(),ImmutableMap.<String,FileAttributeView>of("basic",new BasicAttributeProvider().view(fileLookup(),NO_INHERITED_VIEWS)));
    assertNotNull(view);
    assertThat(view.name()).isEqualTo("dos");
    DosFileAttributes attrs=view.readAttributes();
    assertThat(attrs.isHidden()).isFalse();
    assertThat(attrs.isArchive()).isFalse();
    assertThat(attrs.isReadOnly()).isFalse();
    assertThat(attrs.isSystem()).isFalse();
    view.setArchive(true);
    view.setReadOnly(true);
    view.setHidden(true);
    view.setSystem(false);
    assertThat(attrs.isHidden()).isFalse();
    assertThat(attrs.isArchive()).isFalse();
    assertThat(attrs.isReadOnly()).isFalse();
    attrs=view.readAttributes();
    assertThat(attrs.isHidden()).isTrue();
    assertThat(attrs.isArchive()).isTrue();
    assertThat(attrs.isReadOnly()).isTrue();
    assertThat(attrs.isSystem()).isFalse();
    view.setTimes(FileTime.fromMillis(0L),null,null);
    assertThat(view.readAttributes().lastModifiedTime()).isEqualTo(FileTime.fromMillis(0L));
  }
  @Test public void testAttributes(){
    DosFileAttributes attrs=provider.readAttributes(file);
    assertThat(attrs.isHidden()).isFalse();
    assertThat(attrs.isArchive()).isFalse();
    assertThat(attrs.isReadOnly()).isFalse();
    assertThat(attrs.isSystem()).isFalse();
    file.setAttribute("dos","hidden",true);
    attrs=provider.readAttributes(file);
    assertThat(attrs.isHidden()).isTrue();
    assertThat(attrs.isArchive()).isFalse();
    assertThat(attrs.isReadOnly()).isFalse();
    assertThat(attrs.isSystem()).isFalse();
  }
}
