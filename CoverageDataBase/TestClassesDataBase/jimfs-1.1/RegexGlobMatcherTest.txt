/** 
 * Tests for  {@link PathMatcher} instances created by {@link GlobToRegex}.
 * @author Colin Decker
 */
@RunWith(JUnit4.class) public class RegexGlobMatcherTest extends AbstractGlobMatcherTest {
  @Override protected PathMatcher matcher(  String pattern){
    return PathMatchers.getPathMatcher("glob:" + pattern,"/",ImmutableSet.<PathNormalization>of());
  }
  @Override protected PathMatcher realMatcher(  String pattern){
    FileSystem defaultFileSystem=FileSystems.getDefault();
    if ("/".equals(defaultFileSystem.getSeparator())) {
      return defaultFileSystem.getPathMatcher("glob:" + pattern);
    }
    return null;
  }
  @Test public void testRegexTranslation(){
    assertGlobRegexIs("foo","foo");
    assertGlobRegexIs("/","/");
    assertGlobRegexIs("?","[^/]");
    assertGlobRegexIs("*","[^/]*");
    assertGlobRegexIs("**",".*");
    assertGlobRegexIs("/foo","/foo");
    assertGlobRegexIs("?oo","[^/]oo");
    assertGlobRegexIs("*oo","[^/]*oo");
    assertGlobRegexIs("**/*.java",".*/[^/]*\\.java");
    assertGlobRegexIs("[a-z]","[[^/]&&[a-z]]");
    assertGlobRegexIs("[!a-z]","[[^/]&&[^a-z]]");
    assertGlobRegexIs("[-a-z]","[[^/]&&[-a-z]]");
    assertGlobRegexIs("[!-a-z]","[[^/]&&[^-a-z]]");
    assertGlobRegexIs("{a,b,c}","(a|b|c)");
    assertGlobRegexIs("{?oo,[A-Z]*,foo/**}","([^/]oo|[[^/]&&[A-Z]][^/]*|foo/.*)");
  }
  @Test public void testRegexEscaping(){
    assertGlobRegexIs("(","\\(");
    assertGlobRegexIs(".","\\.");
    assertGlobRegexIs("^","\\^");
    assertGlobRegexIs("$","\\$");
    assertGlobRegexIs("+","\\+");
    assertGlobRegexIs("\\\\","\\\\");
    assertGlobRegexIs("]","\\]");
    assertGlobRegexIs(")","\\)");
    assertGlobRegexIs("}","\\}");
  }
  @Test public void testRegexTranslationWithMultipleSeparators(){
    assertGlobRegexIs("?","[^\\\\/]","\\/");
    assertGlobRegexIs("*","[^\\\\/]*","\\/");
    assertGlobRegexIs("/","[\\\\/]","\\/");
    assertGlobRegexIs("\\\\","[\\\\/]","\\/");
  }
  private static void assertGlobRegexIs(  String glob,  String regex){
    assertGlobRegexIs(glob,regex,"/");
  }
  private static void assertGlobRegexIs(  String glob,  String regex,  String separators){
    assertEquals(regex,GlobToRegex.toRegex(glob,separators));
    Pattern.compile(regex);
  }
}
