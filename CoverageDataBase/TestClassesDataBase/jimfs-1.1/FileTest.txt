/** 
 * Tests for  {@link File}.
 * @author Colin Decker
 */
@RunWith(JUnit4.class) public class FileTest {
  @Test public void testAttributes(){
    File file=RegularFile.create(0,new HeapDisk(10,10,10));
    assertThat(file.getAttributeKeys()).isEmpty();
    assertThat(file.getAttribute("foo","foo")).isNull();
    file.deleteAttribute("foo","foo");
    file.setAttribute("foo","foo","foo");
    assertThat(file.getAttributeKeys()).containsExactly("foo:foo");
    assertThat(file.getAttribute("foo","foo")).isEqualTo("foo");
    file.deleteAttribute("foo","foo");
    assertThat(file.getAttributeKeys()).isEmpty();
    assertThat(file.getAttribute("foo","foo")).isNull();
  }
  @Test public void testFileBasics(){
    File file=regularFile(0);
    assertThat(file.id()).isEqualTo(0);
    assertThat(file.links()).isEqualTo(0);
  }
  @Test public void testDirectory(){
    File file=Directory.create(0);
    assertThat(file.isDirectory()).isTrue();
    assertThat(file.isRegularFile()).isFalse();
    assertThat(file.isSymbolicLink()).isFalse();
  }
  @Test public void testRegularFile(){
    File file=regularFile(10);
    assertThat(file.isDirectory()).isFalse();
    assertThat(file.isRegularFile()).isTrue();
    assertThat(file.isSymbolicLink()).isFalse();
  }
  @Test public void testSymbolicLink(){
    File file=SymbolicLink.create(0,fakePath());
    assertThat(file.isDirectory()).isFalse();
    assertThat(file.isRegularFile()).isFalse();
    assertThat(file.isSymbolicLink()).isTrue();
  }
  @Test public void testRootDirectory(){
    Directory file=Directory.createRoot(0,Name.simple("/"));
    assertThat(file.isRootDirectory()).isTrue();
    Directory otherFile=Directory.createRoot(1,Name.simple("$"));
    assertThat(otherFile.isRootDirectory()).isTrue();
  }
  @Test public void testLinkAndUnlink(){
    File file=regularFile(0);
    assertThat(file.links()).isEqualTo(0);
    file.incrementLinkCount();
    assertThat(file.links()).isEqualTo(1);
    file.incrementLinkCount();
    assertThat(file.links()).isEqualTo(2);
    file.decrementLinkCount();
    assertThat(file.links()).isEqualTo(1);
    file.decrementLinkCount();
    assertThat(file.links()).isEqualTo(0);
  }
}
