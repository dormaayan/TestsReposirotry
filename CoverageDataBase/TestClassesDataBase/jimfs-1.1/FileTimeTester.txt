/** 
 * Tester for testing changes in file times.
 */
protected static final class FileTimeTester {
  private final Path path;
  private FileTime accessTime;
  private FileTime modifiedTime;
  FileTimeTester(  Path path) throws IOException {
    this.path=path;
    BasicFileAttributes attrs=attrs();
    accessTime=attrs.lastAccessTime();
    modifiedTime=attrs.lastModifiedTime();
  }
  private BasicFileAttributes attrs() throws IOException {
    return Files.readAttributes(path,BasicFileAttributes.class);
  }
  public void assertAccessTimeChanged() throws IOException {
    FileTime t=attrs().lastAccessTime();
    assertThat(t).isNotEqualTo(accessTime);
    accessTime=t;
  }
  public void assertAccessTimeDidNotChange() throws IOException {
    FileTime t=attrs().lastAccessTime();
    assertThat(t).isEqualTo(accessTime);
  }
  public void assertModifiedTimeChanged() throws IOException {
    FileTime t=attrs().lastModifiedTime();
    assertThat(t).isNotEqualTo(modifiedTime);
    modifiedTime=t;
  }
  public void assertModifiedTimeDidNotChange() throws IOException {
    FileTime t=attrs().lastModifiedTime();
    assertThat(t).isEqualTo(modifiedTime);
  }
}
