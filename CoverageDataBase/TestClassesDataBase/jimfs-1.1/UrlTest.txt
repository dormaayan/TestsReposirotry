/** 
 * Tests that  {@link URL} instances can be created and used from jimfs URIs.
 * @author Colin Decker
 */
@RunWith(JUnit4.class) public class UrlTest {
  private final FileSystem fs=Jimfs.newFileSystem(Configuration.unix());
  private Path path=fs.getPath("foo");
  @Test public void creatUrl() throws MalformedURLException {
    URL url=path.toUri().toURL();
    assertThat(url).isNotNull();
  }
  @Test public void readFromUrl() throws IOException {
    Files.write(path,ImmutableList.of("Hello World"),UTF_8);
    URL url=path.toUri().toURL();
    assertThat(Resources.asCharSource(url,UTF_8).read()).isEqualTo("Hello World" + LINE_SEPARATOR.value());
  }
  @Test public void readDirectoryContents() throws IOException {
    Files.createDirectory(path);
    Files.createFile(path.resolve("a.txt"));
    Files.createFile(path.resolve("b.txt"));
    Files.createDirectory(path.resolve("c"));
    URL url=path.toUri().toURL();
    assertThat(Resources.asCharSource(url,UTF_8).read()).isEqualTo("a.txt\nb.txt\nc\n");
  }
  @Test public void headers() throws IOException {
    byte[] bytes={1,2,3};
    Files.write(path,bytes);
    FileTime lastModified=Files.getLastModifiedTime(path);
    URL url=path.toUri().toURL();
    URLConnection conn=url.openConnection();
    assertThat(conn.getHeaderFields()).containsEntry("content-length",ImmutableList.of("3"));
    assertThat(conn.getHeaderFields()).containsEntry("content-type",ImmutableList.of("application/octet-stream"));
    if (lastModified != null) {
      assertThat(conn.getHeaderFields()).containsKey("last-modified");
      assertThat(conn.getHeaderFields()).hasSize(3);
    }
 else {
      assertThat(conn.getHeaderFields()).hasSize(2);
    }
    assertThat(conn.getContentLengthLong()).isEqualTo(Files.size(path));
    assertThat(conn.getContentType()).isEqualTo("application/octet-stream");
    if (lastModified != null) {
      long difference=lastModified.toMillis() - conn.getLastModified();
      assertThat(difference).isIn(Range.closedOpen(0L,1000L));
    }
 else {
      assertThat(conn.getLastModified()).isEqualTo(0L);
    }
  }
  @Test public void contentType() throws IOException {
    path=fs.getPath("foo.txt");
    Files.write(path,ImmutableList.of("Hello World"),UTF_8);
    URL url=path.toUri().toURL();
    URLConnection conn=url.openConnection();
    String detectedContentType=Files.probeContentType(path);
    if (detectedContentType == null) {
      assertThat(conn.getContentType()).isEqualTo("application/octet-stream");
    }
 else {
      assertThat(conn.getContentType()).isEqualTo(detectedContentType);
    }
  }
}
