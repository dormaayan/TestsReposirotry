/** 
 * Tests for  {@link OwnerAttributeProvider}.
 * @author Colin Decker
 */
@RunWith(JUnit4.class) public class OwnerAttributeProviderTest extends AbstractAttributeProviderTest<OwnerAttributeProvider> {
  @Override protected OwnerAttributeProvider createProvider(){
    return new OwnerAttributeProvider();
  }
  @Override protected Set<? extends AttributeProvider> createInheritedProviders(){
    return ImmutableSet.of();
  }
  @Test public void testInitialAttributes(){
    assertThat(provider.get(file,"owner")).isEqualTo(createUserPrincipal("user"));
  }
  @Test public void testSet(){
    assertSetAndGetSucceeds("owner",createUserPrincipal("user"));
    assertSetAndGetSucceedsOnCreate("owner",createUserPrincipal("user"));
    assertSetFails("owner","root");
  }
  @Test public void testView() throws IOException {
    FileOwnerAttributeView view=provider.view(fileLookup(),NO_INHERITED_VIEWS);
    assertThat(view).isNotNull();
    assertThat(view.name()).isEqualTo("owner");
    assertThat(view.getOwner()).isEqualTo(createUserPrincipal("user"));
    view.setOwner(createUserPrincipal("root"));
    assertThat(view.getOwner()).isEqualTo(createUserPrincipal("root"));
    assertThat(file.getAttribute("owner","owner")).isEqualTo(createUserPrincipal("root"));
  }
}
