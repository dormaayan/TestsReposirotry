/** 
 * @author Damian Szczepanik (damianszczepanik@github)
 */
public class TrendsOverviewPageIntegrationTest extends PageTest {
  @Test public void generatePage_generatesTitle(){
    setUpWithJson(SAMPLE_JSON);
    Trends trends=Deencapsulation.invoke(ReportBuilder.class,"loadTrends",TRENDS_FILE);
    page=new TrendsOverviewPage(reportResult,configuration,trends);
    final String titleValue=String.format("Cucumber Reports  - Trends Overview",configuration.getBuildNumber());
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    String title=document.getHead().getTitle();
    assertThat(title).isEqualTo(titleValue);
  }
  @Test public void generatePage_generatesLead(){
    setUpWithJson(SAMPLE_JSON);
    Trends trends=Deencapsulation.invoke(ReportBuilder.class,"loadTrends",TRENDS_FILE);
    page=new TrendsOverviewPage(reportResult,configuration,trends);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    LeadAssertion lead=document.getLead();
    assertThat(lead.getHeader()).isEqualTo("Trends Statistics");
    assertThat(lead.getDescription()).isEqualTo("The following graph shows features, scenarios and steps for a period of time.");
  }
  @Test public void generatePage_generatesCharts(){
    setUpWithJson(SAMPLE_JSON);
    Trends trends=Deencapsulation.invoke(ReportBuilder.class,"loadTrends",TRENDS_FILE);
    page=new TrendsOverviewPage(reportResult,configuration,trends);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    assertThat(document.byId("trends-features-chart",WebAssertion.class)).isNotNull();
    assertThat(document.byId("trends-scenarios-chart",WebAssertion.class)).isNotNull();
    assertThat(document.byId("trends-steps-chart",WebAssertion.class)).isNotNull();
  }
  @Test public void generatePage_insertsChartData(){
    setUpWithJson(SAMPLE_JSON);
    Trends trends=Deencapsulation.invoke(ReportBuilder.class,"loadTrends",TRENDS_FILE);
    page=new TrendsOverviewPage(reportResult,configuration,trends);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    assertThat(document.html()).contains("var buildNumbers =  [ \"01_first\",  \"other build\",  \"05last\", ] ;");
    assertThat(document.html()).contains("var failedFeatures =  [ 1,  2,  5, ] ;");
    assertThat(document.html()).contains("var passedFeatures =  [ 9,  18,  25, ] ;");
    assertThat(document.html()).contains("var failedScenarios =  [ 10,  20,  20, ] ;");
    assertThat(document.html()).contains("var passedScenarios =  [ 10,  20,  20, ] ;");
    assertThat(document.html()).contains("var passedSteps =  [ 1,  3,  5, ] ;");
    assertThat(document.html()).contains("var failedSteps =  [ 10,  30,  50, ] ;");
    assertThat(document.html()).contains("var skippedSteps =  [ 100,  300,  500, ] ;");
    assertThat(document.html()).contains("var pendingSteps =  [ 1000,  3000,  5000, ] ;");
    assertThat(document.html()).contains("var undefinedSteps =  [ 10000,  30000,  50000, ] ;");
    assertThat(document.html()).contains("var durations =  [ 3206126182398,  3206126182399,  3206126182310, ] ;");
  }
}
