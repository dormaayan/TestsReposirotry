/** 
 * @author Damian Szczepanik (damianszczepanik@github)
 */
public class StatusCounterTest {
  @Test public void getValueFor_ReturnsStatusCounter(){
    StatusCounter statusCounter=new StatusCounter();
    statusCounter.incrementFor(Status.PASSED);
    statusCounter.incrementFor(Status.PASSED);
    statusCounter.incrementFor(Status.PASSED);
    assertThat(statusCounter.getValueFor(Status.PASSED)).isEqualTo(3);
    assertThat(statusCounter.getValueFor(Status.FAILED)).isZero();
    assertThat(statusCounter.getValueFor(Status.UNDEFINED)).isZero();
    assertThat(statusCounter.getValueFor(Status.PENDING)).isZero();
    assertThat(statusCounter.getValueFor(Status.SKIPPED)).isZero();
  }
  @Test public void size_ReturnsAllStatusCounter(){
    StatusCounter statusCounter=new StatusCounter();
    statusCounter.incrementFor(Status.PASSED);
    statusCounter.incrementFor(Status.FAILED);
    assertThat(statusCounter.size()).isEqualTo(2);
  }
  @Test public void getFinalStatus_WithNoStatuses_ReturnsPass(){
    StatusCounter statusCounter=new StatusCounter();
    Status status=statusCounter.getFinalStatus();
    assertThat(status).isEqualTo(Status.PASSED);
  }
  @Test public void getFinalStatus_OnSameStatuses_ReturnsThatStatus(){
    StatusCounter statusCounter=new StatusCounter();
    statusCounter.incrementFor(Status.PASSED);
    statusCounter.incrementFor(Status.PASSED);
    assertThat(statusCounter.getFinalStatus()).isEqualTo(Status.PASSED);
  }
  @Test public void getFinalStatus_OnDifferentStatuses_ReturnsFailedStatus(){
    StatusCounter statusCounter=new StatusCounter();
    statusCounter.incrementFor(Status.PASSED);
    statusCounter.incrementFor(Status.UNDEFINED);
    assertThat(statusCounter.getFinalStatus()).isEqualTo(Status.FAILED);
  }
  @Test public void getFinalStatus_OnFailedStatus_ReturnsFailedStatus(){
    StatusCounter statusCounter=new StatusCounter();
    statusCounter.incrementFor(Status.PASSED);
    statusCounter.incrementFor(Status.FAILED);
    assertThat(statusCounter.getFinalStatus()).isEqualTo(Status.FAILED);
  }
}
