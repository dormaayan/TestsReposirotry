/** 
 * @author Damian Szczepanik (damianszczepanik@github)
 */
public class StatusTest {
  @Test public void valuesOf_ReturnsOrderedStatuses(){
    final Status[] reference={PASSED,FAILED,SKIPPED,PENDING,UNDEFINED};
    Status[] orderedStatuses=Status.values();
    assertThat(orderedStatuses).isEqualTo(reference);
  }
  @Test public void getName_ReturnsNameAsLowerCase(){
    final Status status=PASSED;
    final String refName="passed";
    String rawName=status.getRawName();
    assertThat(rawName).isEqualTo(refName);
  }
  @Test public void getLabel_ReturnsNameStartingFromUpperCase(){
    final Status status=UNDEFINED;
    final String refLabel="Undefined";
    String label=status.getLabel();
    assertThat(label).isEqualTo(refLabel);
  }
  @Test public void isPassed_ReturnsTrueForPASSEDStatus(){
    Status status=PASSED;
    boolean isPassed=status.isPassed();
    assertThat(isPassed).isTrue();
  }
  @Test public void hasPassed_ReturnsFalseForNoPASSED(){
    Status[] notPassed={FAILED,SKIPPED,PENDING,UNDEFINED};
    for (    Status status : notPassed) {
      boolean isPassed=status.isPassed();
      assertThat(isPassed).isFalse();
    }
  }
}
