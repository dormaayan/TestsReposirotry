/** 
 * @author Damian Szczepanik (damianszczepanik@github)
 */
public class TagReportPageIntegrationTest extends PageTest {
  @Test public void generatePage_generatesTitle(){
    setUpWithJson(SAMPLE_JSON);
    final TagObject tag=tags.get(0);
    page=new TagReportPage(reportResult,configuration,tag);
    final String titleValue=String.format("Cucumber Reports  - Tag: %s",tag.getName());
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    String title=document.getHead().getTitle();
    assertThat(title).isEqualTo(titleValue);
  }
  @Test public void generatePage_generatesStatsTableBody(){
    setUpWithJson(SAMPLE_JSON);
    final TagObject tag=tags.get(0);
    page=new TagReportPage(reportResult,configuration,tag);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    TableRowAssertion bodyRow=document.getReport().getTableStats().getBodyRow();
    bodyRow.hasExactValues(tag.getName(),"10","1","2","1","2","16","1","1","2","0.231","Failed");
    bodyRow.hasExactCSSClasses("tagname","passed","failed","skipped","pending","undefined","total","passed","failed","total","duration","failed");
  }
  @Test public void generatePage_generatesFeatureNames(){
    setUpWithJson(SAMPLE_JSON);
    final TagObject tag=tags.get(1);
    page=new TagReportPage(reportResult,configuration,tag);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    ElementAssertion[] elements=document.getElements();
    LinkAssertion featureName=elements[0].getFeatureName();
    featureName.hasLabelAndAddress(features.get(0).getName(),features.get(0).getReportFileName());
  }
  @Test public void generatePage_generatesTagsList(){
    setUpWithJson(SAMPLE_JSON);
    final TagObject tag=tags.get(0);
    page=new TagReportPage(reportResult,configuration,tag);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    ElementAssertion[] elements=document.getElements();
    assertThat(elements).hasSameSizeAs(tags.get(0).getElements());
  }
  @Test public void generatePage_generatesSteps(){
    setUpWithJson(SAMPLE_JSON);
    final TagObject tag=tags.get(1);
    page=new TagReportPage(reportResult,configuration,tag);
    page.generatePage();
    DocumentAssertion document=documentFrom(page.getWebPage());
    BriefAssertion stepElement=document.getElements()[0].getStepsSection().getSteps()[3].getBrief();
    Step step=tag.getElements().get(0).getSteps()[3];
    assertThat(stepElement.getName()).hasSameSizeAs(step.getName());
  }
}
