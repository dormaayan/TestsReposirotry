/** 
 * @author Damian Szczepanik (damianszczepanik@github)
 */
@RunWith(PowerMockRunner.class) @PrepareForTest(value=JsonNode.class) public class StatusDeserializerTest {
  @Rule public ExpectedException thrown=ExpectedException.none();
  @Test public void deserialize_OnDefaultStatus_ReturnsStatus(){
    Status status=Status.PASSED;
    JsonNode node=mock(JsonNode.class);
    when(node.asText()).thenReturn(status.name().toLowerCase());
    StatusDeserializer deserializer=new StatusDeserializer();
    Status newStatus=deserializer.deserialize(node,null);
    assertThat(newStatus).isEqualTo(status);
  }
  @Test public void deserialize_OnAdditionalStatus_ReturnsUndefinedStatus(){
    Status status=Status.UNDEFINED;
    JsonNode node=mock(JsonNode.class);
    when(node.asText()).thenReturn(StatusDeserializer.UNKNOWN_STATUSES.get(0));
    StatusDeserializer deserializer=new StatusDeserializer();
    Status newStatus=deserializer.deserialize(node,null);
    assertThat(newStatus).isEqualTo(status);
  }
  @Test public void deserialize_OnUnknownStatus_ThrowsException(){
    String status="thisIsNotStatus";
    JsonNode node=mock(JsonNode.class);
    when(node.asText()).thenReturn(status);
    StatusDeserializer deserializer=new StatusDeserializer();
    thrown.expect(IllegalArgumentException.class);
    thrown.expectMessage(String.format("No enum constant %s.THISISNOTSTATUS",Status.class.getName()));
    deserializer.deserialize(node,null);
  }
}
