/** 
 * @author Damian Szczepanik (damianszczepanik@github)
 */
public class TagTest extends PageTest {
  @Before public void setUp(){
    setUpWithJson(SAMPLE_JSON);
  }
  @Test public void getName_ReturnsFeatureTagName(){
    Tag tag=features.get(0).getTags()[0];
    String tagName=tag.getName();
    assertThat(tagName).isEqualTo("@featureTag");
  }
  @Test public void getName_ReturnsElementTagName(){
    Tag tag=features.get(0).getElements()[1].getTags()[2];
    String tagName=tag.getName();
    assertThat(tagName).isEqualTo("@checkout");
  }
  @Test public void getFileName_ReturnsTagFileName(){
    Tag tag=features.get(1).getElements()[0].getTags()[0];
    String fileName=tag.getFileName();
    assertThat(fileName).isEqualTo("report-tag_checkout.html");
  }
  @Test public void generateFileName_OnInvalidTagName_ReturnsValidFileName(){
    final String[] tags={"@up s","?any","9/3"};
    final String[] names={"up-s","-any","9-3"};
    for (int i=0; i < tags.length; i++) {
      assertThat(Tag.generateFileName(tags[i])).isEqualTo(String.format("report-tag_%s.html",names[i]));
    }
  }
  @Test public void hashCode_OnSameName_ReturnsHashCode(){
    final String tagName="@superTaggggg";
    Tag tag=new Tag();
    Deencapsulation.setField(tag,"name",tagName);
    int hashCode=tag.hashCode();
    assertThat(hashCode).isEqualTo(tagName.hashCode());
  }
  @Test public void equals_OnSameName_ReturnsTrue(){
    final String tagName="@superTaggggg";
    Tag tag1=new Tag();
    Deencapsulation.setField(tag1,"name",tagName);
    Tag tag2=new Tag();
    Deencapsulation.setField(tag2,"name",tagName);
    boolean isSame=tag1.equals(tag2);
    assertThat(isSame).isTrue();
  }
  @Test public void equals_OnDifferentName_ReturnsFalse(){
    final String tagName="@superTaggggg";
    Tag tag1=new Tag();
    Deencapsulation.setField(tag1,"name",tagName);
    Tag tag2=new Tag();
    Deencapsulation.setField(tag2,"name",tagName + tagName);
    boolean isSame=tag1.equals(tag2);
    assertThat(isSame).isFalse();
  }
}
