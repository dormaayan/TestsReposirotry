@Test public void rawTypeThrows(){
  CallAdapter.Factory factory=RxJavaCallAdapterFactory.create();
  Type observableType=new TypeToken<Observable>(){
  }
.getType();
  try {
    factory.get(observableType,NO_ANNOTATIONS,retrofit);
    fail();
  }
 catch (  IllegalStateException e) {
    assertThat(e).hasMessage("Observable return type must be parameterized as Observable<Foo> or Observable<? extends Foo>");
  }
  Type singleType=new TypeToken<Single>(){
  }
.getType();
  try {
    factory.get(singleType,NO_ANNOTATIONS,retrofit);
    fail();
  }
 catch (  IllegalStateException e) {
    assertThat(e).hasMessage("Single return type must be parameterized as Single<Foo> or Single<? extends Foo>");
  }
}
