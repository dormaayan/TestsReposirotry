@Test public void rawResultTypeThrows(){
  CallAdapter.Factory factory=RxJavaCallAdapterFactory.create();
  Type observableType=new TypeToken<Observable<Result>>(){
  }
.getType();
  try {
    factory.get(observableType,NO_ANNOTATIONS,retrofit);
    fail();
  }
 catch (  IllegalStateException e) {
    assertThat(e).hasMessage("Result must be parameterized as Result<Foo> or Result<? extends Foo>");
  }
  Type singleType=new TypeToken<Single<Result>>(){
  }
.getType();
  try {
    factory.get(singleType,NO_ANNOTATIONS,retrofit);
    fail();
  }
 catch (  IllegalStateException e) {
    assertThat(e).hasMessage("Result must be parameterized as Result<Foo> or Result<? extends Foo>");
  }
}
