@Test public void adaptedCallEnqueueUsesExecutorForFailureCallback(){
  Type returnType=new TypeToken<Call<String>>(){
  }
.getType();
  CallAdapter<Call<?>> adapter=(CallAdapter<Call<?>>)factory.get(returnType,NO_ANNOTATIONS,retrofit);
  final Throwable throwable=new IOException();
  Call<String> call=(Call<String>)adapter.adapt(new EmptyCall(){
    @Override public void enqueue(    Callback<String> callback){
      callback.onFailure(throwable);
    }
  }
);
  call.enqueue(callback);
  verify(callbackExecutor).execute(any(Runnable.class));
  verifyNoMoreInteractions(callbackExecutor);
  verify(callback).onFailure(throwable);
  verifyNoMoreInteractions(callback);
}
