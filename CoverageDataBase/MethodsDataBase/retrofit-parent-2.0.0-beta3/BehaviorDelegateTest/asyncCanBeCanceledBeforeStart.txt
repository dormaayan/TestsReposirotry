@Test public void asyncCanBeCanceledBeforeStart() throws InterruptedException {
  behavior.setDelay(10,SECONDS);
  behavior.setVariancePercent(0);
  behavior.setFailurePercent(0);
  final Call<String> call=service.response();
  call.cancel();
  final AtomicReference<Throwable> failureRef=new AtomicReference<>();
  final CountDownLatch latch=new CountDownLatch(1);
  call.enqueue(new Callback<String>(){
    @Override public void onResponse(    Response<String> response){
      latch.countDown();
    }
    @Override public void onFailure(    Throwable t){
      failureRef.set(t);
      latch.countDown();
    }
  }
);
  assertTrue(latch.await(1,SECONDS));
  assertThat(failureRef.get()).isExactlyInstanceOf(IOException.class).hasMessage("canceled");
}
