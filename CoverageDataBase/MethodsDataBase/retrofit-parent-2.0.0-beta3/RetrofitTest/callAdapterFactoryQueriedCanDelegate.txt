@Test public void callAdapterFactoryQueriedCanDelegate(){
  Type type=String.class;
  Annotation[] annotations=new Annotation[0];
  CallAdapter<?> expectedAdapter=mock(CallAdapter.class);
  CallAdapter.Factory factory2=mock(CallAdapter.Factory.class);
  CallAdapter.Factory factory1=spy(new CallAdapter.Factory(){
    @Override public CallAdapter<?> get(    Type returnType,    Annotation[] annotations,    Retrofit retrofit){
      return retrofit.nextCallAdapter(this,returnType,annotations);
    }
  }
);
  Retrofit retrofit=new Retrofit.Builder().baseUrl("http://example.com/").addCallAdapterFactory(factory1).addCallAdapterFactory(factory2).build();
  doReturn(expectedAdapter).when(factory2).get(type,annotations,retrofit);
  CallAdapter<?> actualAdapter=retrofit.callAdapter(type,annotations);
  assertThat(actualAdapter).isSameAs(expectedAdapter);
  verify(factory1).get(type,annotations,retrofit);
  verifyNoMoreInteractions(factory1);
  verify(factory2).get(type,annotations,retrofit);
  verifyNoMoreInteractions(factory2);
}
