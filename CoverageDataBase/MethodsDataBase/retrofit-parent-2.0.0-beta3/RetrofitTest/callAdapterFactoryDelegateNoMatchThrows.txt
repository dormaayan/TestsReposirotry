@Test public void callAdapterFactoryDelegateNoMatchThrows(){
  Type type=String.class;
  Annotation[] annotations=new Annotation[0];
  CallAdapter.Factory factory1=spy(new CallAdapter.Factory(){
    @Override public CallAdapter<?> get(    Type returnType,    Annotation[] annotations,    Retrofit retrofit){
      return retrofit.nextCallAdapter(this,returnType,annotations);
    }
  }
);
  Retrofit retrofit=new Retrofit.Builder().baseUrl("http://example.com/").addCallAdapterFactory(factory1).build();
  try {
    retrofit.callAdapter(type,annotations);
  }
 catch (  IllegalArgumentException e) {
    assertThat(e).hasMessageContaining("Skipped:").hasMessageStartingWith("Could not locate call adapter for class java.lang.String. Tried:");
  }
  verify(factory1).get(type,annotations,retrofit);
  verifyNoMoreInteractions(factory1);
}
