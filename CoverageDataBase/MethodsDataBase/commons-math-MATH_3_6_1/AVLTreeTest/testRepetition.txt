@Test public void testRepetition(){
  int[] array={1,1,3,3,4,5,6,7,7,7,7,7};
  AVLTree<Integer> tree=buildTree(array);
  Assert.assertEquals(array.length,tree.size());
  AVLTree<Integer>.Node node=tree.getNotSmaller(new Integer(3));
  Assert.assertEquals(3,value(node));
  Assert.assertEquals(1,value(node.getPrevious()));
  Assert.assertEquals(3,value(node.getNext()));
  Assert.assertEquals(4,value(node.getNext().getNext()));
  node=tree.getNotLarger(new Integer(2));
  Assert.assertEquals(1,value(node));
  Assert.assertEquals(1,value(node.getPrevious()));
  Assert.assertEquals(3,value(node.getNext()));
  Assert.assertNull(node.getPrevious().getPrevious());
  AVLTree<Integer>.Node otherNode=tree.getNotSmaller(new Integer(1));
  Assert.assertTrue(node != otherNode);
  Assert.assertEquals(1,value(otherNode));
  Assert.assertNull(otherNode.getPrevious());
  node=tree.getNotLarger(new Integer(10));
  Assert.assertEquals(7,value(node));
  Assert.assertNull(node.getNext());
  node=node.getPrevious();
  Assert.assertEquals(7,value(node));
  node=node.getPrevious();
  Assert.assertEquals(7,value(node));
  node=node.getPrevious();
  Assert.assertEquals(7,value(node));
  node=node.getPrevious();
  Assert.assertEquals(7,value(node));
  node=node.getPrevious();
  Assert.assertEquals(6,value(node));
  checkOrder(tree);
}
