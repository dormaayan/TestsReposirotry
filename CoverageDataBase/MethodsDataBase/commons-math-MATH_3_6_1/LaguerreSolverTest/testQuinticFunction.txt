/** 
 * Test of solver for the quintic function.
 */
@Test public void testQuinticFunction(){
  double min, max, expected, result, tolerance;
  double coefficients[]={-12.0,-1.0,1.0,-12.0,-1.0,1.0};
  PolynomialFunction f=new PolynomialFunction(coefficients);
  LaguerreSolver solver=new LaguerreSolver();
  min=-2.0;
  max=2.0;
  expected=-1.0;
  tolerance=FastMath.max(solver.getAbsoluteAccuracy(),FastMath.abs(expected * solver.getRelativeAccuracy()));
  result=solver.solve(100,f,min,max);
  Assert.assertEquals(expected,result,tolerance);
  min=-5.0;
  max=-2.5;
  expected=-3.0;
  tolerance=FastMath.max(solver.getAbsoluteAccuracy(),FastMath.abs(expected * solver.getRelativeAccuracy()));
  result=solver.solve(100,f,min,max);
  Assert.assertEquals(expected,result,tolerance);
  min=3.0;
  max=6.0;
  expected=4.0;
  tolerance=FastMath.max(solver.getAbsoluteAccuracy(),FastMath.abs(expected * solver.getRelativeAccuracy()));
  result=solver.solve(100,f,min,max);
  Assert.assertEquals(expected,result,tolerance);
}
