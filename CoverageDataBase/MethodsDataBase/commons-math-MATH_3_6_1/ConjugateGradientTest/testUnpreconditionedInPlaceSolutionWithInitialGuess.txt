@Test public void testUnpreconditionedInPlaceSolutionWithInitialGuess(){
  final int n=5;
  final int maxIterations=100;
  final RealLinearOperator a=new HilbertMatrix(n);
  final InverseHilbertMatrix ainv=new InverseHilbertMatrix(n);
  final IterativeLinearSolver solver;
  solver=new ConjugateGradient(maxIterations,1E-10,true);
  final RealVector b=new ArrayRealVector(n);
  for (int j=0; j < n; j++) {
    b.set(0.);
    b.setEntry(j,1.);
    final RealVector x0=new ArrayRealVector(n);
    x0.set(1.);
    final RealVector x=solver.solveInPlace(a,b,x0);
    Assert.assertSame("x should be a reference to x0",x0,x);
    for (int i=0; i < n; i++) {
      final double actual=x.getEntry(i);
      final double expected=ainv.getEntry(i,j);
      final double delta=1E-10 * FastMath.abs(expected);
      final String msg=String.format("entry[%d][%d)",i,j);
      Assert.assertEquals(msg,expected,actual,delta);
    }
  }
}
