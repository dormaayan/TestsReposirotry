@Test public void testBoundaries(){
  final double lower=-1.0;
  final double upper=+1.0;
  UnivariateFunction f=new UnivariateFunction(){
    public double value(    double x){
      if (x < lower) {
        throw new NumberIsTooSmallException(x,lower,true);
      }
 else       if (x > upper) {
        throw new NumberIsTooLargeException(x,upper,true);
      }
 else {
        return x;
      }
    }
  }
;
  UnivariateOptimizer optimizer=new BrentOptimizer(1e-10,1e-14);
  Assert.assertEquals(lower,optimizer.optimize(new MaxEval(100),new UnivariateObjectiveFunction(f),GoalType.MINIMIZE,new SearchInterval(lower,upper)).getPoint(),1.0e-8);
  Assert.assertEquals(upper,optimizer.optimize(new MaxEval(100),new UnivariateObjectiveFunction(f),GoalType.MAXIMIZE,new SearchInterval(lower,upper)).getPoint(),1.0e-8);
}
