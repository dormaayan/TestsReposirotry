@Test public void testUnsorted(){
  Random randomizer=new Random(64925784252L);
  final double a=0.2;
  final double w=3.4;
  final double p=4.1;
  final HarmonicOscillator f=new HarmonicOscillator(a,w,p);
  final int size=100;
  final double[] xTab=new double[size];
  final double[] yTab=new double[size];
  for (int i=0; i < size; i++) {
    xTab[i]=0.1 * i;
    yTab[i]=f.value(xTab[i]) + 0.01 * randomizer.nextGaussian();
  }
  for (int i=0; i < size; i++) {
    int i1=randomizer.nextInt(size);
    int i2=randomizer.nextInt(size);
    double xTmp=xTab[i1];
    double yTmp=yTab[i1];
    xTab[i1]=xTab[i2];
    yTab[i1]=yTab[i2];
    xTab[i2]=xTmp;
    yTab[i2]=yTmp;
  }
  final WeightedObservedPoints points=new WeightedObservedPoints();
  for (int i=0; i < size; ++i) {
    points.add(1,xTab[i],yTab[i]);
  }
  final HarmonicCurveFitter fitter=HarmonicCurveFitter.create();
  final double[] fitted=fitter.fit(points.toList());
  Assert.assertEquals(a,fitted[0],7.6e-4);
  Assert.assertEquals(w,fitted[1],3.5e-3);
  Assert.assertEquals(p,MathUtils.normalizeAngle(fitted[2],p),1.5e-2);
}
