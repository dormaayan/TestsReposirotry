@Test public void testSeveralBlocks(){
  RealMatrix m=new BlockRealMatrix(35,71);
  for (int i=0; i < m.getRowDimension(); ++i) {
    for (int j=0; j < m.getColumnDimension(); ++j) {
      m.setEntry(i,j,i + j / 1024.0);
    }
  }
  RealMatrix mT=m.transpose();
  Assert.assertEquals(m.getRowDimension(),mT.getColumnDimension());
  Assert.assertEquals(m.getColumnDimension(),mT.getRowDimension());
  for (int i=0; i < mT.getRowDimension(); ++i) {
    for (int j=0; j < mT.getColumnDimension(); ++j) {
      Assert.assertEquals(m.getEntry(j,i),mT.getEntry(i,j),0);
    }
  }
  RealMatrix mPm=m.add(m);
  for (int i=0; i < mPm.getRowDimension(); ++i) {
    for (int j=0; j < mPm.getColumnDimension(); ++j) {
      Assert.assertEquals(2 * m.getEntry(i,j),mPm.getEntry(i,j),0);
    }
  }
  RealMatrix mPmMm=mPm.subtract(m);
  for (int i=0; i < mPmMm.getRowDimension(); ++i) {
    for (int j=0; j < mPmMm.getColumnDimension(); ++j) {
      Assert.assertEquals(m.getEntry(i,j),mPmMm.getEntry(i,j),0);
    }
  }
  RealMatrix mTm=mT.multiply(m);
  for (int i=0; i < mTm.getRowDimension(); ++i) {
    for (int j=0; j < mTm.getColumnDimension(); ++j) {
      double sum=0;
      for (int k=0; k < mT.getColumnDimension(); ++k) {
        sum+=(k + i / 1024.0) * (k + j / 1024.0);
      }
      Assert.assertEquals(sum,mTm.getEntry(i,j),0);
    }
  }
  RealMatrix mmT=m.multiply(mT);
  for (int i=0; i < mmT.getRowDimension(); ++i) {
    for (int j=0; j < mmT.getColumnDimension(); ++j) {
      double sum=0;
      for (int k=0; k < m.getColumnDimension(); ++k) {
        sum+=(i + k / 1024.0) * (j + k / 1024.0);
      }
      Assert.assertEquals(sum,mmT.getEntry(i,j),0);
    }
  }
  RealMatrix sub1=m.getSubMatrix(2,9,5,20);
  for (int i=0; i < sub1.getRowDimension(); ++i) {
    for (int j=0; j < sub1.getColumnDimension(); ++j) {
      Assert.assertEquals((i + 2) + (j + 5) / 1024.0,sub1.getEntry(i,j),0);
    }
  }
  RealMatrix sub2=m.getSubMatrix(10,12,3,70);
  for (int i=0; i < sub2.getRowDimension(); ++i) {
    for (int j=0; j < sub2.getColumnDimension(); ++j) {
      Assert.assertEquals((i + 10) + (j + 3) / 1024.0,sub2.getEntry(i,j),0);
    }
  }
  RealMatrix sub3=m.getSubMatrix(30,34,0,5);
  for (int i=0; i < sub3.getRowDimension(); ++i) {
    for (int j=0; j < sub3.getColumnDimension(); ++j) {
      Assert.assertEquals((i + 30) + (j + 0) / 1024.0,sub3.getEntry(i,j),0);
    }
  }
  RealMatrix sub4=m.getSubMatrix(30,32,62,65);
  for (int i=0; i < sub4.getRowDimension(); ++i) {
    for (int j=0; j < sub4.getColumnDimension(); ++j) {
      Assert.assertEquals((i + 30) + (j + 62) / 1024.0,sub4.getEntry(i,j),0);
    }
  }
}
