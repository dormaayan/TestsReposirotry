/** 
 * test that R is upper triangular 
 */
@Test public void testRUpperTriangular(){
  RealMatrix matrix=MatrixUtils.createRealMatrix(testData3x3NonSingular);
  checkUpperTriangular(new QRDecomposition(matrix).getR());
  matrix=MatrixUtils.createRealMatrix(testData3x3Singular);
  checkUpperTriangular(new QRDecomposition(matrix).getR());
  matrix=MatrixUtils.createRealMatrix(testData3x4);
  checkUpperTriangular(new QRDecomposition(matrix).getR());
  matrix=MatrixUtils.createRealMatrix(testData4x3);
  checkUpperTriangular(new QRDecomposition(matrix).getR());
  Random r=new Random(643895747384642l);
  int p=(5 * BlockRealMatrix.BLOCK_SIZE) / 4;
  int q=(7 * BlockRealMatrix.BLOCK_SIZE) / 4;
  matrix=createTestMatrix(r,p,q);
  checkUpperTriangular(new QRDecomposition(matrix).getR());
  matrix=createTestMatrix(r,p,q);
  checkUpperTriangular(new QRDecomposition(matrix).getR());
}
