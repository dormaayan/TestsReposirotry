@Test public void testFindClosestNeuron(){
  final FeatureInitializer init=new OffsetFeatureInitializer(FeatureInitializerFactory.uniform(-0.1,0.1));
  final FeatureInitializer[] initArray={init};
  final Network net=new NeuronString(3,false,initArray).getNetwork();
  final DistanceMeasure dist=new EuclideanDistance();
  final Set<Neuron> allBest=new HashSet<Neuron>();
  final Set<Neuron> best=new HashSet<Neuron>();
  double[][] features;
  best.clear();
  features=new double[][]{{-1},{0.4}};
  for (  double[] f : features) {
    best.add(MapUtils.findBest(f,net,dist));
  }
  Assert.assertEquals(1,best.size());
  allBest.addAll(best);
  best.clear();
  features=new double[][]{{0.6},{1.4}};
  for (  double[] f : features) {
    best.add(MapUtils.findBest(f,net,dist));
  }
  Assert.assertEquals(1,best.size());
  allBest.addAll(best);
  best.clear();
  features=new double[][]{{1.6},{3}};
  for (  double[] f : features) {
    best.add(MapUtils.findBest(f,net,dist));
  }
  Assert.assertEquals(1,best.size());
  allBest.addAll(best);
  Assert.assertEquals(3,allBest.size());
}
