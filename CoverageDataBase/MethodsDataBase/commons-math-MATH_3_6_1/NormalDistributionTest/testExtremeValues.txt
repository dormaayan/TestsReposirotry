/** 
 * Check to make sure top-coding of extreme values works correctly. Verifies fixes for JIRA MATH-167, MATH-414
 */
@Test public void testExtremeValues(){
  NormalDistribution distribution=new NormalDistribution(0,1);
  for (int i=0; i < 100; i++) {
    double lowerTail=distribution.cumulativeProbability(-i);
    double upperTail=distribution.cumulativeProbability(i);
    if (i < 9) {
      Assert.assertTrue(lowerTail > 0.0d);
      Assert.assertTrue(upperTail < 1.0d);
    }
 else {
      Assert.assertTrue(lowerTail < 0.00001);
      Assert.assertTrue(upperTail > 0.99999);
    }
  }
  Assert.assertEquals(distribution.cumulativeProbability(Double.MAX_VALUE),1,0);
  Assert.assertEquals(distribution.cumulativeProbability(-Double.MAX_VALUE),0,0);
  Assert.assertEquals(distribution.cumulativeProbability(Double.POSITIVE_INFINITY),1,0);
  Assert.assertEquals(distribution.cumulativeProbability(Double.NEGATIVE_INFINITY),0,0);
}
