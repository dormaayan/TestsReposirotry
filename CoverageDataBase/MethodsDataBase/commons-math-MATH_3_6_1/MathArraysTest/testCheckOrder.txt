@Test public void testCheckOrder(){
  MathArrays.checkOrder(new double[]{-15,-5.5,-1,2,15},MathArrays.OrderDirection.INCREASING,true);
  MathArrays.checkOrder(new double[]{-15,-5.5,-1,2,2},MathArrays.OrderDirection.INCREASING,false);
  MathArrays.checkOrder(new double[]{3,-5.5,-11,-27.5},MathArrays.OrderDirection.DECREASING,true);
  MathArrays.checkOrder(new double[]{3,0,0,-5.5,-11,-27.5},MathArrays.OrderDirection.DECREASING,false);
  try {
    MathArrays.checkOrder(new double[]{-15,-5.5,-1,-1,2,15},MathArrays.OrderDirection.INCREASING,true);
    Assert.fail("an exception should have been thrown");
  }
 catch (  NonMonotonicSequenceException e) {
  }
  try {
    MathArrays.checkOrder(new double[]{-15,-5.5,-1,-2,2},MathArrays.OrderDirection.INCREASING,false);
    Assert.fail("an exception should have been thrown");
  }
 catch (  NonMonotonicSequenceException e) {
  }
  try {
    MathArrays.checkOrder(new double[]{3,3,-5.5,-11,-27.5},MathArrays.OrderDirection.DECREASING,true);
    Assert.fail("an exception should have been thrown");
  }
 catch (  NonMonotonicSequenceException e) {
  }
  try {
    MathArrays.checkOrder(new double[]{3,-1,0,-5.5,-11,-27.5},MathArrays.OrderDirection.DECREASING,false);
    Assert.fail("an exception should have been thrown");
  }
 catch (  NonMonotonicSequenceException e) {
  }
  try {
    MathArrays.checkOrder(new double[]{3,0,-5.5,-11,-10},MathArrays.OrderDirection.DECREASING,false);
    Assert.fail("an exception should have been thrown");
  }
 catch (  NonMonotonicSequenceException e) {
  }
}
