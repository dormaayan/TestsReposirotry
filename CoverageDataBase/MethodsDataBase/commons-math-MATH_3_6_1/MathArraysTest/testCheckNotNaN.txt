@Test public void testCheckNotNaN(){
  final double[] withoutNaN={Double.NEGATIVE_INFINITY,-Double.MAX_VALUE,-1,0,Double.MIN_VALUE,FastMath.ulp(1d),1,3,113,4769,Double.MAX_VALUE,Double.POSITIVE_INFINITY};
  final double[] withNaN={Double.NEGATIVE_INFINITY,-Double.MAX_VALUE,-1,0,Double.MIN_VALUE,FastMath.ulp(1d),1,3,113,4769,Double.MAX_VALUE,Double.POSITIVE_INFINITY,Double.NaN};
  final double[] nullArray=null;
  final double[] empty=new double[]{};
  MathArrays.checkNotNaN(withoutNaN);
  MathArrays.checkNotNaN(empty);
  try {
    MathArrays.checkNotNaN(nullArray);
    Assert.fail("Expecting NullPointerException");
  }
 catch (  NullPointerException ex) {
  }
  try {
    MathArrays.checkNotNaN(withNaN);
    Assert.fail("Expecting NotANumberException");
  }
 catch (  NotANumberException ex) {
  }
}
