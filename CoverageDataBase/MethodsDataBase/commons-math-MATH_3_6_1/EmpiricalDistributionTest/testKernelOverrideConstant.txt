@Test public void testKernelOverrideConstant(){
  final EmpiricalDistribution dist=new ConstantKernelEmpiricalDistribution(5);
  final double[] data={1d,2d,3d,4d,5d,6d,7d,8d,9d,10d,11d,12d,13d,14d,15d};
  dist.load(data);
  double[] values={2d,5d,8d,11d,14d};
  for (int i=0; i < 20; i++) {
    Assert.assertTrue(Arrays.binarySearch(values,dist.sample()) >= 0);
  }
  final double tol=10E-12;
  Assert.assertEquals(0.0,dist.cumulativeProbability(1),tol);
  Assert.assertEquals(0.2,dist.cumulativeProbability(2),tol);
  Assert.assertEquals(0.6,dist.cumulativeProbability(10),tol);
  Assert.assertEquals(0.8,dist.cumulativeProbability(12),tol);
  Assert.assertEquals(0.8,dist.cumulativeProbability(13),tol);
  Assert.assertEquals(1.0,dist.cumulativeProbability(15),tol);
  Assert.assertEquals(2.0,dist.inverseCumulativeProbability(0.1),tol);
  Assert.assertEquals(2.0,dist.inverseCumulativeProbability(0.2),tol);
  Assert.assertEquals(5.0,dist.inverseCumulativeProbability(0.3),tol);
  Assert.assertEquals(5.0,dist.inverseCumulativeProbability(0.4),tol);
  Assert.assertEquals(8.0,dist.inverseCumulativeProbability(0.5),tol);
  Assert.assertEquals(8.0,dist.inverseCumulativeProbability(0.6),tol);
}
