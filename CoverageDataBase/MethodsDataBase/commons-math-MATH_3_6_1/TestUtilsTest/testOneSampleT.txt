@Test public void testOneSampleT(){
  double[] observed={93.0,103.0,95.0,101.0,91.0,105.0,96.0,94.0,101.0,88.0,98.0,94.0,101.0,92.0,95.0};
  double mu=100.0;
  SummaryStatistics sampleStats=null;
  sampleStats=new SummaryStatistics();
  for (int i=0; i < observed.length; i++) {
    sampleStats.addValue(observed[i]);
  }
  Assert.assertEquals("t statistic",-2.81976445346,TestUtils.t(mu,observed),10E-10);
  Assert.assertEquals("t statistic",-2.81976445346,TestUtils.t(mu,sampleStats),10E-10);
  Assert.assertEquals("p value",0.0136390585873,TestUtils.tTest(mu,observed),10E-10);
  Assert.assertEquals("p value",0.0136390585873,TestUtils.tTest(mu,sampleStats),10E-10);
  try {
    TestUtils.t(mu,(double[])null);
    Assert.fail("arguments too short, NullArgumentException expected");
  }
 catch (  NullArgumentException ex) {
  }
  try {
    TestUtils.t(mu,(SummaryStatistics)null);
    Assert.fail("arguments too short, NullArgumentException expected");
  }
 catch (  NullArgumentException ex) {
  }
  try {
    TestUtils.t(mu,emptyObs);
    Assert.fail("arguments too short, NumberIsTooSmallException expected");
  }
 catch (  NumberIsTooSmallException ex) {
  }
  try {
    TestUtils.t(mu,emptyStats);
    Assert.fail("arguments too short, NumberIsTooSmallException expected");
  }
 catch (  NumberIsTooSmallException ex) {
  }
  try {
    TestUtils.t(mu,tooShortObs);
    Assert.fail("insufficient data to compute t statistic, NumberIsTooSmallException expected");
  }
 catch (  NumberIsTooSmallException ex) {
  }
  try {
    TestUtils.tTest(mu,tooShortObs);
    Assert.fail("insufficient data to perform t test, NumberIsTooSmallException expected");
  }
 catch (  NumberIsTooSmallException ex) {
  }
  try {
    TestUtils.t(mu,(SummaryStatistics)null);
    Assert.fail("insufficient data to compute t statistic, NullArgumentException expected");
  }
 catch (  NullArgumentException ex) {
  }
  try {
    TestUtils.tTest(mu,(SummaryStatistics)null);
    Assert.fail("insufficient data to perform t test, NullArgumentException expected");
  }
 catch (  NullArgumentException ex) {
  }
}
