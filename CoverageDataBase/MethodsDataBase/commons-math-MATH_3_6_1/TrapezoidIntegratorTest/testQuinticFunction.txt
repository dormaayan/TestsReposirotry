/** 
 * Test of integrator for the quintic function.
 */
@Test public void testQuinticFunction(){
  UnivariateFunction f=new QuinticFunction();
  UnivariateIntegrator integrator=new TrapezoidIntegrator();
  double min, max, expected, result, tolerance;
  min=0;
  max=1;
  expected=-1.0 / 48;
  tolerance=FastMath.abs(expected * integrator.getRelativeAccuracy());
  result=integrator.integrate(10000,f,min,max);
  Assert.assertTrue(integrator.getEvaluations() < 5000);
  Assert.assertTrue(integrator.getIterations() < 15);
  Assert.assertEquals(expected,result,tolerance);
  min=0;
  max=0.5;
  expected=11.0 / 768;
  tolerance=FastMath.abs(expected * integrator.getRelativeAccuracy());
  result=integrator.integrate(10000,f,min,max);
  Assert.assertTrue(integrator.getEvaluations() < 2500);
  Assert.assertTrue(integrator.getIterations() < 15);
  Assert.assertEquals(expected,result,tolerance);
  min=-1;
  max=4;
  expected=2048 / 3.0 - 78 + 1.0 / 48;
  tolerance=FastMath.abs(expected * integrator.getRelativeAccuracy());
  result=integrator.integrate(10000,f,min,max);
  Assert.assertTrue(integrator.getEvaluations() < 5000);
  Assert.assertTrue(integrator.getIterations() < 15);
  Assert.assertEquals(expected,result,tolerance);
}
