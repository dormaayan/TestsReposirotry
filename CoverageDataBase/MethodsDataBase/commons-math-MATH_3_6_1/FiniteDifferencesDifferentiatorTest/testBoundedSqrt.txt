@Test public void testBoundedSqrt(){
  UnivariateFunctionDifferentiator differentiator=new FiniteDifferencesDifferentiator(9,1.0 / 32,0.0,Double.POSITIVE_INFINITY);
  UnivariateDifferentiableFunction sqrt=differentiator.differentiate(new UnivariateFunction(){
    public double value(    double x){
      return FastMath.sqrt(x);
    }
  }
);
  DerivativeStructure t001=new DerivativeStructure(1,1,0,0.01);
  Assert.assertEquals(0.5 / FastMath.sqrt(t001.getValue()),sqrt.value(t001).getPartialDerivative(1),1.6);
  DerivativeStructure t01=new DerivativeStructure(1,1,0,0.1);
  Assert.assertEquals(0.5 / FastMath.sqrt(t01.getValue()),sqrt.value(t01).getPartialDerivative(1),7.0e-3);
  DerivativeStructure t03=new DerivativeStructure(1,1,0,0.3);
  Assert.assertEquals(0.5 / FastMath.sqrt(t03.getValue()),sqrt.value(t03).getPartialDerivative(1),2.1e-7);
}
