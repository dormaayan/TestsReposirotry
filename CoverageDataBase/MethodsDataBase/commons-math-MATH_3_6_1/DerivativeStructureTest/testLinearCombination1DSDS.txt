@Test public void testLinearCombination1DSDS(){
  final DerivativeStructure[] a=new DerivativeStructure[]{new DerivativeStructure(6,1,0,-1321008684645961.0 / 268435456.0),new DerivativeStructure(6,1,1,-5774608829631843.0 / 268435456.0),new DerivativeStructure(6,1,2,-7645843051051357.0 / 8589934592.0)};
  final DerivativeStructure[] b=new DerivativeStructure[]{new DerivativeStructure(6,1,3,-5712344449280879.0 / 2097152.0),new DerivativeStructure(6,1,4,-4550117129121957.0 / 2097152.0),new DerivativeStructure(6,1,5,8846951984510141.0 / 131072.0)};
  final DerivativeStructure abSumInline=a[0].linearCombination(a[0],b[0],a[1],b[1],a[2],b[2]);
  final DerivativeStructure abSumArray=a[0].linearCombination(a,b);
  Assert.assertEquals(abSumInline.getValue(),abSumArray.getValue(),0);
  Assert.assertEquals(-1.8551294182586248737720779899,abSumInline.getValue(),1.0e-15);
  Assert.assertEquals(b[0].getValue(),abSumInline.getPartialDerivative(1,0,0,0,0,0),1.0e-15);
  Assert.assertEquals(b[1].getValue(),abSumInline.getPartialDerivative(0,1,0,0,0,0),1.0e-15);
  Assert.assertEquals(b[2].getValue(),abSumInline.getPartialDerivative(0,0,1,0,0,0),1.0e-15);
  Assert.assertEquals(a[0].getValue(),abSumInline.getPartialDerivative(0,0,0,1,0,0),1.0e-15);
  Assert.assertEquals(a[1].getValue(),abSumInline.getPartialDerivative(0,0,0,0,1,0),1.0e-15);
  Assert.assertEquals(a[2].getValue(),abSumInline.getPartialDerivative(0,0,0,0,0,1),1.0e-15);
}
