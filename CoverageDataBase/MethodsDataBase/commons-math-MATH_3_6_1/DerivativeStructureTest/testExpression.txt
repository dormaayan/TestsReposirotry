@Test public void testExpression(){
  double epsilon=2.5e-13;
  for (double x=0; x < 2; x+=0.2) {
    DerivativeStructure dsX=new DerivativeStructure(3,5,0,x);
    for (double y=0; y < 2; y+=0.2) {
      DerivativeStructure dsY=new DerivativeStructure(3,5,1,y);
      for (double z=0; z > -2; z-=0.2) {
        DerivativeStructure dsZ=new DerivativeStructure(3,5,2,z);
        DerivativeStructure ds=new DerivativeStructure(1,dsX,5,dsX.multiply(dsY),-2,dsZ,1,new DerivativeStructure(8,dsZ.multiply(dsX),-1,dsY).pow(3));
        DerivativeStructure dsOther=new DerivativeStructure(1,dsX,5,dsX.multiply(dsY),-2,dsZ).add(new DerivativeStructure(8,dsZ.multiply(dsX),-1,dsY).pow(3));
        double f=x + 5 * x * y - 2 * z + FastMath.pow(8 * z * x - y,3);
        Assert.assertEquals(f,ds.getValue(),FastMath.abs(epsilon * f));
        Assert.assertEquals(f,dsOther.getValue(),FastMath.abs(epsilon * f));
        double dfdx=1 + 5 * y + 24 * z * FastMath.pow(8 * z * x - y,2);
        Assert.assertEquals(dfdx,ds.getPartialDerivative(1,0,0),FastMath.abs(epsilon * dfdx));
        Assert.assertEquals(dfdx,dsOther.getPartialDerivative(1,0,0),FastMath.abs(epsilon * dfdx));
        double dfdxdy=5 + 48 * z * (y - 8 * z * x);
        Assert.assertEquals(dfdxdy,ds.getPartialDerivative(1,1,0),FastMath.abs(epsilon * dfdxdy));
        Assert.assertEquals(dfdxdy,dsOther.getPartialDerivative(1,1,0),FastMath.abs(epsilon * dfdxdy));
        double dfdxdydz=48 * (y - 16 * z * x);
        Assert.assertEquals(dfdxdydz,ds.getPartialDerivative(1,1,1),FastMath.abs(epsilon * dfdxdydz));
        Assert.assertEquals(dfdxdydz,dsOther.getPartialDerivative(1,1,1),FastMath.abs(epsilon * dfdxdydz));
      }
    }
  }
}
