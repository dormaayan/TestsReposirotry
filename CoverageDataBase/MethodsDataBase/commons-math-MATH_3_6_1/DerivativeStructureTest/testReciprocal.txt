@Test public void testReciprocal(){
  for (double x=0.1; x < 1.2; x+=0.1) {
    DerivativeStructure r=new DerivativeStructure(1,6,0,x).reciprocal();
    Assert.assertEquals(1 / x,r.getValue(),1.0e-15);
    for (int i=1; i < r.getOrder(); ++i) {
      double expected=ArithmeticUtils.pow(-1,i) * CombinatoricsUtils.factorial(i) / FastMath.pow(x,i + 1);
      Assert.assertEquals(expected,r.getPartialDerivative(i),1.0e-15 * FastMath.abs(expected));
    }
  }
}
