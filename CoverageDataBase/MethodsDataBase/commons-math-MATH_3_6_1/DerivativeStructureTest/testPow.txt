@Test public void testPow(){
  for (int maxOrder=1; maxOrder < 5; ++maxOrder) {
    for (int n=0; n < 10; ++n) {
      DerivativeStructure x=new DerivativeStructure(3,maxOrder,0,1.0);
      DerivativeStructure y=new DerivativeStructure(3,maxOrder,1,2.0);
      DerivativeStructure z=new DerivativeStructure(3,maxOrder,2,3.0);
      List<DerivativeStructure> list=Arrays.asList(x,y,z,x.add(y).add(z),x.multiply(y).multiply(z));
      if (n == 0) {
        for (        DerivativeStructure ds : list) {
          checkEquals(ds.getField().getOne(),ds.pow(n),1.0e-15);
        }
      }
 else       if (n == 1) {
        for (        DerivativeStructure ds : list) {
          checkEquals(ds,ds.pow(n),1.0e-15);
        }
      }
 else {
        for (        DerivativeStructure ds : list) {
          DerivativeStructure p=ds.getField().getOne();
          for (int i=0; i < n; ++i) {
            p=p.multiply(ds);
          }
          checkEquals(p,ds.pow(n),1.0e-15);
        }
      }
    }
  }
}
