@Override @Test public void testLog(){
  double[] epsilon=new double[]{1.0e-16,1.0e-16,3.0e-14,7.0e-13,3.0e-11};
  for (int maxOrder=0; maxOrder < 5; ++maxOrder) {
    for (double x=0.1; x < 1.2; x+=0.001) {
      DerivativeStructure log=new DerivativeStructure(1,maxOrder,0,x).log();
      Assert.assertEquals(FastMath.log(x),log.getValue(),epsilon[0]);
      for (int n=1; n <= maxOrder; ++n) {
        double refDer=-CombinatoricsUtils.factorial(n - 1) / FastMath.pow(-x,n);
        Assert.assertEquals(refDer,log.getPartialDerivative(n),epsilon[n]);
      }
    }
  }
}
