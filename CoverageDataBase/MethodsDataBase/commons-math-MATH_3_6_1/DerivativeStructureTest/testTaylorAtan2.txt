@Test public void testTaylorAtan2(){
  double[] expected=new double[]{0.214,0.0241,0.00422,6.48e-4,8.04e-5};
  double x0=0.1;
  double y0=-0.3;
  for (int maxOrder=0; maxOrder < 5; ++maxOrder) {
    DerivativeStructure dsX=new DerivativeStructure(2,maxOrder,0,x0);
    DerivativeStructure dsY=new DerivativeStructure(2,maxOrder,1,y0);
    DerivativeStructure atan2=DerivativeStructure.atan2(dsY,dsX);
    double maxError=0;
    for (double dx=-0.05; dx < 0.05; dx+=0.001) {
      for (double dy=-0.05; dy < 0.05; dy+=0.001) {
        double ref=FastMath.atan2(y0 + dy,x0 + dx);
        maxError=FastMath.max(maxError,FastMath.abs(ref - atan2.taylor(dx,dy)));
      }
    }
    Assert.assertEquals(0.0,expected[maxOrder] - maxError,0.01 * expected[maxOrder]);
  }
}
