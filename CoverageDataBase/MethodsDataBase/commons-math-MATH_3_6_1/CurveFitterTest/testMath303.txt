@Test public void testMath303(){
  LevenbergMarquardtOptimizer optimizer=new LevenbergMarquardtOptimizer();
  CurveFitter<ParametricUnivariateFunction> fitter=new CurveFitter<ParametricUnivariateFunction>(optimizer);
  fitter.addObservedPoint(2.805d,0.6934785852953367d);
  fitter.addObservedPoint(2.74333333333333d,0.6306772025518496d);
  fitter.addObservedPoint(1.655d,0.9474675497289684);
  fitter.addObservedPoint(1.725d,0.9013594835804194d);
  ParametricUnivariateFunction sif=new SimpleInverseFunction();
  double[] initialguess1=new double[1];
  initialguess1[0]=1.0d;
  Assert.assertEquals(1,fitter.fit(sif,initialguess1).length);
  double[] initialguess2=new double[2];
  initialguess2[0]=1.0d;
  initialguess2[1]=.5d;
  Assert.assertEquals(2,fitter.fit(sif,initialguess2).length);
}
