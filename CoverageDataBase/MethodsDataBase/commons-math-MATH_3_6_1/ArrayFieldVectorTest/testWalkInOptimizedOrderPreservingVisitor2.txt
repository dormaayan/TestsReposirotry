/** 
 * Visiting an invalid subvector. 
 */
@Test public void testWalkInOptimizedOrderPreservingVisitor2(){
  final ArrayFieldVector<Fraction> v=create(5);
  final FieldVectorPreservingVisitor<Fraction> visitor;
  visitor=new FieldVectorPreservingVisitor<Fraction>(){
    public void visit(    int index,    Fraction value){
    }
    public void start(    int dimension,    int start,    int end){
    }
    public Fraction end(){
      return Fraction.ZERO;
    }
  }
;
  try {
    v.walkInOptimizedOrder(visitor,-1,4);
    Assert.fail();
  }
 catch (  OutOfRangeException e) {
  }
  try {
    v.walkInOptimizedOrder(visitor,5,4);
    Assert.fail();
  }
 catch (  OutOfRangeException e) {
  }
  try {
    v.walkInOptimizedOrder(visitor,0,-1);
    Assert.fail();
  }
 catch (  OutOfRangeException e) {
  }
  try {
    v.walkInOptimizedOrder(visitor,0,5);
    Assert.fail();
  }
 catch (  OutOfRangeException e) {
  }
  try {
    v.walkInOptimizedOrder(visitor,4,0);
    Assert.fail();
  }
 catch (  NumberIsTooSmallException e) {
  }
}
