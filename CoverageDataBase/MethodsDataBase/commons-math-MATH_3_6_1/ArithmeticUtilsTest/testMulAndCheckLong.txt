@Test public void testMulAndCheckLong(){
  long max=Long.MAX_VALUE;
  long min=Long.MIN_VALUE;
  Assert.assertEquals(max,ArithmeticUtils.mulAndCheck(max,1L));
  Assert.assertEquals(min,ArithmeticUtils.mulAndCheck(min,1L));
  Assert.assertEquals(0L,ArithmeticUtils.mulAndCheck(max,0L));
  Assert.assertEquals(0L,ArithmeticUtils.mulAndCheck(min,0L));
  Assert.assertEquals(max,ArithmeticUtils.mulAndCheck(1L,max));
  Assert.assertEquals(min,ArithmeticUtils.mulAndCheck(1L,min));
  Assert.assertEquals(0L,ArithmeticUtils.mulAndCheck(0L,max));
  Assert.assertEquals(0L,ArithmeticUtils.mulAndCheck(0L,min));
  Assert.assertEquals(1L,ArithmeticUtils.mulAndCheck(-1L,-1L));
  Assert.assertEquals(min,ArithmeticUtils.mulAndCheck(min / 2,2));
  testMulAndCheckLongFailure(max,2L);
  testMulAndCheckLongFailure(2L,max);
  testMulAndCheckLongFailure(min,2L);
  testMulAndCheckLongFailure(2L,min);
  testMulAndCheckLongFailure(min,-1L);
  testMulAndCheckLongFailure(-1L,min);
}
