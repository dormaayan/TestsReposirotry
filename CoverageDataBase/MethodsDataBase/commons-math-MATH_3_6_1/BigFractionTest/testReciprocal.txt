@Test public void testReciprocal(){
  BigFraction f=null;
  f=new BigFraction(50,75);
  f=f.reciprocal();
  Assert.assertEquals(3,f.getNumeratorAsInt());
  Assert.assertEquals(2,f.getDenominatorAsInt());
  f=new BigFraction(4,3);
  f=f.reciprocal();
  Assert.assertEquals(3,f.getNumeratorAsInt());
  Assert.assertEquals(4,f.getDenominatorAsInt());
  f=new BigFraction(-15,47);
  f=f.reciprocal();
  Assert.assertEquals(-47,f.getNumeratorAsInt());
  Assert.assertEquals(15,f.getDenominatorAsInt());
  f=new BigFraction(0,3);
  try {
    f=f.reciprocal();
    Assert.fail("expecting ZeroException");
  }
 catch (  ZeroException ex) {
  }
  f=new BigFraction(Integer.MAX_VALUE,1);
  f=f.reciprocal();
  Assert.assertEquals(1,f.getNumeratorAsInt());
  Assert.assertEquals(Integer.MAX_VALUE,f.getDenominatorAsInt());
}
