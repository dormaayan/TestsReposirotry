@Test public void testMultiply(){
  BigFraction a=new BigFraction(1,2);
  BigFraction b=new BigFraction(2,3);
  assertFraction(1,4,a.multiply(a));
  assertFraction(1,3,a.multiply(b));
  assertFraction(1,3,b.multiply(a));
  assertFraction(4,9,b.multiply(b));
  BigFraction f1=new BigFraction(Integer.MAX_VALUE,1);
  BigFraction f2=new BigFraction(Integer.MIN_VALUE,Integer.MAX_VALUE);
  BigFraction f=f1.multiply(f2);
  Assert.assertEquals(Integer.MIN_VALUE,f.getNumeratorAsInt());
  Assert.assertEquals(1,f.getDenominatorAsInt());
  f=f2.multiply(Integer.MAX_VALUE);
  Assert.assertEquals(Integer.MIN_VALUE,f.getNumeratorAsInt());
  Assert.assertEquals(1,f.getDenominatorAsInt());
  f=f2.multiply((long)Integer.MAX_VALUE);
  Assert.assertEquals(Integer.MIN_VALUE,f.getNumeratorAsInt());
  Assert.assertEquals(1,f.getDenominatorAsInt());
  try {
    f.multiply((BigFraction)null);
    Assert.fail("expecting NullArgumentException");
  }
 catch (  NullArgumentException ex) {
  }
}
