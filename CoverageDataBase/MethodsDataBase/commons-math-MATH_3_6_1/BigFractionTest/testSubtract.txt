@Test public void testSubtract(){
  BigFraction a=new BigFraction(1,2);
  BigFraction b=new BigFraction(2,3);
  assertFraction(0,1,a.subtract(a));
  assertFraction(-1,6,a.subtract(b));
  assertFraction(1,6,b.subtract(a));
  assertFraction(0,1,b.subtract(b));
  BigFraction f=new BigFraction(1,1);
  try {
    f.subtract((BigFraction)null);
    Assert.fail("expecting NullArgumentException");
  }
 catch (  NullArgumentException ex) {
  }
  BigFraction f1=new BigFraction(1,32768 * 3);
  BigFraction f2=new BigFraction(1,59049);
  f=f1.subtract(f2);
  Assert.assertEquals(-13085,f.getNumeratorAsInt());
  Assert.assertEquals(1934917632,f.getDenominatorAsInt());
  f1=new BigFraction(Integer.MIN_VALUE,3);
  f2=new BigFraction(1,3).negate();
  f=f1.subtract(f2);
  Assert.assertEquals(Integer.MIN_VALUE + 1,f.getNumeratorAsInt());
  Assert.assertEquals(3,f.getDenominatorAsInt());
  f1=new BigFraction(Integer.MAX_VALUE,1);
  f2=BigFraction.ONE;
  f=f1.subtract(f2);
  Assert.assertEquals(Integer.MAX_VALUE - 1,f.getNumeratorAsInt());
  Assert.assertEquals(1,f.getDenominatorAsInt());
}
