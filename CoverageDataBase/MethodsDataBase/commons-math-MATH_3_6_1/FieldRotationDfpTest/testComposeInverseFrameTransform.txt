@Test public void testComposeInverseFrameTransform() throws MathIllegalArgumentException {
  FieldRotation<Dfp> r1=new FieldRotation<Dfp>(createVector(2,-3,5),createAngle(1.7),RotationConvention.FRAME_TRANSFORM);
  FieldRotation<Dfp> r2=new FieldRotation<Dfp>(createVector(-1,3,2),createAngle(0.3),RotationConvention.FRAME_TRANSFORM);
  FieldRotation<Dfp> r3=r2.composeInverse(r1,RotationConvention.FRAME_TRANSFORM);
  FieldRotation<Dfp> r3Double=r2.composeInverse(new Rotation(r1.getQ0().getReal(),r1.getQ1().getReal(),r1.getQ2().getReal(),r1.getQ3().getReal(),false),RotationConvention.FRAME_TRANSFORM);
  FieldRotation<Dfp> r4=r1.revert().composeInverse(r2.revert(),RotationConvention.VECTOR_OPERATOR);
  Assert.assertEquals(0.0,FieldRotation.distance(r3,r4).getReal(),1.0e-15);
  for (double x=-0.9; x < 0.9; x+=0.2) {
    for (double y=-0.9; y < 0.9; y+=0.2) {
      for (double z=-0.9; z < 0.9; z+=0.2) {
        FieldVector3D<Dfp> u=createVector(x,y,z);
        checkVector(r1.applyTo(r2.applyInverseTo(u)),r3.applyTo(u));
        checkVector(r1.applyTo(r2.applyInverseTo(u)),r3Double.applyTo(u));
      }
    }
  }
}
