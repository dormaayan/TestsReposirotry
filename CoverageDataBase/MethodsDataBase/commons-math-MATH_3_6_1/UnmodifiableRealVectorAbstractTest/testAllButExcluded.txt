/** 
 * This test calls  {@link #callMethod(Method,RealVector,Object)} onevery method defined in interface  {@link RealVector}. It generates the appropriate random arguments. Some methods are manually excluded (see {@link #EXCLUDE}), they must be handled by separate tests.
 */
@Test public void testAllButExcluded() throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {
  Method[] method=RealVector.class.getMethods();
  for (int i=0; i < method.length; i++) {
    Method m=method[i];
    if (!EXCLUDE.contains(m.getName())) {
      RealVector u=(RealVector)createParameter(RealVector.class);
      Class<?>[] paramType=m.getParameterTypes();
      Object[] param=new Object[paramType.length];
      for (int j=0; j < paramType.length; j++) {
        param[j]=createParameter(paramType[j]);
      }
      callMethod(m,u,param);
    }
  }
}
