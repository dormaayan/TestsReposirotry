@Test public void testTransformFunctionInvalidBounds(){
  final int n=128;
  final UnivariateFunction f=new Sin();
  final DftNormalization[] norm;
  norm=DftNormalization.values();
  final TransformType[] type;
  type=TransformType.values();
  for (int i=0; i < norm.length; i++) {
    for (int j=0; j < type.length; j++) {
      final FastFourierTransformer fft;
      fft=new FastFourierTransformer(norm[i]);
      try {
        fft.transform(f,Math.PI,0.0,n,type[j]);
        Assert.fail(norm[i] + ", " + type[j]+ ": NumberIsTooLargeException was expected");
      }
 catch (      NumberIsTooLargeException e) {
      }
    }
  }
}
