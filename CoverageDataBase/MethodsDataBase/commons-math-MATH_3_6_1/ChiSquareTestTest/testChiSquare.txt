@Test public void testChiSquare(){
  long[] observed={10,9,11};
  double[] expected={10,10,10};
  Assert.assertEquals("chi-square statistic",0.2,testStatistic.chiSquare(expected,observed),10E-12);
  Assert.assertEquals("chi-square p-value",0.904837418036,testStatistic.chiSquareTest(expected,observed),1E-10);
  long[] observed1={500,623,72,70,31};
  double[] expected1={485,541,82,61,37};
  Assert.assertEquals("chi-square test statistic",9.023307936427388,testStatistic.chiSquare(expected1,observed1),1E-10);
  Assert.assertEquals("chi-square p-value",0.06051952647453607,testStatistic.chiSquareTest(expected1,observed1),1E-9);
  Assert.assertTrue("chi-square test reject",testStatistic.chiSquareTest(expected1,observed1,0.08));
  Assert.assertTrue("chi-square test accept",!testStatistic.chiSquareTest(expected1,observed1,0.05));
  try {
    testStatistic.chiSquareTest(expected1,observed1,95);
    Assert.fail("alpha out of range, OutOfRangeException expected");
  }
 catch (  OutOfRangeException ex) {
  }
  long[] tooShortObs={0};
  double[] tooShortEx={1};
  try {
    testStatistic.chiSquare(tooShortEx,tooShortObs);
    Assert.fail("arguments too short, DimensionMismatchException expected");
  }
 catch (  DimensionMismatchException ex) {
  }
  long[] unMatchedObs={0,1,2,3};
  double[] unMatchedEx={1,1,2};
  try {
    testStatistic.chiSquare(unMatchedEx,unMatchedObs);
    Assert.fail("arrays have different lengths, DimensionMismatchException expected");
  }
 catch (  DimensionMismatchException ex) {
  }
  expected[0]=0;
  try {
    testStatistic.chiSquareTest(expected,observed,.01);
    Assert.fail("bad expected count, NotStrictlyPositiveException expected");
  }
 catch (  NotStrictlyPositiveException ex) {
  }
  expected[0]=1;
  observed[0]=-1;
  try {
    testStatistic.chiSquareTest(expected,observed,.01);
    Assert.fail("bad expected count, NotPositiveException expected");
  }
 catch (  NotPositiveException ex) {
  }
}
