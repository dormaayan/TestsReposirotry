@Test public void testPremultiply(){
  RealMatrix m3=new Array2DRowRealMatrix(d3);
  RealMatrix m4=new Array2DRowRealMatrix(d4);
  RealMatrix m5=new Array2DRowRealMatrix(d5);
  TestUtils.assertEquals("m3*m4=m5",m4.preMultiply(m3),m5,entryTolerance);
  Array2DRowRealMatrix m=new Array2DRowRealMatrix(testData);
  Array2DRowRealMatrix mInv=new Array2DRowRealMatrix(testDataInv);
  Array2DRowRealMatrix identity=new Array2DRowRealMatrix(id);
  TestUtils.assertEquals("inverse multiply",m.preMultiply(mInv),identity,entryTolerance);
  TestUtils.assertEquals("inverse multiply",mInv.preMultiply(m),identity,entryTolerance);
  TestUtils.assertEquals("identity multiply",m.preMultiply(identity),m,entryTolerance);
  TestUtils.assertEquals("identity multiply",identity.preMultiply(mInv),mInv,entryTolerance);
  try {
    m.preMultiply(new Array2DRowRealMatrix(bigSingular));
    Assert.fail("Expecting illegalArgumentException");
  }
 catch (  MathIllegalArgumentException ex) {
  }
}
