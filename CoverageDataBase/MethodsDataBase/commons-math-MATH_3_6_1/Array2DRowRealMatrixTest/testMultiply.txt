/** 
 * test multiply 
 */
@Test public void testMultiply(){
  Array2DRowRealMatrix m=new Array2DRowRealMatrix(testData);
  Array2DRowRealMatrix mInv=new Array2DRowRealMatrix(testDataInv);
  Array2DRowRealMatrix identity=new Array2DRowRealMatrix(id);
  Array2DRowRealMatrix m2=new Array2DRowRealMatrix(testData2);
  TestUtils.assertEquals("inverse multiply",m.multiply(mInv),identity,entryTolerance);
  TestUtils.assertEquals("inverse multiply",mInv.multiply(m),identity,entryTolerance);
  TestUtils.assertEquals("identity multiply",m.multiply(identity),m,entryTolerance);
  TestUtils.assertEquals("identity multiply",identity.multiply(mInv),mInv,entryTolerance);
  TestUtils.assertEquals("identity multiply",m2.multiply(identity),m2,entryTolerance);
  try {
    m.multiply(new Array2DRowRealMatrix(bigSingular));
    Assert.fail("Expecting illegalArgumentException");
  }
 catch (  MathIllegalArgumentException ex) {
  }
}
