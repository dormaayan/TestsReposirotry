/** 
 * Test hat matrix computation
 */
@Test public void testHat(){
  double[] design=new double[]{11.14,.499,11.1,12.74,.558,8.9,13.13,.604,8.8,11.51,.441,8.9,12.38,.550,8.8,12.60,.528,9.9,11.13,.418,10.7,11.7,.480,10.5,11.02,.406,10.5,11.41,.467,10.7};
  int nobs=10;
  int nvars=2;
  OLSMultipleLinearRegression model=new OLSMultipleLinearRegression();
  model.newSampleData(design,nobs,nvars);
  RealMatrix hat=model.calculateHat();
  double[] referenceData=new double[]{.418,-.002,.079,-.274,-.046,.181,.128,.222,.050,.242,.242,.292,.136,.243,.128,-.041,.033,-.035,.004,.417,-.019,.273,.187,-.126,.044,-.153,.004,.604,.197,-.038,.168,-.022,.275,-.028,.252,.111,-.030,.019,-.010,-.010,.148,.042,.117,.012,.111,.262,.145,.277,.174,.154,.120,.168,.315,.148,.187};
  int k=0;
  for (int i=0; i < 10; i++) {
    for (int j=i; j < 10; j++) {
      Assert.assertEquals(referenceData[k],hat.getEntry(i,j),10e-3);
      Assert.assertEquals(hat.getEntry(i,j),hat.getEntry(j,i),10e-12);
      k++;
    }
  }
  double[] residuals=model.estimateResiduals();
  RealMatrix I=MatrixUtils.createRealIdentityMatrix(10);
  double[] hatResiduals=I.subtract(hat).operate(model.getY()).toArray();
  TestUtils.assertEquals(residuals,hatResiduals,10e-12);
}
