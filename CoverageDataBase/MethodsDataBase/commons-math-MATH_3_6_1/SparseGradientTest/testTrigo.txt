@Test public void testTrigo(){
  double epsilon=2.0e-12;
  for (double x=0.1; x < 1.2; x+=0.1) {
    SparseGradient sgX=SparseGradient.createVariable(0,x);
    for (double y=0.1; y < 1.2; y+=0.1) {
      SparseGradient sgY=SparseGradient.createVariable(1,y);
      for (double z=0.1; z < 1.2; z+=0.1) {
        SparseGradient sgZ=SparseGradient.createVariable(2,z);
        SparseGradient f=sgX.divide(sgY.cos().add(sgZ.tan())).sin();
        double a=FastMath.cos(y) + FastMath.tan(z);
        double f0=FastMath.sin(x / a);
        Assert.assertEquals(f0,f.getValue(),FastMath.abs(epsilon * f0));
        double dfdx=FastMath.cos(x / a) / a;
        Assert.assertEquals(dfdx,f.getDerivative(0),FastMath.abs(epsilon * dfdx));
        double dfdy=x * FastMath.sin(y) * dfdx / a;
        Assert.assertEquals(dfdy,f.getDerivative(1),FastMath.abs(epsilon * dfdy));
        double cz=FastMath.cos(z);
        double cz2=cz * cz;
        double dfdz=-x * dfdx / (a * cz2);
        Assert.assertEquals(dfdz,f.getDerivative(2),FastMath.abs(epsilon * dfdz));
      }
    }
  }
}
