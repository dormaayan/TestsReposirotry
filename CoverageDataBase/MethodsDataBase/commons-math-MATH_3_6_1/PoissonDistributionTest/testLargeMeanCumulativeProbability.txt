@Test public void testLargeMeanCumulativeProbability(){
  double mean=1.0;
  while (mean <= 10000000.0) {
    PoissonDistribution dist=new PoissonDistribution(mean);
    double x=mean * 2.0;
    double dx=x / 10.0;
    double p=Double.NaN;
    double sigma=FastMath.sqrt(mean);
    while (x >= 0) {
      try {
        p=dist.cumulativeProbability((int)x);
        Assert.assertFalse("NaN cumulative probability returned for mean = " + mean + " x = "+ x,Double.isNaN(p));
        if (x > mean - 2 * sigma) {
          Assert.assertTrue("Zero cum probaility returned for mean = " + mean + " x = "+ x,p > 0);
        }
      }
 catch (      Exception ex) {
        Assert.fail("mean of " + mean + " and x of "+ x+ " caused "+ ex.getMessage());
      }
      x-=dx;
    }
    mean*=10.0;
  }
}
