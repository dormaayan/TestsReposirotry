/** 
 * Verify that aggregating over a partition gives the same results as direct computation. 1) Randomly generate a dataset of 10-100 values from [-100, 100] 2) Divide the dataset it into 2-5 partitions 3) Create an AggregateSummaryStatistic and ContributingStatistics for each partition 4) Compare results from the AggregateSummaryStatistic with values returned by a single SummaryStatistics instance that is provided the full dataset
 */
@Test public void testAggregationConsistency(){
  double[] totalSample=generateSample();
  double[][] subSamples=generatePartition(totalSample);
  int nSamples=subSamples.length;
  AggregateSummaryStatistics aggregate=new AggregateSummaryStatistics();
  SummaryStatistics totalStats=new SummaryStatistics();
  SummaryStatistics componentStats[]=new SummaryStatistics[nSamples];
  for (int i=0; i < nSamples; i++) {
    componentStats[i]=aggregate.createContributingStatistics();
    for (int j=0; j < subSamples[i].length; j++) {
      componentStats[i].addValue(subSamples[i][j]);
    }
  }
  for (int i=0; i < totalSample.length; i++) {
    totalStats.addValue(totalSample[i]);
  }
  Assert.assertEquals(totalStats.getSummary(),aggregate.getSummary());
}
