/** 
 * Similar to  {@link #testAggregate()} but operating on{@link StatisticalSummary} instead.
 */
@Test public void testAggregateStatisticalSummary(){
  double[] totalSample=generateSample();
  double[][] subSamples=generatePartition(totalSample);
  int nSamples=subSamples.length;
  SummaryStatistics totalStats=new SummaryStatistics();
  for (int i=0; i < totalSample.length; i++) {
    totalStats.addValue(totalSample[i]);
  }
  SummaryStatistics[] subSampleStats=new SummaryStatistics[nSamples];
  for (int i=0; i < nSamples; i++) {
    subSampleStats[i]=new SummaryStatistics();
  }
  Collection<StatisticalSummary> aggregate=new ArrayList<StatisticalSummary>();
  for (int i=0; i < nSamples; i++) {
    for (int j=0; j < subSamples[i].length; j++) {
      subSampleStats[i].addValue(subSamples[i][j]);
    }
    aggregate.add(subSampleStats[i].getSummary());
  }
  StatisticalSummary aggregatedStats=AggregateSummaryStatistics.aggregate(aggregate);
  assertEquals(totalStats.getSummary(),aggregatedStats,10E-12);
}
