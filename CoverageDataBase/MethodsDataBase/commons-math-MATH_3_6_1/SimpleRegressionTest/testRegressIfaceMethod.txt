@Test public void testRegressIfaceMethod(){
  final SimpleRegression regression=new SimpleRegression(true);
  final UpdatingMultipleLinearRegression iface=regression;
  final SimpleRegression regressionNoint=new SimpleRegression(false);
  final SimpleRegression regressionIntOnly=new SimpleRegression(false);
  for (int i=0; i < data.length; i++) {
    iface.addObservation(new double[]{data[i][1]},data[i][0]);
    regressionNoint.addData(data[i][1],data[i][0]);
    regressionIntOnly.addData(1.0,data[i][0]);
  }
  final RegressionResults fullReg=iface.regress();
  Assert.assertNotNull(fullReg);
  Assert.assertEquals("intercept",regression.getIntercept(),fullReg.getParameterEstimate(0),1.0e-16);
  Assert.assertEquals("intercept std err",regression.getInterceptStdErr(),fullReg.getStdErrorOfEstimate(0),1.0E-16);
  Assert.assertEquals("slope",regression.getSlope(),fullReg.getParameterEstimate(1),1.0e-16);
  Assert.assertEquals("slope std err",regression.getSlopeStdErr(),fullReg.getStdErrorOfEstimate(1),1.0E-16);
  Assert.assertEquals("number of observations",regression.getN(),fullReg.getN());
  Assert.assertEquals("r-square",regression.getRSquare(),fullReg.getRSquared(),1.0E-16);
  Assert.assertEquals("SSR",regression.getRegressionSumSquares(),fullReg.getRegressionSumSquares(),1.0E-16);
  Assert.assertEquals("MSE",regression.getMeanSquareError(),fullReg.getMeanSquareError(),1.0E-16);
  Assert.assertEquals("SSE",regression.getSumSquaredErrors(),fullReg.getErrorSumSquares(),1.0E-16);
  final RegressionResults noInt=iface.regress(new int[]{1});
  Assert.assertNotNull(noInt);
  Assert.assertEquals("slope",regressionNoint.getSlope(),noInt.getParameterEstimate(0),1.0e-12);
  Assert.assertEquals("slope std err",regressionNoint.getSlopeStdErr(),noInt.getStdErrorOfEstimate(0),1.0E-16);
  Assert.assertEquals("number of observations",regressionNoint.getN(),noInt.getN());
  Assert.assertEquals("r-square",regressionNoint.getRSquare(),noInt.getRSquared(),1.0E-16);
  Assert.assertEquals("SSR",regressionNoint.getRegressionSumSquares(),noInt.getRegressionSumSquares(),1.0E-8);
  Assert.assertEquals("MSE",regressionNoint.getMeanSquareError(),noInt.getMeanSquareError(),1.0E-16);
  Assert.assertEquals("SSE",regressionNoint.getSumSquaredErrors(),noInt.getErrorSumSquares(),1.0E-16);
  final RegressionResults onlyInt=iface.regress(new int[]{0});
  Assert.assertNotNull(onlyInt);
  Assert.assertEquals("slope",regressionIntOnly.getSlope(),onlyInt.getParameterEstimate(0),1.0e-12);
  Assert.assertEquals("slope std err",regressionIntOnly.getSlopeStdErr(),onlyInt.getStdErrorOfEstimate(0),1.0E-12);
  Assert.assertEquals("number of observations",regressionIntOnly.getN(),onlyInt.getN());
  Assert.assertEquals("r-square",regressionIntOnly.getRSquare(),onlyInt.getRSquared(),1.0E-14);
  Assert.assertEquals("SSE",regressionIntOnly.getSumSquaredErrors(),onlyInt.getErrorSumSquares(),1.0E-8);
  Assert.assertEquals("SSR",regressionIntOnly.getRegressionSumSquares(),onlyInt.getRegressionSumSquares(),1.0E-8);
  Assert.assertEquals("MSE",regressionIntOnly.getMeanSquareError(),onlyInt.getMeanSquareError(),1.0E-8);
}
