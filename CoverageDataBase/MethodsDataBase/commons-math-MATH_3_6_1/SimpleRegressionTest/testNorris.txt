@Test public void testNorris(){
  SimpleRegression regression=new SimpleRegression();
  for (int i=0; i < data.length; i++) {
    regression.addData(data[i][1],data[i][0]);
  }
  Assert.assertEquals("slope",1.00211681802045,regression.getSlope(),10E-12);
  Assert.assertEquals("slope std err",0.429796848199937E-03,regression.getSlopeStdErr(),10E-12);
  Assert.assertEquals("number of observations",36,regression.getN());
  Assert.assertEquals("intercept",-0.262323073774029,regression.getIntercept(),10E-12);
  Assert.assertEquals("std err intercept",0.232818234301152,regression.getInterceptStdErr(),10E-12);
  Assert.assertEquals("r-square",0.999993745883712,regression.getRSquare(),10E-12);
  Assert.assertEquals("SSR",4255954.13232369,regression.getRegressionSumSquares(),10E-9);
  Assert.assertEquals("MSE",0.782864662630069,regression.getMeanSquareError(),10E-10);
  Assert.assertEquals("SSE",26.6173985294224,regression.getSumSquaredErrors(),10E-9);
  Assert.assertEquals("predict(0)",-0.262323073774029,regression.predict(0),10E-12);
  Assert.assertEquals("predict(1)",1.00211681802045 - 0.262323073774029,regression.predict(1),10E-12);
}
