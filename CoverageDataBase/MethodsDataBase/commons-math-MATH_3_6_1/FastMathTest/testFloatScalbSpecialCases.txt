@Test public void testFloatScalbSpecialCases(){
  Assert.assertEquals(0f,FastMath.scalb(Float.MIN_VALUE,-30),0F);
  Assert.assertEquals(2 * Float.MIN_VALUE,FastMath.scalb(Float.MIN_VALUE,1),0F);
  Assert.assertEquals(7.555786e22f,FastMath.scalb(Float.MAX_VALUE,-52),0F);
  Assert.assertEquals(1.7014118e38f,FastMath.scalb(Float.MIN_VALUE,276),0F);
  Assert.assertEquals(Float.POSITIVE_INFINITY,FastMath.scalb(Float.MIN_VALUE,277),0F);
  Assert.assertEquals(5.8774718e-39f,FastMath.scalb(1.1754944e-38f,-1),0F);
  Assert.assertEquals(2 * Float.MIN_VALUE,FastMath.scalb(Float.MAX_VALUE,-276),0F);
  Assert.assertEquals(Float.MIN_VALUE,FastMath.scalb(Float.MAX_VALUE,-277),0F);
  Assert.assertEquals(0,FastMath.scalb(Float.MAX_VALUE,-278),0F);
  Assert.assertEquals(Float.POSITIVE_INFINITY,FastMath.scalb(Float.POSITIVE_INFINITY,-1000000),0F);
  Assert.assertEquals(-3.13994498e38f,FastMath.scalb(-1.1e-7f,151),0F);
  Assert.assertEquals(Float.NEGATIVE_INFINITY,FastMath.scalb(-1.1e-7f,152),0F);
  Assert.assertEquals(Float.POSITIVE_INFINITY,FastMath.scalb(3.4028235E38f,2147483647),0F);
  Assert.assertEquals(Float.NEGATIVE_INFINITY,FastMath.scalb(-3.4028235E38f,2147483647),0F);
}
