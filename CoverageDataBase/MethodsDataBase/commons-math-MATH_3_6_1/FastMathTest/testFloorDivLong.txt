@Test public void testFloorDivLong(){
  Assert.assertEquals(+1l,FastMath.floorDiv(+4l,+3l));
  Assert.assertEquals(-2l,FastMath.floorDiv(-4l,+3l));
  Assert.assertEquals(-2l,FastMath.floorDiv(+4l,-3l));
  Assert.assertEquals(+1l,FastMath.floorDiv(-4l,-3l));
  try {
    FastMath.floorDiv(1l,0l);
    Assert.fail("an exception should have been thrown");
  }
 catch (  MathArithmeticException mae) {
  }
  for (long a=-100l; a <= 100l; ++a) {
    for (long b=-100l; b <= 100l; ++b) {
      if (b != 0) {
        Assert.assertEquals(poorManFloorDiv(a,b),FastMath.floorDiv(a,b));
      }
    }
  }
}
