@Test public void testBackward() throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException {
  TestProblem5 pb=new TestProblem5();
  double minStep=0;
  double maxStep=pb.getFinalTime() - pb.getInitialTime();
  double scalAbsoluteTolerance=1.0e-8;
  double scalRelativeTolerance=0.01 * scalAbsoluteTolerance;
  FirstOrderIntegrator integ=new DormandPrince853Integrator(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
  TestProblemHandler handler=new TestProblemHandler(pb,integ);
  integ.addStepHandler(handler);
  integ.integrate(pb,pb.getInitialTime(),pb.getInitialState(),pb.getFinalTime(),new double[pb.getDimension()]);
  Assert.assertTrue(handler.getLastError() < 1.1e-7);
  Assert.assertTrue(handler.getMaximalValueError() < 1.1e-7);
  Assert.assertEquals(0,handler.getMaximalTimeError(),1.0e-12);
  Assert.assertEquals("Dormand-Prince 8 (5, 3)",integ.getName());
}
