@Test public void testSubtract(){
  Decimal64 expected, actual;
  expected=new Decimal64(X - Y);
  actual=PLUS_X.subtract(PLUS_Y);
  Assert.assertEquals(expected,actual);
  expected=new Decimal64(X - (-Y));
  actual=PLUS_X.subtract(MINUS_Y);
  Assert.assertEquals(expected,actual);
  expected=new Decimal64((-X) - Y);
  actual=MINUS_X.subtract(PLUS_Y);
  Assert.assertEquals(expected,actual);
  expected=new Decimal64((-X) - (-Y));
  actual=MINUS_X.subtract(MINUS_Y);
  Assert.assertEquals(expected,actual);
  expected=Decimal64.NEGATIVE_INFINITY;
  actual=PLUS_X.subtract(Decimal64.POSITIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=MINUS_X.subtract(Decimal64.POSITIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NEGATIVE_INFINITY.subtract(Decimal64.POSITIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  expected=Decimal64.POSITIVE_INFINITY;
  actual=PLUS_X.subtract(Decimal64.NEGATIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=MINUS_X.subtract(Decimal64.NEGATIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.POSITIVE_INFINITY.subtract(Decimal64.NEGATIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  expected=Decimal64.NAN;
  actual=Decimal64.POSITIVE_INFINITY.subtract(Decimal64.POSITIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NEGATIVE_INFINITY.subtract(Decimal64.NEGATIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=PLUS_X.subtract(Decimal64.NAN);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NAN.subtract(PLUS_X);
  Assert.assertEquals(expected,actual);
  actual=MINUS_X.subtract(Decimal64.NAN);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NAN.subtract(MINUS_X);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.POSITIVE_INFINITY.subtract(Decimal64.NAN);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NAN.subtract(Decimal64.POSITIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NEGATIVE_INFINITY.subtract(Decimal64.NAN);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NAN.subtract(Decimal64.NEGATIVE_INFINITY);
  Assert.assertEquals(expected,actual);
  actual=Decimal64.NAN.subtract(Decimal64.NAN);
  Assert.assertEquals(expected,actual);
}
