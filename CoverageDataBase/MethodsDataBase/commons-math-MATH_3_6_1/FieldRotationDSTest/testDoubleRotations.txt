@Test public void testDoubleRotations() throws MathIllegalArgumentException {
  Well1024a random=new Well1024a(0x180b41cfeeffaf67l);
  UnitSphereRandomVectorGenerator g=new UnitSphereRandomVectorGenerator(3,random);
  for (int i=0; i < 10; ++i) {
    double[] unit1=g.nextVector();
    Rotation r1=new Rotation(new Vector3D(unit1[0],unit1[1],unit1[2]),random.nextDouble(),RotationConvention.VECTOR_OPERATOR);
    FieldRotation<DerivativeStructure> r1Prime=new FieldRotation<DerivativeStructure>(new DerivativeStructure(4,1,0,r1.getQ0()),new DerivativeStructure(4,1,1,r1.getQ1()),new DerivativeStructure(4,1,2,r1.getQ2()),new DerivativeStructure(4,1,3,r1.getQ3()),false);
    double[] unit2=g.nextVector();
    FieldRotation<DerivativeStructure> r2=new FieldRotation<DerivativeStructure>(createVector(unit2[0],unit2[1],unit2[2]),createAngle(random.nextDouble()),RotationConvention.VECTOR_OPERATOR);
    FieldRotation<DerivativeStructure> rA=FieldRotation.applyTo(r1,r2);
    FieldRotation<DerivativeStructure> rB=r1Prime.compose(r2,RotationConvention.VECTOR_OPERATOR);
    FieldRotation<DerivativeStructure> rC=FieldRotation.applyInverseTo(r1,r2);
    FieldRotation<DerivativeStructure> rD=r1Prime.composeInverse(r2,RotationConvention.VECTOR_OPERATOR);
    for (double x=-0.9; x < 0.9; x+=0.2) {
      for (double y=-0.9; y < 0.9; y+=0.2) {
        for (double z=-0.9; z < 0.9; z+=0.2) {
          FieldVector3D<DerivativeStructure> uds=createVector(x,y,z);
          checkVector(r1Prime.applyTo(uds),FieldRotation.applyTo(r1,uds));
          checkVector(r1Prime.applyInverseTo(uds),FieldRotation.applyInverseTo(r1,uds));
          checkVector(rA.applyTo(uds),rB.applyTo(uds));
          checkVector(rA.applyInverseTo(uds),rB.applyInverseTo(uds));
          checkVector(rC.applyTo(uds),rD.applyTo(uds));
          checkVector(rC.applyInverseTo(uds),rD.applyInverseTo(uds));
        }
      }
    }
  }
}
