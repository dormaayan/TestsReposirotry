@Test public void testDifference(){
  ArcsSet a=new ArcsSet(1.0,6.0,1.0e-10);
  List<Arc> aList=a.asList();
  Assert.assertEquals(1,aList.size());
  Assert.assertEquals(1.0,aList.get(0).getInf(),1.0e-10);
  Assert.assertEquals(6.0,aList.get(0).getSup(),1.0e-10);
  ArcsSet b=new ArcsSet(3.0,5.0,1.0e-10);
  List<Arc> bList=b.asList();
  Assert.assertEquals(1,bList.size());
  Assert.assertEquals(3.0,bList.get(0).getInf(),1.0e-10);
  Assert.assertEquals(5.0,bList.get(0).getSup(),1.0e-10);
  ArcsSet aMb=(ArcsSet)new RegionFactory<Sphere1D>().difference(a,b);
  for (int k=-2; k < 3; ++k) {
    Assert.assertEquals(Location.OUTSIDE,aMb.checkPoint(new S1Point(0.0 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.OUTSIDE,aMb.checkPoint(new S1Point(0.9 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.BOUNDARY,aMb.checkPoint(new S1Point(1.0 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.INSIDE,aMb.checkPoint(new S1Point(1.1 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.INSIDE,aMb.checkPoint(new S1Point(2.9 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.BOUNDARY,aMb.checkPoint(new S1Point(3.0 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.OUTSIDE,aMb.checkPoint(new S1Point(3.1 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.OUTSIDE,aMb.checkPoint(new S1Point(4.9 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.BOUNDARY,aMb.checkPoint(new S1Point(5.0 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.INSIDE,aMb.checkPoint(new S1Point(5.1 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.INSIDE,aMb.checkPoint(new S1Point(5.9 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.BOUNDARY,aMb.checkPoint(new S1Point(6.0 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.OUTSIDE,aMb.checkPoint(new S1Point(6.1 + k * MathUtils.TWO_PI)));
    Assert.assertEquals(Location.OUTSIDE,aMb.checkPoint(new S1Point(6.2 + k * MathUtils.TWO_PI)));
  }
  List<Arc> aMbList=aMb.asList();
  Assert.assertEquals(2,aMbList.size());
  Assert.assertEquals(1.0,aMbList.get(0).getInf(),1.0e-10);
  Assert.assertEquals(3.0,aMbList.get(0).getSup(),1.0e-10);
  Assert.assertEquals(5.0,aMbList.get(1).getInf(),1.0e-10);
  Assert.assertEquals(6.0,aMbList.get(1).getSup(),1.0e-10);
}
