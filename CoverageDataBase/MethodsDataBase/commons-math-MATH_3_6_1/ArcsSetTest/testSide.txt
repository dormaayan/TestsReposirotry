@Test public void testSide(){
  ArcsSet set=(ArcsSet)new RegionFactory<Sphere1D>().difference(new ArcsSet(1.0,6.0,1.0e-10),new ArcsSet(3.0,5.0,1.0e-10));
  for (int k=-2; k < 3; ++k) {
    Assert.assertEquals(Side.MINUS,set.split(new Arc(0.5 + k * MathUtils.TWO_PI,6.1 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
    Assert.assertEquals(Side.PLUS,set.split(new Arc(0.5 + k * MathUtils.TWO_PI,0.8 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
    Assert.assertEquals(Side.PLUS,set.split(new Arc(6.2 + k * MathUtils.TWO_PI,6.3 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
    Assert.assertEquals(Side.PLUS,set.split(new Arc(3.5 + k * MathUtils.TWO_PI,4.5 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
    Assert.assertEquals(Side.BOTH,set.split(new Arc(2.9 + k * MathUtils.TWO_PI,4.5 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
    Assert.assertEquals(Side.BOTH,set.split(new Arc(0.5 + k * MathUtils.TWO_PI,1.2 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
    Assert.assertEquals(Side.BOTH,set.split(new Arc(0.5 + k * MathUtils.TWO_PI,5.9 + k * MathUtils.TWO_PI,set.getTolerance())).getSide());
  }
}
