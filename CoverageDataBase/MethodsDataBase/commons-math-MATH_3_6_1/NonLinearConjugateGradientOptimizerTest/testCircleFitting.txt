@Test public void testCircleFitting(){
  CircleScalar problem=new CircleScalar();
  problem.addPoint(30.0,68.0);
  problem.addPoint(50.0,-6.0);
  problem.addPoint(110.0,-20.0);
  problem.addPoint(35.0,15.0);
  problem.addPoint(45.0,97.0);
  NonLinearConjugateGradientOptimizer optimizer=new NonLinearConjugateGradientOptimizer(NonLinearConjugateGradientOptimizer.Formula.POLAK_RIBIERE,new SimpleValueChecker(1e-30,1e-30),1e-15,1e-13,1);
  PointValuePair optimum=optimizer.optimize(new MaxEval(100),problem.getObjectiveFunction(),problem.getObjectiveFunctionGradient(),GoalType.MINIMIZE,new InitialGuess(new double[]{98.680,47.345}));
  Vector2D center=new Vector2D(optimum.getPointRef()[0],optimum.getPointRef()[1]);
  Assert.assertEquals(69.960161753,problem.getRadius(center),1.0e-8);
  Assert.assertEquals(96.075902096,center.getX(),1.0e-7);
  Assert.assertEquals(48.135167894,center.getY(),1.0e-6);
}
