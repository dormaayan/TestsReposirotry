@Test public void testNoDependency(){
  LinearProblem problem=new LinearProblem(new double[][]{{2,0,0,0,0,0},{0,2,0,0,0,0},{0,0,2,0,0,0},{0,0,0,2,0,0},{0,0,0,0,2,0},{0,0,0,0,0,2}},new double[]{0.0,1.1,2.2,3.3,4.4,5.5});
  NonLinearConjugateGradientOptimizer optimizer=new NonLinearConjugateGradientOptimizer(NonLinearConjugateGradientOptimizer.Formula.POLAK_RIBIERE,new SimpleValueChecker(1e-6,1e-6),1e-3,1e-3,1);
  PointValuePair optimum=optimizer.optimize(new MaxEval(100),problem.getObjectiveFunction(),problem.getObjectiveFunctionGradient(),GoalType.MINIMIZE,new InitialGuess(new double[]{0,0,0,0,0,0}));
  for (int i=0; i < problem.target.length; ++i) {
    Assert.assertEquals(0.55 * i,optimum.getPoint()[i],1.0e-10);
  }
}
