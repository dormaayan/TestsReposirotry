@Test public void testColumnsPermutation(){
  LinearProblem problem=new LinearProblem(new double[][]{{1.0,-1.0},{0.0,2.0},{1.0,-2.0}},new double[]{4.0,6.0,1.0});
  NonLinearConjugateGradientOptimizer optimizer=new NonLinearConjugateGradientOptimizer(NonLinearConjugateGradientOptimizer.Formula.POLAK_RIBIERE,new SimpleValueChecker(1e-6,1e-6),1e-3,1e-3,1);
  PointValuePair optimum=optimizer.optimize(new MaxEval(100),problem.getObjectiveFunction(),problem.getObjectiveFunctionGradient(),GoalType.MINIMIZE,new InitialGuess(new double[]{0,0}));
  Assert.assertEquals(7.0,optimum.getPoint()[0],1.0e-10);
  Assert.assertEquals(3.0,optimum.getPoint()[1],1.0e-10);
  Assert.assertEquals(0.0,optimum.getValue(),1.0e-10);
}
