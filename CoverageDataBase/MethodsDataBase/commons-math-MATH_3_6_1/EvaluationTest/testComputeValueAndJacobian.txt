@Test public void testComputeValueAndJacobian(){
  final RealVector point=new ArrayRealVector(new double[]{1,2});
  Evaluation evaluation=new LeastSquaresBuilder().weight(new DiagonalMatrix(new double[]{16,4})).model(new MultivariateJacobianFunction(){
    public Pair<RealVector,RealMatrix> value(    RealVector actualPoint){
      Assert.assertArrayEquals(point.toArray(),actualPoint.toArray(),Precision.EPSILON);
      return new Pair<RealVector,RealMatrix>(new ArrayRealVector(new double[]{3,4}),MatrixUtils.createRealMatrix(new double[][]{{5,6},{7,8}}));
    }
  }
).target(new double[2]).build().evaluate(point);
  RealVector residuals=evaluation.getResiduals();
  RealMatrix jacobian=evaluation.getJacobian();
  Assert.assertArrayEquals(evaluation.getPoint().toArray(),point.toArray(),0);
  Assert.assertArrayEquals(new double[]{-12,-8},residuals.toArray(),Precision.EPSILON);
  TestUtils.assertEquals("jacobian",jacobian,MatrixUtils.createRealMatrix(new double[][]{{20,24},{14,16}}),Precision.EPSILON);
}
