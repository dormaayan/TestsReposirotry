/** 
 * Test of solver for the quintic function.
 */
@Test public void testQuinticFunction(){
  UnivariateFunction f=new QuinticFunction();
  UnivariateSolver solver=new RiddersSolver();
  double min, max, expected, result, tolerance;
  min=-0.4;
  max=0.2;
  expected=0.0;
  tolerance=FastMath.max(solver.getAbsoluteAccuracy(),FastMath.abs(expected * solver.getRelativeAccuracy()));
  result=solver.solve(100,f,min,max);
  Assert.assertEquals(expected,result,tolerance);
  min=0.75;
  max=1.5;
  expected=1.0;
  tolerance=FastMath.max(solver.getAbsoluteAccuracy(),FastMath.abs(expected * solver.getRelativeAccuracy()));
  result=solver.solve(100,f,min,max);
  Assert.assertEquals(expected,result,tolerance);
  min=-0.9;
  max=-0.2;
  expected=-0.5;
  tolerance=FastMath.max(solver.getAbsoluteAccuracy(),FastMath.abs(expected * solver.getRelativeAccuracy()));
  result=solver.solve(100,f,min,max);
  Assert.assertEquals(expected,result,tolerance);
}
