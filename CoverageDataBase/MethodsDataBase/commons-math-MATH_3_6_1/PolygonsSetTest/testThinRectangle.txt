@Test public void testThinRectangle(){
  RegionFactory<Euclidean2D> factory=new RegionFactory<Euclidean2D>();
  Vector2D pA=new Vector2D(0.0,1.0);
  Vector2D pB=new Vector2D(0.0,0.0);
  Vector2D pC=new Vector2D(1.0 / 64.0,0.0);
  Vector2D pD=new Vector2D(1.0 / 64.0,1.0);
  Hyperplane<Euclidean2D>[] h1=new Line[]{new Line(pA,pB,1.0 / 256),new Line(pB,pC,1.0 / 256),new Line(pC,pD,1.0 / 256),new Line(pD,pA,1.0 / 256)};
  Region<Euclidean2D> accuratePolygon=factory.buildConvex(h1);
  Assert.assertEquals(1.0 / 64.0,accuratePolygon.getSize(),1.0e-10);
  Assert.assertTrue(Double.isInfinite(new RegionFactory<Euclidean2D>().getComplement(accuratePolygon).getSize()));
  Assert.assertEquals(2 * (1.0 + 1.0 / 64.0),accuratePolygon.getBoundarySize(),1.0e-10);
  Hyperplane<Euclidean2D>[] h2=new Line[]{new Line(pA,pB,1.0 / 16),new Line(pB,pC,1.0 / 16),new Line(pC,pD,1.0 / 16),new Line(pD,pA,1.0 / 16)};
  Region<Euclidean2D> degeneratedPolygon=factory.buildConvex(h2);
  Assert.assertEquals(0.0,degeneratedPolygon.getSize(),1.0e-10);
  Assert.assertTrue(degeneratedPolygon.isEmpty());
}
