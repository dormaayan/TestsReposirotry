@Test public void testBoundarySimplification(){
  PolygonsSet square=new PolygonsSet(1.0e-10,new Vector2D(0,0),new Vector2D(1,0),new Vector2D(1,1),new Vector2D(0,1));
  Vector2D[][] squareBoundary=square.getVertices();
  Assert.assertEquals(1,squareBoundary.length);
  Assert.assertEquals(4,squareBoundary[0].length);
  Counter squareCount=new Counter();
  squareCount.count(square);
  Assert.assertEquals(4,squareCount.getInternalNodes());
  Assert.assertEquals(5,squareCount.getLeafNodes());
  SubLine cut=new Line(new Vector2D(0.5,0.5),0.0,square.getTolerance()).wholeHyperplane();
  PolygonsSet splitSquare=new PolygonsSet(square.getTree(false).split(cut),square.getTolerance());
  Counter splitSquareCount=new Counter();
  splitSquareCount.count(splitSquare);
  Assert.assertEquals(squareCount.getInternalNodes() + 3,splitSquareCount.getInternalNodes());
  Assert.assertEquals(squareCount.getLeafNodes() + 3,splitSquareCount.getLeafNodes());
  Vector2D[][] splitBoundary=splitSquare.getVertices();
  Assert.assertEquals(1,splitBoundary.length);
  Assert.assertEquals(4,splitBoundary[0].length);
}
