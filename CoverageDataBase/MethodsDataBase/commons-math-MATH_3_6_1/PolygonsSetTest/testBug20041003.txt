@Test public void testBug20041003(){
  Line[] l={new Line(new Vector2D(0.0,0.625000007541172),new Vector2D(1.0,0.625000007541172),1.0e-10),new Line(new Vector2D(-0.19204433621902645,0.0),new Vector2D(-0.19204433621902645,1.0),1.0e-10),new Line(new Vector2D(-0.40303524786887,0.4248364535319128),new Vector2D(-1.12851149797877,-0.2634107480798909),1.0e-10),new Line(new Vector2D(0.0,2.0),new Vector2D(1.0,2.0),1.0e-10)};
  BSPTree<Euclidean2D> node1=new BSPTree<Euclidean2D>(new SubLine(l[0],new IntervalsSet(intersectionAbscissa(l[0],l[1]),intersectionAbscissa(l[0],l[2]),1.0e-10)),new BSPTree<Euclidean2D>(Boolean.TRUE),new BSPTree<Euclidean2D>(Boolean.FALSE),null);
  BSPTree<Euclidean2D> node2=new BSPTree<Euclidean2D>(new SubLine(l[1],new IntervalsSet(intersectionAbscissa(l[1],l[2]),intersectionAbscissa(l[1],l[3]),1.0e-10)),node1,new BSPTree<Euclidean2D>(Boolean.FALSE),null);
  BSPTree<Euclidean2D> node3=new BSPTree<Euclidean2D>(new SubLine(l[2],new IntervalsSet(intersectionAbscissa(l[2],l[3]),Double.POSITIVE_INFINITY,1.0e-10)),node2,new BSPTree<Euclidean2D>(Boolean.FALSE),null);
  BSPTree<Euclidean2D> node4=new BSPTree<Euclidean2D>(l[3].wholeHyperplane(),node3,new BSPTree<Euclidean2D>(Boolean.FALSE),null);
  PolygonsSet set=new PolygonsSet(node4,1.0e-10);
  Assert.assertEquals(0,set.getVertices().length);
}
