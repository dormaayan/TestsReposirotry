/** 
 * Test of transformer for the ad hoc data.
 */
@Test public void testAdHocData(){
  FastSineTransformer transformer;
  transformer=new FastSineTransformer(DstNormalization.STANDARD_DST_I);
  double result[], tolerance=1E-12;
  double x[]={0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0};
  double y[]={0.0,20.1093579685034,-9.65685424949238,5.98642305066196,-4.0,2.67271455167720,-1.65685424949238,0.795649469518633};
  result=transformer.transform(x,TransformType.FORWARD);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(y[i],result[i],tolerance);
  }
  result=transformer.transform(y,TransformType.INVERSE);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(x[i],result[i],tolerance);
  }
  TransformUtils.scaleArray(x,FastMath.sqrt(x.length / 2.0));
  transformer=new FastSineTransformer(DstNormalization.ORTHOGONAL_DST_I);
  result=transformer.transform(y,TransformType.FORWARD);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(x[i],result[i],tolerance);
  }
  result=transformer.transform(x,TransformType.INVERSE);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(y[i],result[i],tolerance);
  }
}
