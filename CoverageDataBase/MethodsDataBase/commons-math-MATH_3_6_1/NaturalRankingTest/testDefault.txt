@Test public void testDefault(){
  NaturalRanking ranking=new NaturalRanking();
  double[] ranks;
  try {
    ranks=ranking.rank(exampleData);
    Assert.fail("expected NotANumberException due to NaNStrategy.FAILED");
  }
 catch (  NotANumberException e) {
  }
  ranks=ranking.rank(tiesFirst);
  double[] correctRanks=new double[]{1.5,1.5,4,3,5};
  TestUtils.assertEquals(correctRanks,ranks,0d);
  ranks=ranking.rank(tiesLast);
  correctRanks=new double[]{3.5,3.5,2,1};
  TestUtils.assertEquals(correctRanks,ranks,0d);
  try {
    ranks=ranking.rank(multipleNaNs);
    Assert.fail("expected NotANumberException due to NaNStrategy.FAILED");
  }
 catch (  NotANumberException e) {
  }
  ranks=ranking.rank(multipleTies);
  correctRanks=new double[]{3,2,4.5,4.5,6.5,6.5,1};
  TestUtils.assertEquals(correctRanks,ranks,0d);
  ranks=ranking.rank(allSame);
  correctRanks=new double[]{2.5,2.5,2.5,2.5};
  TestUtils.assertEquals(correctRanks,ranks,0d);
}
