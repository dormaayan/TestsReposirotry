@Test public void testDivideInt(){
  test(nan.divide(1),nan,0,"DivideInt #1");
  test(pinf.divide(1),pinf,0,"DivideInt #2");
  test(field.newDfp("0").divide(0),nan,DfpField.FLAG_DIV_ZERO,"DivideInt #3");
  test(field.newDfp("1").divide(0),pinf,DfpField.FLAG_DIV_ZERO,"DivideInt #4");
  test(field.newDfp("-1").divide(0),ninf,DfpField.FLAG_DIV_ZERO,"DivideInt #5");
  test(field.newDfp("1").divide(3),field.newDfp("0.33333333333333333333"),DfpField.FLAG_INEXACT,"DivideInt #6");
  test(field.newDfp("1").divide(6),field.newDfp("0.16666666666666666667"),DfpField.FLAG_INEXACT,"DivideInt #7");
  test(field.newDfp("10").divide(6),field.newDfp("1.6666666666666667"),DfpField.FLAG_INEXACT,"DivideInt #8");
  test(field.newDfp("100").divide(6),field.newDfp("16.6666666666666667"),DfpField.FLAG_INEXACT,"DivideInt #9");
  test(field.newDfp("1000").divide(6),field.newDfp("166.6666666666666667"),DfpField.FLAG_INEXACT,"DivideInt #10");
  test(field.newDfp("10000").divide(6),field.newDfp("1666.6666666666666667"),DfpField.FLAG_INEXACT,"DivideInt #20");
  test(field.newDfp("1").divide(1),field.newDfp("1"),0,"DivideInt #21");
  test(field.newDfp("1e-131077").divide(10),field.newDfp("1e-131078"),DfpField.FLAG_UNDERFLOW,"DivideInt #22");
  test(field.newDfp("0").divide(1),field.newDfp("0"),0,"DivideInt #23");
  test(field.newDfp("1").divide(10000),nan,DfpField.FLAG_INVALID,"DivideInt #24");
  test(field.newDfp("1").divide(-1),nan,DfpField.FLAG_INVALID,"DivideInt #25");
}
