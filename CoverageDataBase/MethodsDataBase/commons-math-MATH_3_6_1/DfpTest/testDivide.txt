@Test public void testDivide(){
  test(field.newDfp("1").divide(nan),nan,0,"Divide #1");
  test(nan.divide(field.newDfp("1")),nan,0,"Divide #2");
  test(pinf.divide(field.newDfp("1")),pinf,0,"Divide #3");
  test(pinf.divide(field.newDfp("-1")),ninf,0,"Divide #4");
  test(pinf.divide(pinf),nan,DfpField.FLAG_INVALID,"Divide #5");
  test(ninf.divide(pinf),nan,DfpField.FLAG_INVALID,"Divide #6");
  test(pinf.divide(ninf),nan,DfpField.FLAG_INVALID,"Divide #7");
  test(ninf.divide(ninf),nan,DfpField.FLAG_INVALID,"Divide #8");
  test(field.newDfp("0").divide(field.newDfp("0")),nan,DfpField.FLAG_DIV_ZERO,"Divide #9");
  test(field.newDfp("1").divide(field.newDfp("0")),pinf,DfpField.FLAG_DIV_ZERO,"Divide #10");
  test(field.newDfp("1").divide(field.newDfp("-0")),ninf,DfpField.FLAG_DIV_ZERO,"Divide #11");
  test(field.newDfp("-1").divide(field.newDfp("0")),ninf,DfpField.FLAG_DIV_ZERO,"Divide #12");
  test(field.newDfp("-1").divide(field.newDfp("-0")),pinf,DfpField.FLAG_DIV_ZERO,"Divide #13");
  test(field.newDfp("1").divide(field.newDfp("3")),field.newDfp("0.33333333333333333333"),DfpField.FLAG_INEXACT,"Divide #14");
  test(field.newDfp("1").divide(field.newDfp("6")),field.newDfp("0.16666666666666666667"),DfpField.FLAG_INEXACT,"Divide #15");
  test(field.newDfp("10").divide(field.newDfp("6")),field.newDfp("1.6666666666666667"),DfpField.FLAG_INEXACT,"Divide #16");
  test(field.newDfp("100").divide(field.newDfp("6")),field.newDfp("16.6666666666666667"),DfpField.FLAG_INEXACT,"Divide #17");
  test(field.newDfp("1000").divide(field.newDfp("6")),field.newDfp("166.6666666666666667"),DfpField.FLAG_INEXACT,"Divide #18");
  test(field.newDfp("10000").divide(field.newDfp("6")),field.newDfp("1666.6666666666666667"),DfpField.FLAG_INEXACT,"Divide #19");
  test(field.newDfp("1").divide(field.newDfp("1")),field.newDfp("1"),0,"Divide #20");
  test(field.newDfp("1").divide(field.newDfp("-1")),field.newDfp("-1"),0,"Divide #21");
  test(field.newDfp("-1").divide(field.newDfp("1")),field.newDfp("-1"),0,"Divide #22");
  test(field.newDfp("-1").divide(field.newDfp("-1")),field.newDfp("1"),0,"Divide #23");
  test(field.newDfp("1e-65539").divide(field.newDfp("1e65539")),field.newDfp("1e-131078"),DfpField.FLAG_UNDERFLOW,"Divide #24");
  test(field.newDfp("1e65539").divide(field.newDfp("1e-65539")),pinf,DfpField.FLAG_OVERFLOW,"Divide #24");
  test(field.newDfp("2").divide(field.newDfp("1.5")),field.newDfp("1.3333333333333333"),DfpField.FLAG_INEXACT,"Divide #25");
  test(field.newDfp("2").divide(pinf),field.newDfp("0"),0,"Divide #26");
  test(field.newDfp("2").divide(ninf),field.newDfp("-0"),0,"Divide #27");
  test(field.newDfp("0").divide(field.newDfp("1")),field.newDfp("0"),0,"Divide #28");
}
