@Test public void testSine(){
  final int n=30;
  final double[] xval=new double[n];
  final double[] yval=new double[n];
  final double period=12.3;
  final double offset=45.67;
  double delta=0;
  for (int i=0; i < n; i++) {
    delta+=rng.nextDouble() * period / n;
    xval[i]=offset + delta;
    yval[i]=FastMath.sin(xval[i]);
  }
  final UnivariateInterpolator inter=new LinearInterpolator();
  final UnivariateFunction f=inter.interpolate(xval,yval);
  final UnivariateInterpolator interP=new UnivariatePeriodicInterpolator(new LinearInterpolator(),period,1);
  final UnivariateFunction fP=interP.interpolate(xval,yval);
  final double xMin=xval[0];
  final double xMax=xval[n - 1];
  for (int i=0; i < n; i++) {
    final double x=xMin + (xMax - xMin) * rng.nextDouble();
    final double y=f.value(x);
    final double yP=fP.value(x);
    Assert.assertEquals("x=" + x,y,yP,Math.ulp(1d));
  }
  for (int i=0; i < n; i++) {
    final double xIn=offset + rng.nextDouble() * period;
    final double xOut=xIn + rng.nextInt(123456789) * period;
    final double yIn=fP.value(xIn);
    final double yOut=fP.value(xOut);
    Assert.assertEquals(yIn,yOut,1e-7);
  }
}
