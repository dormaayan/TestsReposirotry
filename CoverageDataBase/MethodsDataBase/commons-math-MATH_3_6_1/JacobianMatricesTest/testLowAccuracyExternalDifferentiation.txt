@Test public void testLowAccuracyExternalDifferentiation() throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException {
  FirstOrderIntegrator integ=new DormandPrince54Integrator(1.0e-8,100.0,new double[]{1.0e-4,1.0e-4},new double[]{1.0e-4,1.0e-4});
  double hP=1.0e-12;
  SummaryStatistics residualsP0=new SummaryStatistics();
  SummaryStatistics residualsP1=new SummaryStatistics();
  for (double b=2.88; b < 3.08; b+=0.001) {
    Brusselator brusselator=new Brusselator(b);
    double[] y={1.3,b};
    integ.integrate(brusselator,0,y,20.0,y);
    double[] yP={1.3,b + hP};
    integ.integrate(brusselator,0,yP,20.0,yP);
    residualsP0.addValue((yP[0] - y[0]) / hP - brusselator.dYdP0());
    residualsP1.addValue((yP[1] - y[1]) / hP - brusselator.dYdP1());
  }
  Assert.assertTrue((residualsP0.getMax() - residualsP0.getMin()) > 500);
  Assert.assertTrue(residualsP0.getStandardDeviation() > 30);
  Assert.assertTrue((residualsP1.getMax() - residualsP1.getMin()) > 700);
  Assert.assertTrue(residualsP1.getStandardDeviation() > 40);
}
