@Test public void testPowell(){
  MultivariateFunction powell=new MultivariateFunction(){
    public double value(    double[] x){
      ++count;
      double a=x[0] + 10 * x[1];
      double b=x[2] - x[3];
      double c=x[1] - 2 * x[2];
      double d=x[0] - x[3];
      return a * a + 5 * b * b + c * c * c* c + 10 * d * d* d* d;
    }
  }
;
  count=0;
  SimplexOptimizer optimizer=new SimplexOptimizer(-1,1e-3);
  PointValuePair optimum=optimizer.optimize(new MaxEval(1000),new ObjectiveFunction(powell),GoalType.MINIMIZE,new InitialGuess(new double[]{3,-1,0,1}),new MultiDirectionalSimplex(4));
  Assert.assertEquals(count,optimizer.getEvaluations());
  Assert.assertTrue(optimizer.getEvaluations() > 800);
  Assert.assertTrue(optimizer.getEvaluations() < 900);
  Assert.assertTrue(optimum.getValue() > 1e-2);
}
