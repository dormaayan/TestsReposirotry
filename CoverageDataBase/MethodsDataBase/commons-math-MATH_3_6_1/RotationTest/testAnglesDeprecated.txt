@Test @Deprecated public void testAnglesDeprecated() throws CardanEulerSingularityException {
  RotationOrder[] CardanOrders={RotationOrder.XYZ,RotationOrder.XZY,RotationOrder.YXZ,RotationOrder.YZX,RotationOrder.ZXY,RotationOrder.ZYX};
  for (int i=0; i < CardanOrders.length; ++i) {
    for (double alpha1=0.1; alpha1 < 6.2; alpha1+=0.3) {
      for (double alpha2=-1.55; alpha2 < 1.55; alpha2+=0.3) {
        for (double alpha3=0.1; alpha3 < 6.2; alpha3+=0.3) {
          Rotation r=new Rotation(CardanOrders[i],alpha1,alpha2,alpha3);
          double[] angles=r.getAngles(CardanOrders[i]);
          checkAngle(angles[0],alpha1);
          checkAngle(angles[1],alpha2);
          checkAngle(angles[2],alpha3);
        }
      }
    }
  }
  RotationOrder[] EulerOrders={RotationOrder.XYX,RotationOrder.XZX,RotationOrder.YXY,RotationOrder.YZY,RotationOrder.ZXZ,RotationOrder.ZYZ};
  for (int i=0; i < EulerOrders.length; ++i) {
    for (double alpha1=0.1; alpha1 < 6.2; alpha1+=0.3) {
      for (double alpha2=0.05; alpha2 < 3.1; alpha2+=0.3) {
        for (double alpha3=0.1; alpha3 < 6.2; alpha3+=0.3) {
          Rotation r=new Rotation(EulerOrders[i],alpha1,alpha2,alpha3);
          double[] angles=r.getAngles(EulerOrders[i]);
          checkAngle(angles[0],alpha1);
          checkAngle(angles[1],alpha2);
          checkAngle(angles[2],alpha3);
        }
      }
    }
  }
}
