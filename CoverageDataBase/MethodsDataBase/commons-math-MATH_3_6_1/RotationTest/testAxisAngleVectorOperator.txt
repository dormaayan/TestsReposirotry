@Test public void testAxisAngleVectorOperator() throws MathIllegalArgumentException {
  Rotation r=new Rotation(new Vector3D(10,10,10),2 * FastMath.PI / 3,RotationConvention.VECTOR_OPERATOR);
  checkVector(r.applyTo(Vector3D.PLUS_I),Vector3D.PLUS_J);
  checkVector(r.applyTo(Vector3D.PLUS_J),Vector3D.PLUS_K);
  checkVector(r.applyTo(Vector3D.PLUS_K),Vector3D.PLUS_I);
  double s=1 / FastMath.sqrt(3);
  checkVector(r.getAxis(RotationConvention.VECTOR_OPERATOR),new Vector3D(s,s,s));
  checkVector(r.getAxis(RotationConvention.FRAME_TRANSFORM),new Vector3D(-s,-s,-s));
  checkAngle(r.getAngle(),2 * FastMath.PI / 3);
  try {
    new Rotation(new Vector3D(0,0,0),2 * FastMath.PI / 3,RotationConvention.VECTOR_OPERATOR);
    Assert.fail("an exception should have been thrown");
  }
 catch (  MathIllegalArgumentException e) {
  }
  r=new Rotation(Vector3D.PLUS_K,1.5 * FastMath.PI,RotationConvention.VECTOR_OPERATOR);
  checkVector(r.getAxis(RotationConvention.VECTOR_OPERATOR),new Vector3D(0,0,-1));
  checkVector(r.getAxis(RotationConvention.FRAME_TRANSFORM),new Vector3D(0,0,+1));
  checkAngle(r.getAngle(),0.5 * FastMath.PI);
  r=new Rotation(Vector3D.PLUS_J,FastMath.PI,RotationConvention.VECTOR_OPERATOR);
  checkVector(r.getAxis(RotationConvention.VECTOR_OPERATOR),Vector3D.PLUS_J);
  checkVector(r.getAxis(RotationConvention.FRAME_TRANSFORM),Vector3D.MINUS_J);
  checkAngle(r.getAngle(),FastMath.PI);
  checkVector(Rotation.IDENTITY.getAxis(RotationConvention.VECTOR_OPERATOR),Vector3D.PLUS_I);
  checkVector(Rotation.IDENTITY.getAxis(RotationConvention.FRAME_TRANSFORM),Vector3D.MINUS_I);
}
