@Test public void testSummaryConsistency(){
  final DescriptiveStatistics dstats=new DescriptiveStatistics();
  final SummaryStatistics sstats=new SummaryStatistics();
  final int windowSize=5;
  dstats.setWindowSize(windowSize);
  final double tol=1E-12;
  for (int i=0; i < 20; i++) {
    dstats.addValue(i);
    sstats.clear();
    double[] values=dstats.getValues();
    for (int j=0; j < values.length; j++) {
      sstats.addValue(values[j]);
    }
    TestUtils.assertEquals(dstats.getMean(),sstats.getMean(),tol);
    TestUtils.assertEquals(new Mean().evaluate(values),dstats.getMean(),tol);
    TestUtils.assertEquals(dstats.getMax(),sstats.getMax(),tol);
    TestUtils.assertEquals(new Max().evaluate(values),dstats.getMax(),tol);
    TestUtils.assertEquals(dstats.getGeometricMean(),sstats.getGeometricMean(),tol);
    TestUtils.assertEquals(new GeometricMean().evaluate(values),dstats.getGeometricMean(),tol);
    TestUtils.assertEquals(dstats.getMin(),sstats.getMin(),tol);
    TestUtils.assertEquals(new Min().evaluate(values),dstats.getMin(),tol);
    TestUtils.assertEquals(dstats.getStandardDeviation(),sstats.getStandardDeviation(),tol);
    TestUtils.assertEquals(dstats.getVariance(),sstats.getVariance(),tol);
    TestUtils.assertEquals(new Variance().evaluate(values),dstats.getVariance(),tol);
    TestUtils.assertEquals(dstats.getSum(),sstats.getSum(),tol);
    TestUtils.assertEquals(new Sum().evaluate(values),dstats.getSum(),tol);
    TestUtils.assertEquals(dstats.getSumsq(),sstats.getSumsq(),tol);
    TestUtils.assertEquals(new SumOfSquares().evaluate(values),dstats.getSumsq(),tol);
    TestUtils.assertEquals(dstats.getPopulationVariance(),sstats.getPopulationVariance(),tol);
    TestUtils.assertEquals(new Variance(false).evaluate(values),dstats.getPopulationVariance(),tol);
  }
}
