@Test public void testReverse(){
  Circle circle=new Circle(new S2Point(1.2,2.5),new S2Point(-4.3,0),1.0e-10);
  Circle reversed=circle.getReverse();
  Assert.assertEquals(0.0,reversed.getPointAt(0).distance(reversed.getXAxis()),1.0e-10);
  Assert.assertEquals(0.0,reversed.getPointAt(0.5 * FastMath.PI).distance(reversed.getYAxis()),1.0e-10);
  Assert.assertEquals(0.5 * FastMath.PI,Vector3D.angle(reversed.getXAxis(),reversed.getYAxis()),1.0e-10);
  Assert.assertEquals(0.5 * FastMath.PI,Vector3D.angle(reversed.getXAxis(),reversed.getPole()),1.0e-10);
  Assert.assertEquals(0.5 * FastMath.PI,Vector3D.angle(reversed.getPole(),reversed.getYAxis()),1.0e-10);
  Assert.assertEquals(0.0,reversed.getPole().distance(Vector3D.crossProduct(reversed.getXAxis(),reversed.getYAxis())),1.0e-10);
  Assert.assertEquals(0,Vector3D.angle(circle.getXAxis(),reversed.getXAxis()),1.0e-10);
  Assert.assertEquals(FastMath.PI,Vector3D.angle(circle.getYAxis(),reversed.getYAxis()),1.0e-10);
  Assert.assertEquals(FastMath.PI,Vector3D.angle(circle.getPole(),reversed.getPole()),1.0e-10);
  Assert.assertTrue(circle.sameOrientationAs(circle));
  Assert.assertFalse(circle.sameOrientationAs(reversed));
}
