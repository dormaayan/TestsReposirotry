@Test public void testCircleFittingBadInit(){
  CircleVectorial circle=new CircleVectorial();
  double[][] points=circlePoints;
  double[] target=new double[points.length];
  Arrays.fill(target,0);
  double[] weights=new double[points.length];
  Arrays.fill(weights,2);
  for (int i=0; i < points.length; ++i) {
    circle.addPoint(points[i][0],points[i][1]);
  }
  AbstractLeastSquaresOptimizer optimizer=createOptimizer();
  PointVectorValuePair optimum=optimizer.optimize(new MaxEval(100),circle.getModelFunction(),circle.getModelFunctionJacobian(),new Target(target),new Weight(weights),new InitialGuess(new double[]{-12,-12}));
  Vector2D center=new Vector2D(optimum.getPointRef()[0],optimum.getPointRef()[1]);
  Assert.assertTrue(optimizer.getEvaluations() < 25);
  Assert.assertEquals(0.043,optimizer.getRMS(),1e-3);
  Assert.assertEquals(0.292235,circle.getRadius(center),1e-6);
  Assert.assertEquals(-0.151738,center.getX(),1e-6);
  Assert.assertEquals(0.2075001,center.getY(),1e-6);
}
