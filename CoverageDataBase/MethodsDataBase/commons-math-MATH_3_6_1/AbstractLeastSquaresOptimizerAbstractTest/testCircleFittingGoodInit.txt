@Test public void testCircleFittingGoodInit(){
  CircleVectorial circle=new CircleVectorial();
  double[][] points=circlePoints;
  double[] target=new double[points.length];
  Arrays.fill(target,0);
  double[] weights=new double[points.length];
  Arrays.fill(weights,2);
  for (int i=0; i < points.length; ++i) {
    circle.addPoint(points[i][0],points[i][1]);
  }
  AbstractLeastSquaresOptimizer optimizer=createOptimizer();
  PointVectorValuePair optimum=optimizer.optimize(new MaxEval(100),circle.getModelFunction(),circle.getModelFunctionJacobian(),new Target(target),new Weight(weights),new InitialGuess(new double[]{0,0}));
  Assert.assertEquals(-0.1517383071957963,optimum.getPointRef()[0],1e-6);
  Assert.assertEquals(0.2074999736353867,optimum.getPointRef()[1],1e-6);
  Assert.assertEquals(0.04268731682389561,optimizer.getRMS(),1e-8);
}
