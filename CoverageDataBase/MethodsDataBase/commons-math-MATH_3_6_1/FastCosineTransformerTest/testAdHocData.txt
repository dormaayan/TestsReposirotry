/** 
 * Test of transformer for the ad hoc data. 
 */
@Test public void testAdHocData(){
  FastCosineTransformer transformer;
  transformer=new FastCosineTransformer(DctNormalization.STANDARD_DCT_I);
  double result[], tolerance=1E-12;
  double x[]={0.0,1.0,4.0,9.0,16.0,25.0,36.0,49.0,64.0};
  double y[]={172.0,-105.096569476353,27.3137084989848,-12.9593152353742,8.0,-5.78585076868676,4.68629150101524,-4.15826451958632,4.0};
  result=transformer.transform(x,TransformType.FORWARD);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(y[i],result[i],tolerance);
  }
  result=transformer.transform(y,TransformType.INVERSE);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(x[i],result[i],tolerance);
  }
  TransformUtils.scaleArray(x,FastMath.sqrt(0.5 * (x.length - 1)));
  transformer=new FastCosineTransformer(DctNormalization.ORTHOGONAL_DCT_I);
  result=transformer.transform(y,TransformType.FORWARD);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(x[i],result[i],tolerance);
  }
  result=transformer.transform(x,TransformType.INVERSE);
  for (int i=0; i < result.length; i++) {
    Assert.assertEquals(y[i],result[i],tolerance);
  }
}
