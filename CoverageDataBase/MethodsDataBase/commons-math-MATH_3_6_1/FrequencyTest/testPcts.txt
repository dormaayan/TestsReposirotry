/** 
 * test pcts 
 */
@Test public void testPcts(){
  f.addValue(ONE_LONG);
  f.addValue(TWO_LONG);
  f.addValue(ONE);
  f.addValue(TWO);
  f.addValue(THREE_LONG);
  f.addValue(THREE_LONG);
  f.addValue(3);
  f.addValue(THREE);
  Assert.assertEquals("one pct",0.25,f.getPct(1),TOLERANCE);
  Assert.assertEquals("two pct",0.25,f.getPct(Long.valueOf(2)),TOLERANCE);
  Assert.assertEquals("three pct",0.5,f.getPct(THREE_LONG),TOLERANCE);
  Assert.assertEquals("five pct",0,f.getPct(5),TOLERANCE);
  Assert.assertEquals("foo pct",0,f.getPct("foo"),TOLERANCE);
  Assert.assertEquals("one cum pct",0.25,f.getCumPct(1),TOLERANCE);
  Assert.assertEquals("two cum pct",0.50,f.getCumPct(Long.valueOf(2)),TOLERANCE);
  Assert.assertEquals("Integer argument",0.50,f.getCumPct(Integer.valueOf(2)),TOLERANCE);
  Assert.assertEquals("three cum pct",1.0,f.getCumPct(THREE_LONG),TOLERANCE);
  Assert.assertEquals("five cum pct",1.0,f.getCumPct(5),TOLERANCE);
  Assert.assertEquals("zero cum pct",0.0,f.getCumPct(0),TOLERANCE);
  Assert.assertEquals("foo cum pct",0,f.getCumPct("foo"),TOLERANCE);
}
