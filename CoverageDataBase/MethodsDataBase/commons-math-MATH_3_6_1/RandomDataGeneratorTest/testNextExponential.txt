/** 
 * test failure modes and distribution of nextExponential() 
 */
@Test public void testNextExponential(){
  try {
    randomData.nextExponential(-1);
    Assert.fail("negative mean -- expecting MathIllegalArgumentException");
  }
 catch (  MathIllegalArgumentException ex) {
  }
  try {
    randomData.nextExponential(0);
    Assert.fail("zero mean -- expecting MathIllegalArgumentException");
  }
 catch (  MathIllegalArgumentException ex) {
  }
  double[] quartiles;
  long[] counts;
  quartiles=TestUtils.getDistributionQuartiles(new ExponentialDistribution(1));
  counts=new long[4];
  randomData.reSeed(1000);
  for (int i=0; i < 1000; i++) {
    double value=randomData.nextExponential(1);
    TestUtils.updateCounts(value,counts,quartiles);
  }
  TestUtils.assertChiSquareAccept(expected,counts,0.001);
  quartiles=TestUtils.getDistributionQuartiles(new ExponentialDistribution(5));
  counts=new long[4];
  randomData.reSeed(1000);
  for (int i=0; i < 1000; i++) {
    double value=randomData.nextExponential(5);
    TestUtils.updateCounts(value,counts,quartiles);
  }
  TestUtils.assertChiSquareAccept(expected,counts,0.001);
}
