/** 
 * {@link RealTransformer#transform(UnivariateFunction,double,double,int,TransformType)}should throw a  {@link NotStrictlyPositiveException} if number of samplesis not strictly positive.
 */
@Test public void testTransformFunctionNotStrictlyPositiveNumberOfSamples(){
  final TransformType[] type=TransformType.values();
  final RealTransformer transformer=createRealTransformer();
  final UnivariateFunction f=getValidFunction();
  final double a=getValidLowerBound();
  final double b=getValidUpperBound();
  for (int i=0; i < getNumberOfValidDataSizes(); i++) {
    final int n=getValidDataSize(i);
    for (int j=0; j < type.length; j++) {
      try {
        transformer.transform(f,a,b,-n,type[j]);
        Assert.fail(type[j] + ", " + (-n));
      }
 catch (      NotStrictlyPositiveException e) {
      }
    }
  }
}
