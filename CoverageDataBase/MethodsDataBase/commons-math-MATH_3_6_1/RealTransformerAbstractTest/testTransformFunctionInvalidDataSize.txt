/** 
 * {@link RealTransformer#transform(UnivariateFunction,double,double,int,TransformType)}should throw a  {@link MathIllegalArgumentException} if number of samplesis invalid.
 */
@Test public void testTransformFunctionInvalidDataSize(){
  final TransformType[] type=TransformType.values();
  final RealTransformer transformer=createRealTransformer();
  final UnivariateFunction f=getValidFunction();
  final double a=getValidLowerBound();
  final double b=getValidUpperBound();
  for (int i=0; i < getNumberOfInvalidDataSizes(); i++) {
    final int n=getInvalidDataSize(i);
    for (int j=0; j < type.length; j++) {
      try {
        transformer.transform(f,a,b,n,type[j]);
        Assert.fail(type[j] + ", " + n);
      }
 catch (      MathIllegalArgumentException e) {
      }
    }
  }
}
