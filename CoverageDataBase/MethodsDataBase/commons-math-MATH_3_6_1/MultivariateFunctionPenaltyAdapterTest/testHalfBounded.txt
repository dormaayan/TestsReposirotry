@Test public void testHalfBounded(){
  final BiQuadratic biQuadratic=new BiQuadratic(4.0,4.0,1.0,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY,3.0);
  final MultivariateFunctionPenaltyAdapter wrapped=new MultivariateFunctionPenaltyAdapter(biQuadratic,biQuadratic.getLower(),biQuadratic.getUpper(),1000.0,new double[]{100.0,100.0});
  SimplexOptimizer optimizer=new SimplexOptimizer(new SimplePointChecker<PointValuePair>(1.0e-10,1.0e-20));
  final AbstractSimplex simplex=new NelderMeadSimplex(new double[]{1.0,0.5});
  final PointValuePair optimum=optimizer.optimize(new MaxEval(400),new ObjectiveFunction(wrapped),simplex,GoalType.MINIMIZE,new InitialGuess(new double[]{-1.5,4.0}));
  Assert.assertEquals(biQuadratic.getBoundedXOptimum(),optimum.getPoint()[0],2e-7);
  Assert.assertEquals(biQuadratic.getBoundedYOptimum(),optimum.getPoint()[1],2e-7);
}
