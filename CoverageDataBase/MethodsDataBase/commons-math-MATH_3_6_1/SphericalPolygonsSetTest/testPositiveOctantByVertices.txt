@Test public void testPositiveOctantByVertices(){
  double tol=0.01;
  double sinTol=FastMath.sin(tol);
  SphericalPolygonsSet octant=new SphericalPolygonsSet(tol,S2Point.PLUS_I,S2Point.PLUS_J,S2Point.PLUS_K);
  UnitSphereRandomVectorGenerator random=new UnitSphereRandomVectorGenerator(3,new Well1024a(0xb8fc5acc91044308l));
  for (int i=0; i < 1000; ++i) {
    Vector3D v=new Vector3D(random.nextVector());
    if ((v.getX() > sinTol) && (v.getY() > sinTol) && (v.getZ() > sinTol)) {
      Assert.assertEquals(Location.INSIDE,octant.checkPoint(new S2Point(v)));
    }
 else     if ((v.getX() < -sinTol) || (v.getY() < -sinTol) || (v.getZ() < -sinTol)) {
      Assert.assertEquals(Location.OUTSIDE,octant.checkPoint(new S2Point(v)));
    }
 else {
      Assert.assertEquals(Location.BOUNDARY,octant.checkPoint(new S2Point(v)));
    }
  }
}
