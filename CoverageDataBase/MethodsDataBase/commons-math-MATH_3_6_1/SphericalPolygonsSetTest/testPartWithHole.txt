@Test public void testPartWithHole(){
  double tol=0.01;
  double alpha=0.7;
  S2Point center=new S2Point(new Vector3D(1,1,1));
  SphericalPolygonsSet hexa=new SphericalPolygonsSet(center.getVector(),Vector3D.PLUS_K,alpha,6,tol);
  SphericalPolygonsSet hole=new SphericalPolygonsSet(tol,new S2Point(FastMath.PI / 6,FastMath.PI / 3),new S2Point(FastMath.PI / 3,FastMath.PI / 3),new S2Point(FastMath.PI / 4,FastMath.PI / 6));
  SphericalPolygonsSet hexaWithHole=(SphericalPolygonsSet)new RegionFactory<Sphere2D>().difference(hexa,hole);
  for (double phi=center.getPhi() - alpha + 0.1; phi < center.getPhi() + alpha - 0.1; phi+=0.07) {
    Location l=hexaWithHole.checkPoint(new S2Point(FastMath.PI / 4,phi));
    if (phi < FastMath.PI / 6 || phi > FastMath.PI / 3) {
      Assert.assertEquals(Location.INSIDE,l);
    }
 else {
      Assert.assertEquals(Location.OUTSIDE,l);
    }
  }
  Assert.assertEquals(2,hexaWithHole.getBoundaryLoops().size());
  Assert.assertEquals(hexa.getBoundarySize() + hole.getBoundarySize(),hexaWithHole.getBoundarySize(),1.0e-10);
  Assert.assertEquals(hexa.getSize() - hole.getSize(),hexaWithHole.getSize(),1.0e-10);
}
