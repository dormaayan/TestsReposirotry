@Test public void testHighDegreeLegendre(){
  PolynomialsUtils.createLegendrePolynomial(40);
  double[] l40=PolynomialsUtils.createLegendrePolynomial(40).getCoefficients();
  double denominator=274877906944d;
  double[] numerators=new double[]{+34461632205d,-28258538408100d,+3847870979902950d,-207785032914759300d,+5929294332103310025d,-103301483474866556880d,+1197358103913226000200d,-9763073770369381232400d,+58171647881784229843050d,-260061484647976556945400d,+888315281771246239250340d,-2345767627188139419665400d,+4819022625419112503443050d,-7710436200670580005508880d,+9566652323054238154983240d,-9104813935044723209570256d,+6516550296251767619752905d,-3391858621221953912598660d,+1211378079007840683070950d,-265365894974690562152100d,+26876802183334044115405d};
  for (int i=0; i < l40.length; ++i) {
    if (i % 2 == 0) {
      double ci=numerators[i / 2] / denominator;
      Assert.assertEquals(ci,l40[i],FastMath.abs(ci) * 1e-15);
    }
 else {
      Assert.assertEquals(0,l40[i],0);
    }
  }
}
