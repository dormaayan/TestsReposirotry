@Test(expected=DimensionMismatchException.class) public void testIncompatibleIntialMixture(){
  double[][] data=new double[][]{{1,2,3},{4,5,6},{7,8,9}};
  double[] weights=new double[]{0.5,0.5};
  MultivariateNormalDistribution[] mvns=new MultivariateNormalDistribution[2];
  mvns[0]=new MultivariateNormalDistribution(new double[]{-0.0021722935000328823,3.5432892936887908},new double[][]{{4.537422569229048,3.5266152281729304},{3.5266152281729304,6.175448814169779}});
  mvns[1]=new MultivariateNormalDistribution(new double[]{5.090902706507635,8.68540656355283},new double[][]{{2.886778573963039,1.5257474543463154},{1.5257474543463154,3.3794567673616918}});
  List<Pair<Double,MultivariateNormalDistribution>> components=new ArrayList<Pair<Double,MultivariateNormalDistribution>>();
  components.add(new Pair<Double,MultivariateNormalDistribution>(weights[0],mvns[0]));
  components.add(new Pair<Double,MultivariateNormalDistribution>(weights[1],mvns[1]));
  MixtureMultivariateNormalDistribution badInitialMix=new MixtureMultivariateNormalDistribution(components);
  MultivariateNormalMixtureExpectationMaximization fitter=new MultivariateNormalMixtureExpectationMaximization(data);
  fitter.fit(badInitialMix);
}
