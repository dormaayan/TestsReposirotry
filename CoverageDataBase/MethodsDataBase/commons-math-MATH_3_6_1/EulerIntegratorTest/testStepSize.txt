@Test public void testStepSize() throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException {
  final double step=1.23456;
  FirstOrderIntegrator integ=new EulerIntegrator(step);
  integ.addStepHandler(new StepHandler(){
    public void handleStep(    StepInterpolator interpolator,    boolean isLast){
      if (!isLast) {
        Assert.assertEquals(step,interpolator.getCurrentTime() - interpolator.getPreviousTime(),1.0e-12);
      }
    }
    public void init(    double t0,    double[] y0,    double t){
    }
  }
);
  integ.integrate(new FirstOrderDifferentialEquations(){
    public void computeDerivatives(    double t,    double[] y,    double[] dot){
      dot[0]=1.0;
    }
    public int getDimension(){
      return 1;
    }
  }
,0.0,new double[]{0.0},5.0,new double[1]);
}
