@Test public void testS2Point(){
  for (int k=-2; k < 3; ++k) {
    S2Point p=new S2Point(1.0 + k * MathUtils.TWO_PI,1.4);
    Assert.assertEquals(1.0 + k * MathUtils.TWO_PI,p.getTheta(),1.0e-10);
    Assert.assertEquals(1.4,p.getPhi(),1.0e-10);
    Assert.assertEquals(FastMath.cos(1.0) * FastMath.sin(1.4),p.getVector().getX(),1.0e-10);
    Assert.assertEquals(FastMath.sin(1.0) * FastMath.sin(1.4),p.getVector().getY(),1.0e-10);
    Assert.assertEquals(FastMath.cos(1.4),p.getVector().getZ(),1.0e-10);
    Assert.assertFalse(p.isNaN());
  }
}
