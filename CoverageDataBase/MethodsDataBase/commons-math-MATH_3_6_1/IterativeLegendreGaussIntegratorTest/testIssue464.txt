@Test public void testIssue464(){
  final double value=0.2;
  UnivariateFunction f=new UnivariateFunction(){
    public double value(    double x){
      return (x >= 0 && x <= 5) ? value : 0.0;
    }
  }
;
  IterativeLegendreGaussIntegrator gauss=new IterativeLegendreGaussIntegrator(5,3,100);
  double maxX=0.32462367623786328;
  Assert.assertEquals(maxX * value,gauss.integrate(Integer.MAX_VALUE,f,-10,maxX),1.0e-7);
  Assert.assertTrue(gauss.getEvaluations() > 37000000);
  Assert.assertTrue(gauss.getIterations() < 30);
  try {
    gauss.integrate(1000,f,-10,maxX);
    Assert.fail("expected TooManyEvaluationsException");
  }
 catch (  TooManyEvaluationsException tmee) {
    Assert.assertEquals(1000,tmee.getMax());
  }
  double sum1=gauss.integrate(1000,f,-10,0);
  int eval1=gauss.getEvaluations();
  double sum2=gauss.integrate(1000,f,0,maxX);
  int eval2=gauss.getEvaluations();
  Assert.assertEquals(maxX * value,sum1 + sum2,1.0e-7);
  Assert.assertTrue(eval1 + eval2 < 200);
}
