@Test public void testBadFunction(){
  UnivariateFunction f=new UnivariateFunction(){
    public double value(    double x){
      if (x < 0) {
        throw new LocalException();
      }
      return 0;
    }
  }
;
  UnivariateOptimizer underlying=new BrentOptimizer(1e-9,1e-14);
  JDKRandomGenerator g=new JDKRandomGenerator();
  g.setSeed(4312000053L);
  MultiStartUnivariateOptimizer optimizer=new MultiStartUnivariateOptimizer(underlying,5,g);
  try {
    optimizer.optimize(new MaxEval(300),new UnivariateObjectiveFunction(f),GoalType.MINIMIZE,new SearchInterval(-0.3,-0.2));
    Assert.fail();
  }
 catch (  LocalException e) {
  }
  Assert.assertTrue(optimizer.getOptima()[0] == null);
}
