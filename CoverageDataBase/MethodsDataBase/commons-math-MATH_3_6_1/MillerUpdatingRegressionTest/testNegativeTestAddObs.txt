@Test public void testNegativeTestAddObs(){
  MillerUpdatingRegression instance=new MillerUpdatingRegression(3,true);
  try {
    instance.addObservation(new double[]{1.0},0.0);
    Assert.fail("Should throw IllegalArgumentException");
  }
 catch (  IllegalArgumentException iae) {
  }
catch (  Exception e) {
    Assert.fail("Should throw IllegalArgumentException");
  }
  try {
    instance.addObservation(new double[]{1.0,1.0,1.0,1.0,1.0,1.0,1.0},0.0);
    Assert.fail("Should throw IllegalArgumentException");
  }
 catch (  IllegalArgumentException iae) {
  }
catch (  Exception e) {
    Assert.fail("Should throw IllegalArgumentException");
  }
  try {
    instance.addObservation(new double[]{1.0,1.0,1.0},0.0);
  }
 catch (  Exception e) {
    Assert.fail("Should throw IllegalArgumentException");
  }
  instance=new MillerUpdatingRegression(3,false);
  try {
    instance.addObservation(new double[]{1.0},0.0);
    Assert.fail("Should throw IllegalArgumentException [NOINTERCEPT]");
  }
 catch (  IllegalArgumentException iae) {
  }
catch (  Exception e) {
    Assert.fail("Should throw IllegalArgumentException [NOINTERCEPT]");
  }
  try {
    instance.addObservation(new double[]{1.0,1.0,1.0,1.0,1.0,1.0,1.0},0.0);
    Assert.fail("Should throw IllegalArgumentException [NOINTERCEPT]");
  }
 catch (  IllegalArgumentException iae) {
  }
catch (  Exception e) {
    Assert.fail("Should throw IllegalArgumentException [NOINTERCEPT]");
  }
  try {
    instance.addObservation(new double[]{1.0,1.0,1.0},0.0);
  }
 catch (  Exception e) {
    Assert.fail("Should throw IllegalArgumentException [NOINTERCEPT]");
  }
}
