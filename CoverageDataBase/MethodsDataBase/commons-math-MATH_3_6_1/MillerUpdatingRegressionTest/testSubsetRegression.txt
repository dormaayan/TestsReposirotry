@Test public void testSubsetRegression(){
  MillerUpdatingRegression instance=new MillerUpdatingRegression(3,true);
  MillerUpdatingRegression redRegression=new MillerUpdatingRegression(2,true);
  double[][] x=new double[airdata[0].length][];
  double[][] xReduced=new double[airdata[0].length][];
  double[] y=new double[airdata[0].length];
  for (int i=0; i < airdata[0].length; i++) {
    x[i]=new double[3];
    x[i][0]=FastMath.log(airdata[3][i]);
    x[i][1]=FastMath.log(airdata[4][i]);
    x[i][2]=airdata[5][i];
    xReduced[i]=new double[2];
    xReduced[i][0]=FastMath.log(airdata[3][i]);
    xReduced[i][1]=FastMath.log(airdata[4][i]);
    y[i]=FastMath.log(airdata[2][i]);
  }
  instance.addObservations(x,y);
  redRegression.addObservations(xReduced,y);
  RegressionResults resultsInstance=instance.regress(new int[]{0,1,2});
  RegressionResults resultsReduced=redRegression.regress();
  TestUtils.assertEquals(resultsInstance.getParameterEstimates(),resultsReduced.getParameterEstimates(),1.0e-12);
  TestUtils.assertEquals(resultsInstance.getStdErrorOfEstimates(),resultsReduced.getStdErrorOfEstimates(),1.0e-12);
}
