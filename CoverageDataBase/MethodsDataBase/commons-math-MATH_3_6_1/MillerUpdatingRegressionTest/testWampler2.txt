@Test public void testWampler2(){
  double[] data=new double[]{1.00000,0,1.11111,1,1.24992,2,1.42753,3,1.65984,4,1.96875,5,2.38336,6,2.94117,7,3.68928,8,4.68559,9,6.00000,10,7.71561,11,9.92992,12,12.75603,13,16.32384,14,20.78125,15,26.29536,16,33.05367,17,41.26528,18,51.16209,19,63.00000,20};
  MillerUpdatingRegression model=new MillerUpdatingRegression(5,true);
  int off=0;
  double[] tmp=new double[5];
  int nobs=21;
  for (int i=0; i < nobs; i++) {
    tmp[0]=data[off + 1];
    tmp[1]=tmp[0] * tmp[0];
    tmp[2]=tmp[0] * tmp[1];
    tmp[3]=tmp[0] * tmp[2];
    tmp[4]=tmp[0] * tmp[3];
    model.addObservation(tmp,data[off]);
    off+=2;
  }
  RegressionResults result=model.regress();
  double[] betaHat=result.getParameterEstimates();
  TestUtils.assertEquals(betaHat,new double[]{1.0,1.0e-1,1.0e-2,1.0e-3,1.0e-4,1.0e-5},1E-8);
  double[] se=result.getStdErrorOfEstimates();
  TestUtils.assertEquals(se,new double[]{0.0,0.0,0.0,0.0,0.0,0.0},1E-8);
  TestUtils.assertEquals(1.0,result.getRSquared(),1.0e-10);
  TestUtils.assertEquals(0,result.getMeanSquareError(),1.0e-7);
  TestUtils.assertEquals(0.00,result.getErrorSumSquares(),1.0e-6);
  return;
}
