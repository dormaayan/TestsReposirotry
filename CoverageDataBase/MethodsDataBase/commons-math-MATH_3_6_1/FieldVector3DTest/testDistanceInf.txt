@Test public void testDistanceInf(){
  FieldVector3D<DerivativeStructure> v1=createVector(1,-2,3,3);
  FieldVector3D<DerivativeStructure> v2=createVector(-4,2,0,3);
  Assert.assertEquals(0.0,FieldVector3D.distanceInf(createVector(-1,0,0,3),createVector(-1,0,0,3)).getReal(),0);
  DerivativeStructure distance=FieldVector3D.distanceInf(v1,v2);
  Assert.assertEquals(5.0,distance.getReal(),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(1,0,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,1,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,0,1),1.0e-12);
  distance=FieldVector3D.distanceInf(v1,new Vector3D(-4,2,0));
  Assert.assertEquals(5.0,distance.getReal(),1.0e-12);
  Assert.assertEquals(1,distance.getPartialDerivative(1,0,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,1,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,0,1),1.0e-12);
  distance=FieldVector3D.distanceInf(new Vector3D(-4,2,0),v1);
  Assert.assertEquals(5.0,distance.getReal(),1.0e-12);
  Assert.assertEquals(1,distance.getPartialDerivative(1,0,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,1,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,0,1),1.0e-12);
  Assert.assertEquals(v1.subtract(v2).getNormInf().getReal(),FieldVector3D.distanceInf(v1,v2).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(1,-2,3,3),createVector(-4,2,0,3)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(1,3,-2,3),createVector(-4,0,2,3)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(-2,1,3,3),createVector(2,-4,0,3)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(-2,3,1,3),createVector(2,0,-4,3)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(3,-2,1,3),createVector(0,2,-4,3)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(3,1,-2,3),createVector(0,-4,2,3)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(1,-2,3,3),new Vector3D(-4,2,0)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(1,3,-2,3),new Vector3D(-4,0,2)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(-2,1,3,3),new Vector3D(2,-4,0)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(-2,3,1,3),new Vector3D(2,0,-4)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(3,-2,1,3),new Vector3D(0,2,-4)).getReal(),1.0e-12);
  Assert.assertEquals(5.0,FieldVector3D.distanceInf(createVector(3,1,-2,3),new Vector3D(0,-4,2)).getReal(),1.0e-12);
}
