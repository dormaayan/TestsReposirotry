@Test public void testConstructors() throws DimensionMismatchException {
  double cosAlpha=1 / 2.0;
  double sinAlpha=FastMath.sqrt(3) / 2.0;
  double cosDelta=FastMath.sqrt(2) / 2.0;
  double sinDelta=-FastMath.sqrt(2) / 2.0;
  FieldVector3D<DerivativeStructure> u=new FieldVector3D<DerivativeStructure>(2,new FieldVector3D<DerivativeStructure>(new DerivativeStructure(2,1,0,FastMath.PI / 3),new DerivativeStructure(2,1,1,-FastMath.PI / 4)));
  checkVector(u,2 * cosAlpha * cosDelta,2 * sinAlpha * cosDelta,2 * sinDelta);
  Assert.assertEquals(-2 * sinAlpha * cosDelta,u.getX().getPartialDerivative(1,0),1.0e-12);
  Assert.assertEquals(+2 * cosAlpha * cosDelta,u.getY().getPartialDerivative(1,0),1.0e-12);
  Assert.assertEquals(0,u.getZ().getPartialDerivative(1,0),1.0e-12);
  Assert.assertEquals(-2 * cosAlpha * sinDelta,u.getX().getPartialDerivative(0,1),1.0e-12);
  Assert.assertEquals(-2 * sinAlpha * sinDelta,u.getY().getPartialDerivative(0,1),1.0e-12);
  Assert.assertEquals(2 * cosDelta,u.getZ().getPartialDerivative(0,1),1.0e-12);
  checkVector(new FieldVector3D<DerivativeStructure>(2,createVector(1,0,0,3)),2,0,0,2,0,0,0,2,0,0,0,2);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),createVector(1,0,0,4)),2,0,0,2,0,0,1,0,2,0,0,0,0,2,0);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),new Vector3D(1,0,0)),2,0,0,0,0,0,1,0,0,0,0,0,0,0,0);
  checkVector(new FieldVector3D<DerivativeStructure>(2,createVector(1,0,0,3),-3,createVector(0,0,-1,3)),2,0,3,-1,0,0,0,-1,0,0,0,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),createVector(1,0,0,4),new DerivativeStructure(4,1,3,-3.0),createVector(0,0,-1,4)),2,0,3,-1,0,0,1,0,-1,0,0,0,0,-1,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),new Vector3D(1,0,0),new DerivativeStructure(4,1,3,-3.0),new Vector3D(0,0,-1)),2,0,3,0,0,0,1,0,0,0,0,0,0,0,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(2,createVector(1,0,0,3),5,createVector(0,1,0,3),-3,createVector(0,0,-1,3)),2,5,3,4,0,0,0,4,0,0,0,4);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),createVector(1,0,0,4),new DerivativeStructure(4,1,3,5.0),createVector(0,1,0,4),new DerivativeStructure(4,1,3,-3.0),createVector(0,0,-1,4)),2,5,3,4,0,0,1,0,4,0,1,0,0,4,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),new Vector3D(1,0,0),new DerivativeStructure(4,1,3,5.0),new Vector3D(0,1,0),new DerivativeStructure(4,1,3,-3.0),new Vector3D(0,0,-1)),2,5,3,0,0,0,1,0,0,0,1,0,0,0,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(2,createVector(1,0,0,3),5,createVector(0,1,0,3),5,createVector(0,-1,0,3),-3,createVector(0,0,-1,3)),2,0,3,9,0,0,0,9,0,0,0,9);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),createVector(1,0,0,4),new DerivativeStructure(4,1,3,5.0),createVector(0,1,0,4),new DerivativeStructure(4,1,3,5.0),createVector(0,-1,0,4),new DerivativeStructure(4,1,3,-3.0),createVector(0,0,-1,4)),2,0,3,9,0,0,1,0,9,0,0,0,0,9,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure(4,1,3,2.0),new Vector3D(1,0,0),new DerivativeStructure(4,1,3,5.0),new Vector3D(0,1,0),new DerivativeStructure(4,1,3,5.0),new Vector3D(0,-1,0),new DerivativeStructure(4,1,3,-3.0),new Vector3D(0,0,-1)),2,0,3,0,0,0,1,0,0,0,0,0,0,0,-1);
  checkVector(new FieldVector3D<DerivativeStructure>(new DerivativeStructure[]{new DerivativeStructure(3,1,2,2),new DerivativeStructure(3,1,1,5),new DerivativeStructure(3,1,0,-3)}),2,5,-3,0,0,1,0,1,0,1,0,0);
}
