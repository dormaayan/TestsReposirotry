@Test public void testDistance(){
  FieldVector3D<DerivativeStructure> v1=createVector(1,-2,3,3);
  FieldVector3D<DerivativeStructure> v2=createVector(-4,2,0,3);
  Assert.assertEquals(0.0,FieldVector3D.distance(createVector(-1,0,0,3),createVector(-1,0,0,3)).getReal(),0);
  DerivativeStructure distance=FieldVector3D.distance(v1,v2);
  Assert.assertEquals(FastMath.sqrt(50),distance.getReal(),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(1,0,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,1,0),1.0e-12);
  Assert.assertEquals(0,distance.getPartialDerivative(0,0,1),1.0e-12);
  distance=FieldVector3D.distance(v1,new Vector3D(-4,2,0));
  Assert.assertEquals(FastMath.sqrt(50),distance.getReal(),1.0e-12);
  Assert.assertEquals(5 / FastMath.sqrt(50),distance.getPartialDerivative(1,0,0),1.0e-12);
  Assert.assertEquals(-4 / FastMath.sqrt(50),distance.getPartialDerivative(0,1,0),1.0e-12);
  Assert.assertEquals(3 / FastMath.sqrt(50),distance.getPartialDerivative(0,0,1),1.0e-12);
  distance=FieldVector3D.distance(new Vector3D(-4,2,0),v1);
  Assert.assertEquals(FastMath.sqrt(50),distance.getReal(),1.0e-12);
  Assert.assertEquals(5 / FastMath.sqrt(50),distance.getPartialDerivative(1,0,0),1.0e-12);
  Assert.assertEquals(-4 / FastMath.sqrt(50),distance.getPartialDerivative(0,1,0),1.0e-12);
  Assert.assertEquals(3 / FastMath.sqrt(50),distance.getPartialDerivative(0,0,1),1.0e-12);
}
