@Test public void testOverdetermined(){
  final Random r=new Random(5559252868205245l);
  int p=(7 * BlockRealMatrix.BLOCK_SIZE) / 4;
  int q=(5 * BlockRealMatrix.BLOCK_SIZE) / 4;
  RealMatrix a=createTestMatrix(r,p,q);
  RealMatrix xRef=createTestMatrix(r,q,BlockRealMatrix.BLOCK_SIZE + 3);
  RealMatrix b=a.multiply(xRef);
  final double noise=0.001;
  b.walkInOptimizedOrder(new DefaultRealMatrixChangingVisitor(){
    @Override public double visit(    int row,    int column,    double value){
      return value * (1.0 + noise * (2 * r.nextDouble() - 1));
    }
  }
);
  RealMatrix x=new RRQRDecomposition(a).getSolver().solve(b);
  Assert.assertEquals(0,x.subtract(xRef).getNorm(),0.01 * noise * p* q);
}
