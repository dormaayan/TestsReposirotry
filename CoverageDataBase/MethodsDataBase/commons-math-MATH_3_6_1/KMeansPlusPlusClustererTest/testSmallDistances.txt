/** 
 * Test points that are very close together. See issue MATH-546.
 */
@Test public void testSmallDistances(){
  int[] repeatedArray={0};
  int[] uniqueArray={1};
  DoublePoint repeatedPoint=new DoublePoint(repeatedArray);
  DoublePoint uniquePoint=new DoublePoint(uniqueArray);
  Collection<DoublePoint> points=new ArrayList<DoublePoint>();
  final int NUM_REPEATED_POINTS=10 * 1000;
  for (int i=0; i < NUM_REPEATED_POINTS; ++i) {
    points.add(repeatedPoint);
  }
  points.add(uniquePoint);
  final long RANDOM_SEED=0;
  final int NUM_CLUSTERS=2;
  final int NUM_ITERATIONS=0;
  random.setSeed(RANDOM_SEED);
  KMeansPlusPlusClusterer<DoublePoint> clusterer=new KMeansPlusPlusClusterer<DoublePoint>(NUM_CLUSTERS,NUM_ITERATIONS,new CloseDistance(),random);
  List<CentroidCluster<DoublePoint>> clusters=clusterer.cluster(points);
  boolean uniquePointIsCenter=false;
  for (  CentroidCluster<DoublePoint> cluster : clusters) {
    if (cluster.getCenter().equals(uniquePoint)) {
      uniquePointIsCenter=true;
    }
  }
  Assert.assertTrue(uniquePointIsCenter);
}
