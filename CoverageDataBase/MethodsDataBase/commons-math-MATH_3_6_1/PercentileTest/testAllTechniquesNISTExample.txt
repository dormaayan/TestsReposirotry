@Test public void testAllTechniquesNISTExample(){
  final double[] d=new double[]{95.1772,95.1567,95.1937,95.1959,95.1442,95.0610,95.1591,95.1195,95.1772,95.0925,95.1990,95.1682};
  testAssertMappedValues(d,new Object[][]{{Percentile.EstimationType.LEGACY,95.1981},{Percentile.EstimationType.R_1,95.19590},{Percentile.EstimationType.R_2,95.19590},{Percentile.EstimationType.R_3,95.19590},{Percentile.EstimationType.R_4,95.19546},{Percentile.EstimationType.R_5,95.19683},{Percentile.EstimationType.R_6,95.19807},{Percentile.EstimationType.R_7,95.19568},{Percentile.EstimationType.R_8,95.19724},{Percentile.EstimationType.R_9,95.19714}},90d,1.0e-04);
  for (  final Percentile.EstimationType e : Percentile.EstimationType.values()) {
    reset(100.0,e);
    Assert.assertEquals(95.1990,getUnivariateStatistic().evaluate(d),1.0e-4);
  }
}
