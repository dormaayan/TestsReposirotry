@Test public void testAllEstimationTechniquesOnlyForNullsAndOOR(){
  final Object[][] map=new Object[][]{{Percentile.EstimationType.LEGACY,20.82},{Percentile.EstimationType.R_1,19.8},{Percentile.EstimationType.R_2,19.8},{Percentile.EstimationType.R_3,19.8},{Percentile.EstimationType.R_4,19.310},{Percentile.EstimationType.R_5,20.280},{Percentile.EstimationType.R_6,20.820},{Percentile.EstimationType.R_7,19.555},{Percentile.EstimationType.R_8,20.460},{Percentile.EstimationType.R_9,20.415}};
  for (  final Object[] o : map) {
    final Percentile.EstimationType e=(Percentile.EstimationType)o[0];
    try {
      e.evaluate(null,DEFAULT_PERCENTILE,new KthSelector());
      Assert.fail("Expecting NullArgumentException");
    }
 catch (    final NullArgumentException nae) {
    }
    try {
      e.evaluate(testArray,120,new KthSelector());
      Assert.fail("Expecting OutOfRangeException");
    }
 catch (    final OutOfRangeException oore) {
    }
  }
}
