@Test public void testIterationConsistency(){
  final MultidimensionalCounter c=new MultidimensionalCounter(2,3,4);
  final int[][] expected=new int[][]{{0,0,0},{0,0,1},{0,0,2},{0,0,3},{0,1,0},{0,1,1},{0,1,2},{0,1,3},{0,2,0},{0,2,1},{0,2,2},{0,2,3},{1,0,0},{1,0,1},{1,0,2},{1,0,3},{1,1,0},{1,1,1},{1,1,2},{1,1,3},{1,2,0},{1,2,1},{1,2,2},{1,2,3}};
  final int totalSize=c.getSize();
  Assert.assertEquals(expected.length,totalSize);
  final int nDim=c.getDimension();
  final MultidimensionalCounter.Iterator iter=c.iterator();
  for (int i=0; i < totalSize; i++) {
    if (!iter.hasNext()) {
      Assert.fail("Too short");
    }
    final int uniDimIndex=iter.next().intValue();
    Assert.assertEquals("Wrong iteration at " + i,i,uniDimIndex);
    for (int dimIndex=0; dimIndex < nDim; dimIndex++) {
      Assert.assertEquals("Wrong multidimensional index for [" + i + "]["+ dimIndex+ "]",expected[i][dimIndex],iter.getCount(dimIndex));
    }
    Assert.assertEquals("Wrong unidimensional index for [" + i + "]",c.getCount(expected[i]),uniDimIndex);
    final int[] indices=c.getCounts(uniDimIndex);
    for (int dimIndex=0; dimIndex < nDim; dimIndex++) {
      Assert.assertEquals("Wrong multidimensional index for [" + i + "]["+ dimIndex+ "]",expected[i][dimIndex],indices[dimIndex]);
    }
  }
  if (iter.hasNext()) {
    Assert.fail("Too long");
  }
}
