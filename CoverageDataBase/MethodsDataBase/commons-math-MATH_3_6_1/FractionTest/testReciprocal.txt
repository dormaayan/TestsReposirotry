@Test public void testReciprocal(){
  Fraction f=null;
  f=new Fraction(50,75);
  f=f.reciprocal();
  Assert.assertEquals(3,f.getNumerator());
  Assert.assertEquals(2,f.getDenominator());
  f=new Fraction(4,3);
  f=f.reciprocal();
  Assert.assertEquals(3,f.getNumerator());
  Assert.assertEquals(4,f.getDenominator());
  f=new Fraction(-15,47);
  f=f.reciprocal();
  Assert.assertEquals(-47,f.getNumerator());
  Assert.assertEquals(15,f.getDenominator());
  f=new Fraction(0,3);
  try {
    f=f.reciprocal();
    Assert.fail("expecting MathArithmeticException");
  }
 catch (  MathArithmeticException ex) {
  }
  f=new Fraction(Integer.MAX_VALUE,1);
  f=f.reciprocal();
  Assert.assertEquals(1,f.getNumerator());
  Assert.assertEquals(Integer.MAX_VALUE,f.getDenominator());
}
