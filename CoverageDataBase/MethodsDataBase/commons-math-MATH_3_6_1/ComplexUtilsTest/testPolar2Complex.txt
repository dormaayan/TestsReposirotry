@Test public void testPolar2Complex(){
  TestUtils.assertEquals(Complex.ONE,ComplexUtils.polar2Complex(1,0),10e-12);
  TestUtils.assertEquals(Complex.ZERO,ComplexUtils.polar2Complex(0,1),10e-12);
  TestUtils.assertEquals(Complex.ZERO,ComplexUtils.polar2Complex(0,-1),10e-12);
  TestUtils.assertEquals(Complex.I,ComplexUtils.polar2Complex(1,pi / 2),10e-12);
  TestUtils.assertEquals(Complex.I.negate(),ComplexUtils.polar2Complex(1,-pi / 2),10e-12);
  double r=0;
  for (int i=0; i < 5; i++) {
    r+=i;
    double theta=0;
    for (int j=0; j < 20; j++) {
      theta+=pi / 6;
      TestUtils.assertEquals(altPolar(r,theta),ComplexUtils.polar2Complex(r,theta),10e-12);
    }
    theta=-2 * pi;
    for (int j=0; j < 20; j++) {
      theta-=pi / 6;
      TestUtils.assertEquals(altPolar(r,theta),ComplexUtils.polar2Complex(r,theta),10e-12);
    }
  }
}
