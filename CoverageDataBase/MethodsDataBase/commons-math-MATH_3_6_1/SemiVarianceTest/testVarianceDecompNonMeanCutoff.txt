/** 
 * Check that upper and lower semivariances against a cutoff sum to the sum of squared deviations of the full set of values against the cutoff divided by df = length - 1 (assuming bias-corrected).
 */
@Test public void testVarianceDecompNonMeanCutoff(){
  double[] values={-2.0d,2.0d,4.0d,-2.0d,22.0d,11.0d,3.0d,14.0d,5.0d};
  double target=0;
  double totalSumOfSquares=TestUtils.sumSquareDev(values,target);
  SemiVariance sv=new SemiVariance(true);
  sv.setVarianceDirection(SemiVariance.DOWNSIDE_VARIANCE);
  double lower=sv.evaluate(values,target);
  sv.setVarianceDirection(SemiVariance.UPSIDE_VARIANCE);
  double upper=sv.evaluate(values,target);
  Assert.assertEquals(totalSumOfSquares / (values.length - 1),lower + upper,10e-12);
}
