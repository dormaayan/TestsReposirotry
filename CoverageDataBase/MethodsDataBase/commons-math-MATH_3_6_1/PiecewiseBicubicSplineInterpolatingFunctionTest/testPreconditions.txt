/** 
 * Test preconditions.
 */
@Test public void testPreconditions(){
  double[] xval=new double[]{3,4,5,6.5,7.5};
  double[] yval=new double[]{-4,-3,-1,2.5,3.5};
  double[][] zval=new double[xval.length][yval.length];
  @SuppressWarnings("unused") PiecewiseBicubicSplineInterpolatingFunction bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,yval,zval);
  try {
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(null,yval,zval);
    Assert.fail("Failed to detect x null pointer");
  }
 catch (  NullArgumentException iae) {
  }
  try {
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,null,zval);
    Assert.fail("Failed to detect y null pointer");
  }
 catch (  NullArgumentException iae) {
  }
  try {
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,yval,null);
    Assert.fail("Failed to detect z null pointer");
  }
 catch (  NullArgumentException iae) {
  }
  try {
    double xval1[]={0.0,1.0,2.0,3.0};
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval1,yval,zval);
    Assert.fail("Failed to detect insufficient x data");
  }
 catch (  InsufficientDataException iae) {
  }
  try {
    double yval1[]={0.0,1.0,2.0,3.0};
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,yval1,zval);
    Assert.fail("Failed to detect insufficient y data");
  }
 catch (  InsufficientDataException iae) {
  }
  try {
    double zval1[][]=new double[4][4];
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,yval,zval1);
    Assert.fail("Failed to detect insufficient z data");
  }
 catch (  InsufficientDataException iae) {
  }
  try {
    double xval1[]={0.0,1.0,2.0,3.0,4.0,5.0,6.0};
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval1,yval,zval);
    Assert.fail("Failed to detect data set array with different sizes.");
  }
 catch (  DimensionMismatchException iae) {
  }
  try {
    double yval1[]={0.0,1.0,2.0,3.0,4.0,5.0,6.0};
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,yval1,zval);
    Assert.fail("Failed to detect data set array with different sizes.");
  }
 catch (  DimensionMismatchException iae) {
  }
  try {
    double xval1[]={0.0,1.0,0.5,7.0,3.5};
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval1,yval,zval);
    Assert.fail("Failed to detect unsorted x arguments.");
  }
 catch (  NonMonotonicSequenceException iae) {
  }
  try {
    double yval1[]={0.0,1.0,1.5,0.0,3.0};
    bcf=new PiecewiseBicubicSplineInterpolatingFunction(xval,yval1,zval);
    Assert.fail("Failed to detect unsorted y arguments.");
  }
 catch (  NonMonotonicSequenceException iae) {
  }
}
