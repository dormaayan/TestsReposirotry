/** 
 * Test for a paraboloid. <p> z = 2 x<sup>2</sup> - 3 y<sup>2</sup> + 4 x y - 5
 */
@Ignore @Test public void testParaboloid(){
  double[] xval=new double[]{3,4,5,6.5};
  double[] yval=new double[]{-4,-3,-1,2,2.5};
  BivariateFunction f=new BivariateFunction(){
    public double value(    double x,    double y){
      return 2 * x * x - 3 * y * y + 4 * x * y - 5;
    }
  }
;
  double[][] zval=new double[xval.length][yval.length];
  for (int i=0; i < xval.length; i++) {
    for (int j=0; j < yval.length; j++) {
      zval[i][j]=f.value(xval[i],yval[j]);
    }
  }
  double[][] dZdX=new double[xval.length][yval.length];
  BivariateFunction dfdX=new BivariateFunction(){
    public double value(    double x,    double y){
      return 4 * (x + y);
    }
  }
;
  for (int i=0; i < xval.length; i++) {
    for (int j=0; j < yval.length; j++) {
      dZdX[i][j]=dfdX.value(xval[i],yval[j]);
    }
  }
  double[][] dZdY=new double[xval.length][yval.length];
  BivariateFunction dfdY=new BivariateFunction(){
    public double value(    double x,    double y){
      return 4 * x - 6 * y;
    }
  }
;
  for (int i=0; i < xval.length; i++) {
    for (int j=0; j < yval.length; j++) {
      dZdY[i][j]=dfdY.value(xval[i],yval[j]);
    }
  }
  double[][] dZdXdY=new double[xval.length][yval.length];
  for (int i=0; i < xval.length; i++) {
    for (int j=0; j < yval.length; j++) {
      dZdXdY[i][j]=4;
    }
  }
  BivariateFunction bcf=new BicubicSplineInterpolatingFunction(xval,yval,zval,dZdX,dZdY,dZdXdY);
  double x, y;
  double expected, result;
  x=4;
  y=-3;
  expected=f.value(x,y);
  result=bcf.value(x,y);
  Assert.assertEquals("On sample point",expected,result,1e-15);
  x=4.5;
  y=-1.5;
  expected=f.value(x,y);
  result=bcf.value(x,y);
  Assert.assertEquals("Half-way between sample points (middle of the patch)",expected,result,2);
  x=3.5;
  y=-3.5;
  expected=f.value(x,y);
  result=bcf.value(x,y);
  Assert.assertEquals("Half-way between sample points (border of the patch)",expected,result,2);
}
