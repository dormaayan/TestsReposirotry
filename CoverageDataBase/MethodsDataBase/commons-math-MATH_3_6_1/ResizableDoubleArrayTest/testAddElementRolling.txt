@Override @Test public void testAddElementRolling(){
  super.testAddElementRolling();
  da.clear();
  da.addElement(1);
  da.addElement(2);
  da.addElementRolling(3);
  Assert.assertEquals(3,da.getElement(1),0);
  da.addElementRolling(4);
  Assert.assertEquals(3,da.getElement(0),0);
  Assert.assertEquals(4,da.getElement(1),0);
  da.addElement(5);
  Assert.assertEquals(5,da.getElement(2),0);
  da.addElementRolling(6);
  Assert.assertEquals(4,da.getElement(0),0);
  Assert.assertEquals(5,da.getElement(1),0);
  Assert.assertEquals(6,da.getElement(2),0);
  ResizableDoubleArray testDa=new ResizableDoubleArray(2,2.0,2.5,ResizableDoubleArray.ExpansionMode.ADDITIVE);
  Assert.assertEquals(2,testDa.getCapacity());
  testDa.addElement(1d);
  testDa.addElement(2d);
  testDa.addElement(3d);
  Assert.assertEquals(1d,testDa.getElement(0),0);
  Assert.assertEquals(2d,testDa.getElement(1),0);
  Assert.assertEquals(3d,testDa.getElement(2),0);
  Assert.assertEquals(4,testDa.getCapacity());
  Assert.assertEquals(3,testDa.getNumElements());
  testDa.addElementRolling(4d);
  Assert.assertEquals(2d,testDa.getElement(0),0);
  Assert.assertEquals(3d,testDa.getElement(1),0);
  Assert.assertEquals(4d,testDa.getElement(2),0);
  Assert.assertEquals(4,testDa.getCapacity());
  Assert.assertEquals(3,testDa.getNumElements());
  testDa.addElementRolling(5d);
  Assert.assertEquals(3d,testDa.getElement(0),0);
  Assert.assertEquals(4d,testDa.getElement(1),0);
  Assert.assertEquals(5d,testDa.getElement(2),0);
  Assert.assertEquals(4,testDa.getCapacity());
  Assert.assertEquals(3,testDa.getNumElements());
  try {
    testDa.getElement(4);
    Assert.fail("Expecting ArrayIndexOutOfBoundsException");
  }
 catch (  ArrayIndexOutOfBoundsException ex) {
  }
  try {
    testDa.getElement(-1);
    Assert.fail("Expecting ArrayIndexOutOfBoundsException");
  }
 catch (  ArrayIndexOutOfBoundsException ex) {
  }
}
