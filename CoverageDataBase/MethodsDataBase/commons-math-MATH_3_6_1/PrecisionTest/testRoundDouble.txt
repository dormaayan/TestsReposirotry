@Test public void testRoundDouble(){
  double x=1.234567890;
  Assert.assertEquals(1.23,Precision.round(x,2),0.0);
  Assert.assertEquals(1.235,Precision.round(x,3),0.0);
  Assert.assertEquals(1.2346,Precision.round(x,4),0.0);
  Assert.assertEquals(39.25,Precision.round(39.245,2),0.0);
  Assert.assertEquals(39.24,Precision.round(39.245,2,BigDecimal.ROUND_DOWN),0.0);
  double xx=39.0;
  xx+=245d / 1000d;
  Assert.assertEquals(39.25,Precision.round(xx,2),0.0);
  Assert.assertEquals(30.1d,Precision.round(30.095d,2),0.0d);
  Assert.assertEquals(30.1d,Precision.round(30.095d,1),0.0d);
  Assert.assertEquals(33.1d,Precision.round(33.095d,1),0.0d);
  Assert.assertEquals(33.1d,Precision.round(33.095d,2),0.0d);
  Assert.assertEquals(50.09d,Precision.round(50.085d,2),0.0d);
  Assert.assertEquals(50.19d,Precision.round(50.185d,2),0.0d);
  Assert.assertEquals(50.01d,Precision.round(50.005d,2),0.0d);
  Assert.assertEquals(30.01d,Precision.round(30.005d,2),0.0d);
  Assert.assertEquals(30.65d,Precision.round(30.645d,2),0.0d);
  Assert.assertEquals(1.24,Precision.round(x,2,BigDecimal.ROUND_CEILING),0.0);
  Assert.assertEquals(1.235,Precision.round(x,3,BigDecimal.ROUND_CEILING),0.0);
  Assert.assertEquals(1.2346,Precision.round(x,4,BigDecimal.ROUND_CEILING),0.0);
  Assert.assertEquals(-1.23,Precision.round(-x,2,BigDecimal.ROUND_CEILING),0.0);
  Assert.assertEquals(-1.234,Precision.round(-x,3,BigDecimal.ROUND_CEILING),0.0);
  Assert.assertEquals(-1.2345,Precision.round(-x,4,BigDecimal.ROUND_CEILING),0.0);
  Assert.assertEquals(1.23,Precision.round(x,2,BigDecimal.ROUND_DOWN),0.0);
  Assert.assertEquals(1.234,Precision.round(x,3,BigDecimal.ROUND_DOWN),0.0);
  Assert.assertEquals(1.2345,Precision.round(x,4,BigDecimal.ROUND_DOWN),0.0);
  Assert.assertEquals(-1.23,Precision.round(-x,2,BigDecimal.ROUND_DOWN),0.0);
  Assert.assertEquals(-1.234,Precision.round(-x,3,BigDecimal.ROUND_DOWN),0.0);
  Assert.assertEquals(-1.2345,Precision.round(-x,4,BigDecimal.ROUND_DOWN),0.0);
  Assert.assertEquals(1.23,Precision.round(x,2,BigDecimal.ROUND_FLOOR),0.0);
  Assert.assertEquals(1.234,Precision.round(x,3,BigDecimal.ROUND_FLOOR),0.0);
  Assert.assertEquals(1.2345,Precision.round(x,4,BigDecimal.ROUND_FLOOR),0.0);
  Assert.assertEquals(-1.24,Precision.round(-x,2,BigDecimal.ROUND_FLOOR),0.0);
  Assert.assertEquals(-1.235,Precision.round(-x,3,BigDecimal.ROUND_FLOOR),0.0);
  Assert.assertEquals(-1.2346,Precision.round(-x,4,BigDecimal.ROUND_FLOOR),0.0);
  Assert.assertEquals(1.23,Precision.round(x,2,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(1.235,Precision.round(x,3,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(1.2346,Precision.round(x,4,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(-1.23,Precision.round(-x,2,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(-1.235,Precision.round(-x,3,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(-1.2346,Precision.round(-x,4,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(1.234,Precision.round(1.2345,3,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(-1.234,Precision.round(-1.2345,3,BigDecimal.ROUND_HALF_DOWN),0.0);
  Assert.assertEquals(1.23,Precision.round(x,2,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(1.235,Precision.round(x,3,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(1.2346,Precision.round(x,4,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(-1.23,Precision.round(-x,2,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(-1.235,Precision.round(-x,3,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(-1.2346,Precision.round(-x,4,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(1.234,Precision.round(1.2345,3,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(-1.234,Precision.round(-1.2345,3,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(1.236,Precision.round(1.2355,3,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(-1.236,Precision.round(-1.2355,3,BigDecimal.ROUND_HALF_EVEN),0.0);
  Assert.assertEquals(1.23,Precision.round(x,2,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(1.235,Precision.round(x,3,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(1.2346,Precision.round(x,4,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(-1.23,Precision.round(-x,2,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(-1.235,Precision.round(-x,3,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(-1.2346,Precision.round(-x,4,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(1.235,Precision.round(1.2345,3,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(-1.235,Precision.round(-1.2345,3,BigDecimal.ROUND_HALF_UP),0.0);
  Assert.assertEquals(-1.23,Precision.round(-1.23,2,BigDecimal.ROUND_UNNECESSARY),0.0);
  Assert.assertEquals(1.23,Precision.round(1.23,2,BigDecimal.ROUND_UNNECESSARY),0.0);
  try {
    Precision.round(1.234,2,BigDecimal.ROUND_UNNECESSARY);
    Assert.fail();
  }
 catch (  ArithmeticException ex) {
  }
  Assert.assertEquals(1.24,Precision.round(x,2,BigDecimal.ROUND_UP),0.0);
  Assert.assertEquals(1.235,Precision.round(x,3,BigDecimal.ROUND_UP),0.0);
  Assert.assertEquals(1.2346,Precision.round(x,4,BigDecimal.ROUND_UP),0.0);
  Assert.assertEquals(-1.24,Precision.round(-x,2,BigDecimal.ROUND_UP),0.0);
  Assert.assertEquals(-1.235,Precision.round(-x,3,BigDecimal.ROUND_UP),0.0);
  Assert.assertEquals(-1.2346,Precision.round(-x,4,BigDecimal.ROUND_UP),0.0);
  try {
    Precision.round(1.234,2,1923);
    Assert.fail();
  }
 catch (  IllegalArgumentException ex) {
  }
  Assert.assertEquals(39.25,Precision.round(39.245,2,BigDecimal.ROUND_HALF_UP),0.0);
  TestUtils.assertEquals(Double.NaN,Precision.round(Double.NaN,2),0.0);
  Assert.assertEquals(0.0,Precision.round(0.0,2),0.0);
  Assert.assertEquals(Double.POSITIVE_INFINITY,Precision.round(Double.POSITIVE_INFINITY,2),0.0);
  Assert.assertEquals(Double.NEGATIVE_INFINITY,Precision.round(Double.NEGATIVE_INFINITY,2),0.0);
  Assert.assertEquals("-0.0",Double.toString(Precision.round(-0.0,0)));
  Assert.assertEquals("-0.0",Double.toString(Precision.round(-1e-10,0)));
}
