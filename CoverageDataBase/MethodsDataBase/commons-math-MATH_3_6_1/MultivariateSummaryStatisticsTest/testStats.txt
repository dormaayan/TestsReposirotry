/** 
 * test stats 
 */
@Test public void testStats(){
  MultivariateSummaryStatistics u=createMultivariateSummaryStatistics(2,true);
  Assert.assertEquals(0,u.getN());
  u.addValue(new double[]{1,2});
  u.addValue(new double[]{2,3});
  u.addValue(new double[]{2,3});
  u.addValue(new double[]{3,4});
  Assert.assertEquals(4,u.getN());
  Assert.assertEquals(8,u.getSum()[0],1.0e-10);
  Assert.assertEquals(12,u.getSum()[1],1.0e-10);
  Assert.assertEquals(18,u.getSumSq()[0],1.0e-10);
  Assert.assertEquals(38,u.getSumSq()[1],1.0e-10);
  Assert.assertEquals(1,u.getMin()[0],1.0e-10);
  Assert.assertEquals(2,u.getMin()[1],1.0e-10);
  Assert.assertEquals(3,u.getMax()[0],1.0e-10);
  Assert.assertEquals(4,u.getMax()[1],1.0e-10);
  Assert.assertEquals(2.4849066497880003102,u.getSumLog()[0],1.0e-10);
  Assert.assertEquals(4.276666119016055311,u.getSumLog()[1],1.0e-10);
  Assert.assertEquals(1.8612097182041991979,u.getGeometricMean()[0],1.0e-10);
  Assert.assertEquals(2.9129506302439405217,u.getGeometricMean()[1],1.0e-10);
  Assert.assertEquals(2,u.getMean()[0],1.0e-10);
  Assert.assertEquals(3,u.getMean()[1],1.0e-10);
  Assert.assertEquals(FastMath.sqrt(2.0 / 3.0),u.getStandardDeviation()[0],1.0e-10);
  Assert.assertEquals(FastMath.sqrt(2.0 / 3.0),u.getStandardDeviation()[1],1.0e-10);
  Assert.assertEquals(2.0 / 3.0,u.getCovariance().getEntry(0,0),1.0e-10);
  Assert.assertEquals(2.0 / 3.0,u.getCovariance().getEntry(0,1),1.0e-10);
  Assert.assertEquals(2.0 / 3.0,u.getCovariance().getEntry(1,0),1.0e-10);
  Assert.assertEquals(2.0 / 3.0,u.getCovariance().getEntry(1,1),1.0e-10);
  u.clear();
  Assert.assertEquals(0,u.getN());
}
