@Test public void testMath434PivotRowSelection2(){
  LinearObjectiveFunction f=new LinearObjectiveFunction(new double[]{0.0d,1.0d,1.0d,0.0d,0.0d,0.0d,0.0d},0.0d);
  ArrayList<LinearConstraint> constraints=new ArrayList<LinearConstraint>();
  constraints.add(new LinearConstraint(new double[]{1.0d,-0.1d,0.0d,0.0d,0.0d,0.0d,0.0d},Relationship.EQ,-0.1d));
  constraints.add(new LinearConstraint(new double[]{1.0d,0.0d,0.0d,0.0d,0.0d,0.0d,0.0d},Relationship.GEQ,-1e-18d));
  constraints.add(new LinearConstraint(new double[]{0.0d,1.0d,0.0d,0.0d,0.0d,0.0d,0.0d},Relationship.GEQ,0.0d));
  constraints.add(new LinearConstraint(new double[]{0.0d,0.0d,0.0d,1.0d,0.0d,-0.0128588d,1e-5d},Relationship.EQ,0.0d));
  constraints.add(new LinearConstraint(new double[]{0.0d,0.0d,0.0d,0.0d,1.0d,1e-5d,-0.0128586d},Relationship.EQ,1e-10d));
  constraints.add(new LinearConstraint(new double[]{0.0d,0.0d,1.0d,-1.0d,0.0d,0.0d,0.0d},Relationship.GEQ,0.0d));
  constraints.add(new LinearConstraint(new double[]{0.0d,0.0d,1.0d,1.0d,0.0d,0.0d,0.0d},Relationship.GEQ,0.0d));
  constraints.add(new LinearConstraint(new double[]{0.0d,0.0d,1.0d,0.0d,-1.0d,0.0d,0.0d},Relationship.GEQ,0.0d));
  constraints.add(new LinearConstraint(new double[]{0.0d,0.0d,1.0d,0.0d,1.0d,0.0d,0.0d},Relationship.GEQ,0.0d));
  double epsilon=1e-7;
  SimplexSolver simplex=new SimplexSolver();
  PointValuePair solution=simplex.optimize(DEFAULT_MAX_ITER,f,new LinearConstraintSet(constraints),GoalType.MINIMIZE,new NonNegativeConstraint(false));
  Assert.assertTrue(Precision.compareTo(solution.getPoint()[0],-1e-18d,epsilon) >= 0);
  Assert.assertEquals(1.0d,solution.getPoint()[1],epsilon);
  Assert.assertEquals(0.0d,solution.getPoint()[2],epsilon);
  Assert.assertEquals(1.0d,solution.getValue(),epsilon);
}
