@Test public void testSolutionCallback(){
  LinearObjectiveFunction f=new LinearObjectiveFunction(new double[]{7,3,0,0},0);
  List<LinearConstraint> constraints=new ArrayList<LinearConstraint>();
  constraints.add(new LinearConstraint(new double[]{3,0,-5,0},Relationship.LEQ,0.0));
  constraints.add(new LinearConstraint(new double[]{2,0,0,-5},Relationship.LEQ,0.0));
  constraints.add(new LinearConstraint(new double[]{0,3,0,-5},Relationship.LEQ,0.0));
  constraints.add(new LinearConstraint(new double[]{1,0,0,0},Relationship.LEQ,1.0));
  constraints.add(new LinearConstraint(new double[]{0,1,0,0},Relationship.LEQ,1.0));
  final SimplexSolver solver=new SimplexSolver();
  final SolutionCallback callback=new SolutionCallback();
  Assert.assertNull(callback.getSolution());
  Assert.assertFalse(callback.isSolutionOptimal());
  try {
    solver.optimize(new MaxIter(3),f,new LinearConstraintSet(constraints),GoalType.MAXIMIZE,new NonNegativeConstraint(true),callback);
    Assert.fail("expected TooManyIterationsException");
  }
 catch (  TooManyIterationsException ex) {
  }
  final PointValuePair solution=callback.getSolution();
  Assert.assertNotNull(solution);
  Assert.assertTrue(validSolution(solution,constraints,1e-4));
  Assert.assertFalse(callback.isSolutionOptimal());
  Assert.assertEquals(7.0,solution.getValue(),1e-4);
}
