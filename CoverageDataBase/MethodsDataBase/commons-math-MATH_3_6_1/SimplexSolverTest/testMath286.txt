@Test public void testMath286(){
  LinearObjectiveFunction f=new LinearObjectiveFunction(new double[]{0.8,0.2,0.7,0.3,0.6,0.4},0);
  Collection<LinearConstraint> constraints=new ArrayList<LinearConstraint>();
  constraints.add(new LinearConstraint(new double[]{1,0,1,0,1,0},Relationship.EQ,23.0));
  constraints.add(new LinearConstraint(new double[]{0,1,0,1,0,1},Relationship.EQ,23.0));
  constraints.add(new LinearConstraint(new double[]{1,0,0,0,0,0},Relationship.GEQ,10.0));
  constraints.add(new LinearConstraint(new double[]{0,0,1,0,0,0},Relationship.GEQ,8.0));
  constraints.add(new LinearConstraint(new double[]{0,0,0,0,1,0},Relationship.GEQ,5.0));
  SimplexSolver solver=new SimplexSolver();
  PointValuePair solution=solver.optimize(DEFAULT_MAX_ITER,f,new LinearConstraintSet(constraints),GoalType.MAXIMIZE,new NonNegativeConstraint(true));
  Assert.assertEquals(25.8,solution.getValue(),.0000001);
  Assert.assertEquals(23.0,solution.getPoint()[0] + solution.getPoint()[2] + solution.getPoint()[4],0.0000001);
  Assert.assertEquals(23.0,solution.getPoint()[1] + solution.getPoint()[3] + solution.getPoint()[5],0.0000001);
  Assert.assertTrue(solution.getPoint()[0] >= 10.0 - 0.0000001);
  Assert.assertTrue(solution.getPoint()[2] >= 8.0 - 0.0000001);
  Assert.assertTrue(solution.getPoint()[4] >= 5.0 - 0.0000001);
}
