@Test public void testWithOptimer(){
  setupClient();
  final MetricsRegistry registry=new MetricsRegistry();
  final MetricsOpTimer opTimer=new MetricsOpTimer(registry,"TEST_CLUSTER",TimeUnit.NANOSECONDS,TimeUnit.SECONDS);
  connectionManager.setTimer(opTimer);
  connectionManager.operateWithFailover(new NullOp());
  final SortedMap<String,SortedMap<MetricName,Metric>> metrics=registry.groupedMetrics();
  assertNotNull("Hector metric should exist in metrics registry",metrics);
  assertFalse("Hector metrics should exist in metrics register",metrics.isEmpty());
  final Entry<String,SortedMap<MetricName,Metric>> entry=metrics.entrySet().iterator().next();
  assertEquals("Incorrect metrics key should be [cluster_name].hector","TEST_CLUSTER.hector",entry.getKey());
  final Entry<MetricName,Metric> metric=entry.getValue().entrySet().iterator().next();
  assertEquals("Incorrect metrics name should be META_READ","META_READ",metric.getKey().getName());
  assertEquals("Incorrect metrics type should be timer",Timer.class,metric.getValue().getClass());
}
