@Test public void testCustomClassLoader() throws Exception {
  ClassLoader bootstrapClassLoader=ClassLoader.getSystemClassLoader().getParent();
  URLClassLoader thisClassLoader=(URLClassLoader)SampleObject.class.getClassLoader();
  ClassLoader customClassLoader=new URLClassLoader(thisClassLoader.getURLs(),bootstrapClassLoader);
  Class<?> sampleObjectClassOtherClassLoader=customClassLoader.loadClass(SampleObject.class.getName());
  Constructor<?> constructor=null;
  final Constructor<?>[] declaredConstructors=sampleObjectClassOtherClassLoader.getDeclaredConstructors();
  for (  Constructor<?> con : declaredConstructors) {
    if (con.getParameterTypes().length == 0) {
      con.setAccessible(true);
      constructor=con;
      break;
    }
  }
  Object sampleObjectOtherCl=constructor.newInstance();
  ObjectSerializer ser=new ObjectSerializer(customClassLoader);
  Object deserialized=ser.fromByteBuffer(ser.toByteBuffer(sampleObjectOtherCl));
  assertFalse(deserialized.getClass() == SampleObject.class);
  assertTrue(deserialized.getClass() == sampleObjectClassOtherClassLoader);
  assertEquals(sampleObjectOtherCl,deserialized);
}
