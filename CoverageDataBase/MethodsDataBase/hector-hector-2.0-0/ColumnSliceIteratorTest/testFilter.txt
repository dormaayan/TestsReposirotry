@Test public void testFilter(){
  cluster.truncate(keyspace.getKeyspaceName(),CF);
  Mutator<String> m=createMutator(keyspace,se);
  for (int i=0; i < 500; i++) {
    m.addInsertion(KEY,CF,createColumn("a" + i,String.valueOf(i),se,se));
    m.addInsertion(KEY,CF,createColumn("b" + i,String.valueOf(i),se,se));
    m.addInsertion(KEY,CF,createColumn("c" + i,String.valueOf(i),se,se));
  }
  m.execute();
  SliceQuery<String,String,String> query=HFactory.createSliceQuery(keyspace,se,se,se).setKey(KEY).setColumnFamily(CF);
  ColumnSliceIterator<String,String,String> it=new ColumnSliceIterator<String,String,String>(query,"a","d",false,2).setFilter(new SliceFilter<HColumn<String,String>>(){
    @Override public boolean accept(    HColumn<String,String> column){
      return !column.getName().startsWith("b");
    }
  }
);
  List<String> results=new ArrayList<String>(1000);
  while (it.hasNext()) {
    HColumn<String,String> c=it.next();
    String name=c.getName();
    assertFalse(name.equals("b"));
    results.add(name);
  }
  assertEquals(1000,results.size());
}
