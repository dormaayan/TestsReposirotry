@Test public void testSkipExhausted(){
  dynBalancingPolicy=new DynamicLoadBalancingPolicy();
  dynBalancingPolicy.add(poolWithScore10);
  Mockito.when(poolWithScore10.score()).thenReturn(100.0);
  Mockito.when(poolWithScore10.getCassandraHost()).thenReturn(new CassandraHost("127.0.0.3:9162"));
  dynBalancingPolicy.add(poolWithScore7);
  Mockito.when(poolWithScore7.score()).thenReturn(7.0);
  Mockito.when(poolWithScore7.getCassandraHost()).thenReturn(new CassandraHost("127.0.0.2:9161"));
  dynBalancingPolicy.add(poolWithScore5);
  Mockito.when(poolWithScore5.score()).thenReturn(5.0);
  Mockito.when(poolWithScore5.getCassandraHost()).thenReturn(new CassandraHost("127.0.0.1:9160"));
  dynBalancingPolicy.updateScores();
  assertEquals(poolWithScore7,dynBalancingPolicy.getPool(pools,new HashSet<CassandraHost>(Arrays.asList(new CassandraHost("127.0.0.1:9160")))));
  assertEquals(poolWithScore5,dynBalancingPolicy.getPool(pools,new HashSet<CassandraHost>(Arrays.asList(new CassandraHost("127.0.0.3:9162")))));
}
