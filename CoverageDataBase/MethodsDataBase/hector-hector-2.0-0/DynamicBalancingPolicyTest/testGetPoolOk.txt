@Test public void testGetPoolOk(){
  dynBalancingPolicy=new DynamicLoadBalancingPolicy();
  dynBalancingPolicy.add(poolWithScore10);
  dynBalancingPolicy.add(poolWithScore7);
  dynBalancingPolicy.add(poolWithScore5);
  dynBalancingPolicy.updateScores();
  assertEquals(poolWithScore5,dynBalancingPolicy.getPool(pools,null));
  assertEquals(poolWithScore5,dynBalancingPolicy.getPool(pools,null));
  assertEquals(poolWithScore5,dynBalancingPolicy.getPool(pools,null));
  Mockito.when(poolWithScore5.score()).thenReturn(8.0);
  dynBalancingPolicy.updateScores();
  assertEquals(poolWithScore7,dynBalancingPolicy.getPool(pools,null));
  assertEquals(poolWithScore7,dynBalancingPolicy.getPool(pools,null));
  assertEquals(poolWithScore7,dynBalancingPolicy.getPool(pools,null));
  Mockito.when(poolWithScore10.score()).thenReturn(4.0);
  dynBalancingPolicy.updateScores();
  assertEquals(poolWithScore10,dynBalancingPolicy.getPool(pools,null));
  assertEquals(poolWithScore10,dynBalancingPolicy.getPool(pools,null));
  assertEquals(poolWithScore10,dynBalancingPolicy.getPool(pools,null));
}
