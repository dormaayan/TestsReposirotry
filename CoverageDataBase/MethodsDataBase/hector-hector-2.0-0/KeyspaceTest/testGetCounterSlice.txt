@Test public void testGetCounterSlice() throws HectorException {
  ArrayList<ByteBuffer> columnnames=new ArrayList<ByteBuffer>(50);
  final StringSerializer ss=StringSerializer.get();
  for (int i=0; i < 100; i++) {
    ColumnParent cp=new ColumnParent("Counter1");
    keyspace.addCounter("testGetCounterSlice",cp,createCounterColumn("testGetCounterSlice_" + i,i));
    if (i < 50) {
      columnnames.add(ss.toByteBuffer("testGetCounterSlice_" + i));
    }
  }
  ColumnParent clp=new ColumnParent("Counter1");
  SlicePredicate sp=new SlicePredicate();
  sp.setColumn_names(columnnames);
  List<CounterColumn> cols=keyspace.getCounterSlice("testGetCounterSlice",clp,sp);
  assertNotNull(cols);
  assertEquals(50,cols.size());
  Collections.sort(columnnames);
  ArrayList<ByteBuffer> gotlist=new ArrayList<ByteBuffer>(50);
  for (int i=0; i < 50; i++) {
    CounterColumn cc=cols.get(i);
    gotlist.add(cc.name.duplicate());
    assertEquals(getValueFromName(ss.fromByteBuffer(cc.name.duplicate())),cc.getValue());
  }
  assertEquals(columnnames,gotlist);
  ColumnPath cp=new ColumnPath("Counter1");
  keyspace.removeCounter("testGetCounterSlice",cp);
}
