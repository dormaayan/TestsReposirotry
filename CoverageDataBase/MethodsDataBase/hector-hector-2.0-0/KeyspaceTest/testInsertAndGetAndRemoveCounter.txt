@Test public void testInsertAndGetAndRemoveCounter() throws IllegalArgumentException, NoSuchElementException, IllegalStateException, HNotFoundException, Exception {
  StringSerializer ss=StringSerializer.get();
  ColumnParent cp=new ColumnParent("Counter1");
  keyspace.addCounter("testInsertAndGetAndRemoveCounter_key1",cp,createCounterColumn("A",5L));
  keyspace.addCounter("testInsertAndGetAndRemoveCounter_key1",cp,createCounterColumn("A",-1L));
  keyspace.addCounter("testInsertAndGetAndRemoveCounter_key1",cp,createCounterColumn("B",10L));
  ColumnPath cph=new ColumnPath("Counter1");
  cph.setColumn(ss.toByteBuffer("A"));
  CounterColumn counter=keyspace.getCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  assertNotNull(counter);
  assertEquals(4,counter.value);
  cph.setColumn(ss.toByteBuffer("B"));
  counter=keyspace.getCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  assertNotNull(counter);
  assertEquals(10,counter.value);
  keyspace.removeCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  try {
    keyspace.getCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  }
 catch (  HNotFoundException e) {
  }
  cph.setColumn(ss.toByteBuffer("A"));
  counter=keyspace.getCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  assertNotNull(counter);
  cph.column=null;
  keyspace.removeCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  try {
    cph.setColumn(ss.toByteBuffer("A"));
    counter=keyspace.getCounter("testInsertAndGetAndRemoveCounter_key1",cph);
  }
 catch (  HNotFoundException e) {
  }
}
