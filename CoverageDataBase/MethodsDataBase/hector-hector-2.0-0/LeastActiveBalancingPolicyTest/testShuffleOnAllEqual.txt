@Test public void testShuffleOnAllEqual(){
  ConcurrentHClientPool poolWith5Active2=Mockito.mock(ConcurrentHClientPool.class);
  Mockito.when(poolWith5Active2.getNumActive()).thenReturn(5);
  Mockito.when(poolWith5Active2.getCassandraHost()).thenReturn(new CassandraHost("127.0.0.4:9163"));
  ConcurrentHClientPool poolWith5Active3=Mockito.mock(ConcurrentHClientPool.class);
  Mockito.when(poolWith5Active3.getNumActive()).thenReturn(5);
  Mockito.when(poolWith5Active3.getCassandraHost()).thenReturn(new CassandraHost("127.0.0.5:9164"));
  pools.add(poolWith5Active2);
  pools.add(poolWith5Active3);
  leastActiveBalancingPolicy=new LeastActiveBalancingPolicy();
  Set<CassandraHost> foundHosts=new HashSet<CassandraHost>(3);
  for (int i=0; i < 50; i++) {
    HClientPool foundPool=leastActiveBalancingPolicy.getPool(pools,null);
    foundHosts.add(foundPool.getCassandraHost());
    assert 5 == foundPool.getNumActive();
  }
  assertEquals(3,foundHosts.size());
}
