/** 
 * JIRA: DBCP-444 Verify that invalidate does not return closed connection to the pool.
 */
@Test public void testConcurrentInvalidateBorrow() throws Exception {
  ds.setDriverClassName("org.apache.commons.dbcp2.TesterConnRequestCountDriver");
  ds.setUrl("jdbc:apache:commons:testerConnRequestCountDriver");
  ds.setTestOnBorrow(true);
  ds.setValidationQuery("SELECT DUMMY FROM DUAL");
  ds.setMaxTotal(8);
  ds.setLifo(true);
  ds.setMaxWaitMillis(-1);
  final TestThread testThread1=new TestThread(1000,0);
  final Thread t1=new Thread(testThread1);
  t1.start();
  final TestThread testThread2=new TestThread(1000,0);
  final Thread t2=new Thread(testThread1);
  t2.start();
  for (int i=0; i < 1000; i++) {
    final Connection conn=ds.getConnection();
    ds.invalidateConnection(conn);
  }
  t1.join();
  t2.join();
  assertFalse(testThread1.failed());
  assertFalse(testThread2.failed());
  ds.close();
}
