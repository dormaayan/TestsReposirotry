@Test public void testCallableStatementPooling() throws Exception {
  DriverManager.registerDriver(new TesterDriver());
  final ConnectionFactory connFactory=new DriverManagerConnectionFactory("jdbc:apache:commons:testdriver","u1","p1");
  final ObjectName oName=new ObjectName("UnitTests:DataSource=test");
  final PoolableConnectionFactory pcf=new PoolableConnectionFactory(connFactory,oName);
  pcf.setPoolStatements(true);
  pcf.setDefaultReadOnly(Boolean.FALSE);
  pcf.setDefaultAutoCommit(Boolean.TRUE);
  final GenericObjectPoolConfig<PoolableConnection> config=new GenericObjectPoolConfig<>();
  config.setJmxNameBase("UnitTests:DataSource=test,connectionpool=connections");
  config.setJmxNamePrefix("");
  final ObjectPool<PoolableConnection> connPool=new GenericObjectPool<>(pcf,config);
  pcf.setPool(connPool);
  final PoolingDataSource<?> ds=new PoolingDataSource<>(connPool);
  try (Connection conn=ds.getConnection()){
    final Statement stmt1=conn.prepareStatement("select 1 from dual");
    final Statement ustmt1=((DelegatingStatement)stmt1).getInnermostDelegate();
    final Statement cstmt1=conn.prepareCall("{call home}");
    final Statement ucstmt1=((DelegatingStatement)cstmt1).getInnermostDelegate();
    stmt1.close();
    cstmt1.close();
    final Statement stmt2=conn.prepareStatement("select 1 from dual");
    final Statement ustmt2=((DelegatingStatement)stmt2).getInnermostDelegate();
    final Statement cstmt2=conn.prepareCall("{call home}");
    final Statement ucstmt2=((DelegatingStatement)cstmt2).getInnermostDelegate();
    stmt2.close();
    cstmt2.close();
    assertSame(ustmt1,ustmt2);
    assertSame(ucstmt1,ucstmt2);
    final Statement stmt3=conn.prepareCall("select 1 from dual");
    final Statement ustmt3=((DelegatingStatement)stmt3).getInnermostDelegate();
    stmt3.close();
    assertNotSame(ustmt1,ustmt3);
    assertNotSame(ustmt3,ucstmt1);
  }
   ds.close();
}
