/** 
 * Verifies that executing close() on an already closed DelegatingStatement that wraps a PoolablePreparedStatement does not "re-close" the PPS (which could be in use by another client - see DBCP-414).
 */
@Test public void testMultipleClose() throws Exception {
  final DataSource ds=createPDS();
  PreparedStatement stmt1=null;
  final Connection conn=ds.getConnection();
  stmt1=conn.prepareStatement("select 1 from dual");
  final PoolablePreparedStatement<?> pps1=getPoolablePreparedStatement(stmt1);
  conn.close();
  assertTrue(stmt1.isClosed());
  stmt1.close();
  assertTrue(stmt1.isClosed());
  final Connection conn2=ds.getConnection();
  final PreparedStatement stmt2=conn2.prepareStatement("select 1 from dual");
  Assert.assertSame(pps1,getPoolablePreparedStatement(stmt2));
  stmt1.close();
  assertTrue(!stmt2.isClosed());
  stmt2.executeQuery();
  conn2.close();
  assertTrue(stmt1.isClosed());
  assertTrue(stmt2.isClosed());
}
