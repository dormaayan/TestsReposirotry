@Test public void testFastFailValidationCustomCodes() throws Exception {
  pool.setTestOnReturn(true);
  final PoolableConnectionFactory factory=(PoolableConnectionFactory)pool.getFactory();
  factory.setFastFailValidation(true);
  final ArrayList<String> disconnectionSqlCodes=new ArrayList<>();
  disconnectionSqlCodes.add("XXX");
  factory.setDisconnectionSqlCodes(disconnectionSqlCodes);
  final PoolableConnection conn=pool.borrowObject();
  final TesterConnection nativeConnection=(TesterConnection)conn.getInnermostDelegate();
  nativeConnection.setFailure(new SQLException("Fatal connection error.","XXX"));
  try {
    conn.createStatement();
    fail("Should throw SQL exception.");
  }
 catch (  final SQLException ignored) {
    nativeConnection.setFailure(null);
  }
  conn.close();
  assertEquals("The pool should have no active connections",0,pool.getNumActive());
  assertEquals("The pool should have no idle connections",0,pool.getNumIdle());
}
