/** 
 * DBCP-180 - things get more interesting with statement pooling.
 */
@Test public void testGarbageCollectorCleanUp02() throws Exception {
  ds.setPoolPreparedStatements(true);
  ds.setAccessToUnderlyingConnectionAllowed(true);
  final DelegatingConnection<?> conn=(DelegatingConnection<?>)ds.getConnection();
  final PoolableConnection poolableConn=(PoolableConnection)conn.getDelegate();
  final PoolingConnection poolingConn=(PoolingConnection)poolableConn.getDelegate();
  @SuppressWarnings("unchecked") final GenericKeyedObjectPool<PStmtKey,DelegatingPreparedStatement> gkop=(GenericKeyedObjectPool<PStmtKey,DelegatingPreparedStatement>)TesterUtils.getField(poolingConn,"pstmtPool");
  Assert.assertEquals(0,conn.getTrace().size());
  Assert.assertEquals(0,gkop.getNumActive());
  createStatement(conn);
  Assert.assertEquals(1,conn.getTrace().size());
  Assert.assertEquals(1,gkop.getNumActive());
  System.gc();
  int count=0;
  while (count < 50 && gkop.getNumActive() > 0) {
    Thread.sleep(100);
    count++;
  }
  Assert.assertEquals(0,gkop.getNumActive());
  Assert.assertEquals(0,conn.getTrace().size());
}
