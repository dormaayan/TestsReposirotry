@Test public void withWriteLockAndDelegate(){
  MultiReaderUnifiedSet<Integer> set=MultiReaderUnifiedSet.newSetWith(2);
  AtomicReference<MutableSet<?>> delegateList=new AtomicReference<>();
  AtomicReference<Iterator<?>> iterator=new AtomicReference<>();
  set.withWriteLockAndDelegate(delegate -> {
    delegate.add(1);
    delegate.add(2);
    delegate.add(3);
    delegate.add(4);
    delegateList.set(delegate);
    iterator.set(delegate.iterator());
  }
);
  Assert.assertEquals(UnifiedSet.newSetWith(1,2,3,4),set);
  Verify.assertThrows(NullPointerException.class,() -> iterator.get().hasNext());
  Verify.assertThrows(NullPointerException.class,() -> delegateList.get().iterator());
}
