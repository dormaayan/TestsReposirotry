@Test public void forEachFromTo(){
  MutableList<Integer> result=FastList.newList();
  MutableList<Integer> collection=FastList.newListWith(1,2,3,4);
  collection.forEach(2,3,result::add);
  Assert.assertEquals(this.newWith(3,4),result);
  MutableList<Integer> result2=FastList.newList();
  collection.forEach(3,2,CollectionAddProcedure.on(result2));
  Assert.assertEquals(this.newWith(4,3),result2);
  MutableList<Integer> result3=FastList.newList();
  collection.forEach(0,3,CollectionAddProcedure.on(result3));
  Assert.assertEquals(this.newWith(1,2,3,4),result3);
  MutableList<Integer> result4=FastList.newList();
  collection.forEach(3,0,CollectionAddProcedure.on(result4));
  Assert.assertEquals(this.newWith(4,3,2,1),result4);
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> collection.forEach(-1,0,result::add));
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> collection.forEach(0,-1,result::add));
}
