@Override @Test public void equalsAndHashCode(){
  MutableCollection<Integer> list1=this.newWith(1,2,3);
  MutableCollection<Integer> list2=this.newWith(1,2,3);
  MutableCollection<Integer> list3=this.newWith(2,3,4);
  MutableCollection<Integer> list4=this.newWith(1,2,3,4);
  Assert.assertNotEquals(list1,null);
  Verify.assertEqualsAndHashCode(list1,list1);
  Verify.assertEqualsAndHashCode(list1,list2);
  Verify.assertEqualsAndHashCode(new LinkedList<>(Arrays.asList(1,2,3)),list1);
  Verify.assertEqualsAndHashCode(new ArrayList<>(Arrays.asList(1,2,3)),list1);
  Verify.assertEqualsAndHashCode(ArrayAdapter.newArrayWith(1,2,3),list1);
  Assert.assertNotEquals(list2,list3);
  Assert.assertNotEquals(list2,list4);
  Assert.assertNotEquals(new LinkedList<>(Arrays.asList(1,2,3)),list4);
  Assert.assertNotEquals(new LinkedList<>(Arrays.asList(1,2,3,3)),list4);
  Assert.assertNotEquals(new ArrayList<>(Arrays.asList(1,2,3)),list4);
  Assert.assertNotEquals(new ArrayList<>(Arrays.asList(1,2,3,3)),list4);
  Assert.assertNotEquals(list4,new LinkedList<>(Arrays.asList(1,2,3)));
  Assert.assertNotEquals(list4,new LinkedList<>(Arrays.asList(1,2,3,3)));
  Assert.assertNotEquals(list4,new ArrayList<>(Arrays.asList(1,2,3)));
  Assert.assertNotEquals(list4,new ArrayList<>(Arrays.asList(1,2,3,3)));
  Assert.assertNotEquals(new LinkedList<>(Arrays.asList(1,2,3,4)),list1);
  Assert.assertNotEquals(new LinkedList<>(Arrays.asList(1,2,null)),list1);
  Assert.assertNotEquals(new LinkedList<>(Arrays.asList(1,2)),list1);
  Assert.assertNotEquals(new ArrayList<>(Arrays.asList(1,2,3,4)),list1);
  Assert.assertNotEquals(new ArrayList<>(Arrays.asList(1,2,null)),list1);
  Assert.assertNotEquals(new ArrayList<>(Arrays.asList(1,2)),list1);
  Assert.assertNotEquals(ArrayAdapter.newArrayWith(1,2,3,4),list1);
}
