@Test public void chainedComparator(){
  Verify.assertThrows(IllegalArgumentException.class,(Runnable)Comparators::chain);
  Comparator<Person> byName=Comparators.byFunction(Person.TO_FIRST);
  Comparator<Person> byAge=Comparators.byFunction(Person.TO_AGE);
  Person fred10=new Person("Fred","Smith",10);
  Person jim10=new Person("Jim","Smith",10);
  Person jim16=new Person("Jim","Smith",16);
  Person sheila12=new Person("Sheila","Smith",12);
  Person sheila14=new Person("Sheila","Smith",14);
  MutableList<Person> people=mList(jim16,fred10,sheila14,sheila12,fred10,jim10);
  MutableList<Person> expectedNameThenAgeOrder=mList(fred10,fred10,jim10,jim16,sheila12,sheila14);
  MutableList<Person> expectedAgeThenNameOrder=mList(fred10,fred10,jim10,sheila12,sheila14,jim16);
  Verify.assertListsEqual(expectedNameThenAgeOrder,people.sortThis(Comparators.chain(byName,byAge)));
  Verify.assertListsEqual(expectedAgeThenNameOrder,people.sortThis(Comparators.chain(byAge,byName)));
}
