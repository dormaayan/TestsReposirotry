@Test public void forEachWithIndexWithFromTo(){
  ImmutableSortedBag<Integer> integers1=SortedBags.immutable.of(Comparators.reverseNaturalOrder(),4,4,4,4,3,3,3,2,2,1);
  StringBuilder builder=new StringBuilder();
  integers1.forEachWithIndex(5,7,(each,index) -> builder.append(each).append(index));
  Assert.assertEquals("353627",builder.toString());
  StringBuilder builder2=new StringBuilder();
  integers1.forEachWithIndex(5,5,(each,index) -> builder2.append(each).append(index));
  Assert.assertEquals("35",builder2.toString());
  StringBuilder builder3=new StringBuilder();
  integers1.forEachWithIndex(0,9,(each,index) -> builder3.append(each).append(index));
  Assert.assertEquals("40414243343536272819",builder3.toString());
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> integers1.forEachWithIndex(-1,0,new AddToList(Lists.mutable.empty())));
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> integers1.forEachWithIndex(0,-1,new AddToList(Lists.mutable.empty())));
  Verify.assertThrows(IllegalArgumentException.class,() -> integers1.forEachWithIndex(7,5,new AddToList(Lists.mutable.empty())));
  ImmutableSortedBag<Integer> integers2=this.classUnderTest();
  MutableList<Integer> mutableList1=Lists.mutable.of();
  integers2.forEachWithIndex(0,integers2.size() - 1,(each,index) -> mutableList1.add(each + index));
  MutableList<Integer> result=Lists.mutable.of();
  Lists.mutable.ofAll(integers2).forEachWithIndex(0,integers2.size() - 1,(each,index) -> result.add(each + index));
  Assert.assertEquals(result,mutableList1);
}
