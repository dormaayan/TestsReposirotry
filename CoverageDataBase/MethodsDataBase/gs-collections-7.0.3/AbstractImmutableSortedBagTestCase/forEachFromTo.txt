@Test public void forEachFromTo(){
  MutableSortedBag<Integer> integersMutable=SortedBags.mutable.of(Comparators.reverseNaturalOrder(),4,4,4,4,3,3,3,2,2,1);
  ImmutableSortedBag<Integer> integers1=integersMutable.toImmutable();
  MutableList<Integer> result=Lists.mutable.empty();
  integers1.forEach(5,7,result::add);
  Assert.assertEquals(Lists.immutable.with(3,3,2),result);
  MutableList<Integer> result2=Lists.mutable.empty();
  integers1.forEach(5,5,result2::add);
  Assert.assertEquals(Lists.immutable.with(3),result2);
  MutableList<Integer> result3=Lists.mutable.empty();
  integers1.forEach(0,9,result3::add);
  Assert.assertEquals(Lists.immutable.with(4,4,4,4,3,3,3,2,2,1),result3);
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> integers1.forEach(-1,0,result::add));
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> integers1.forEach(0,-1,result::add));
  Verify.assertThrows(IllegalArgumentException.class,() -> integers1.forEach(7,5,result::add));
  ImmutableSortedBag<Integer> integers2=this.classUnderTest();
  MutableList<Integer> mutableList=Lists.mutable.of();
  integers2.forEach(0,integers2.size() - 1,mutableList::add);
  Assert.assertEquals(this.classUnderTest().toList(),mutableList);
}
