@Override @Test public void aggregateByNonMutating(){
  super.aggregateByNonMutating();
  Function0<Integer> zeroValueFactory=() -> 0;
  Function2<Integer,Integer,Integer> sumAggregator=(integer1,integer2) -> integer1 + integer2;
  MutableSortedBag<Integer> sortedBag=this.newWith(Comparators.reverseNaturalOrder(),3,2,2,1,1,1);
  MapIterable<String,Integer> aggregation=sortedBag.aggregateBy(String::valueOf,zeroValueFactory,sumAggregator);
  Assert.assertEquals(3,aggregation.get("1").intValue());
  Assert.assertEquals(4,aggregation.get("2").intValue());
  Assert.assertEquals(3,aggregation.get("3").intValue());
}
