@Override @Test public void zip(){
  super.zip();
  MutableSortedBag<Integer> revInt=this.newWith(Collections.<Integer>reverseOrder(),2,2,3,5,1,4);
  MutableSortedBag<Integer> integers=this.newWith(1,3,2,2,4,5);
  MutableList<Pair<Integer,Integer>> zip=integers.zip(revInt);
  Verify.assertSize(6,zip);
  Assert.assertEquals(FastList.newListWith(Tuples.pair(1,5),Tuples.pair(2,4),Tuples.pair(2,3),Tuples.pair(3,2),Tuples.pair(4,2),Tuples.pair(5,1)),zip);
  MutableList<Pair<Integer,Integer>> revZip=revInt.zip(integers);
  Verify.assertSize(6,revZip);
  Assert.assertEquals(FastList.newListWith(Tuples.pair(5,1),Tuples.pair(4,2),Tuples.pair(3,2),Tuples.pair(2,3),Tuples.pair(2,4),Tuples.pair(1,5)),revZip);
  Person john=new Person("John","Smith");
  Person johnDoe=new Person("John","Doe");
  MutableSortedBag<Person> people=this.newWith(john,johnDoe);
  MutableList<Integer> list=FastList.newListWith(1,2,3);
  MutableList<Pair<Person,Integer>> pairs=people.zip(list);
  Assert.assertEquals(FastList.newListWith(Tuples.pair(johnDoe,1),Tuples.pair(john,2)),pairs);
  Assert.assertTrue(pairs.add(Tuples.pair(new Person("Jack","Baker"),3)));
  Assert.assertEquals(Tuples.pair(new Person("Jack","Baker"),3),pairs.getLast());
}
