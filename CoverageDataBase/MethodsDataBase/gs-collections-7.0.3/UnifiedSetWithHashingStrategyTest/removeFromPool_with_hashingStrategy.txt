@Test public void removeFromPool_with_hashingStrategy(){
  HashingStrategy<Integer> hashingStrategy=HashingStrategies.nullSafeHashingStrategy(new HashingStrategy<Integer>(){
    public int computeHashCode(    Integer object){
      return object % 1000;
    }
    public boolean equals(    Integer object1,    Integer object2){
      return object1.equals(object2);
    }
  }
);
  UnifiedSetWithHashingStrategy<Integer> integers=UnifiedSetWithHashingStrategy.newSet(hashingStrategy,2).with(COLLISION_1,COLLISION_1 + 1000,COLLISION_1 + 2000,null);
  Assert.assertNull(integers.removeFromPool(null));
  Integer collision4000=COLLISION_1 + 4000;
  integers.with(null,COLLISION_1 + 3000,collision4000,COLLISION_1 + 5000);
  Assert.assertNull(integers.removeFromPool(null));
  Verify.assertSize(6,integers);
  Assert.assertNull(integers.removeFromPool(null));
  Verify.assertSize(6,integers);
  Assert.assertSame(collision4000,integers.removeFromPool(COLLISION_1 + 4000));
  Assert.assertSame(COLLISION_1,integers.removeFromPool(COLLISION_1));
  Verify.assertSize(4,integers);
  Assert.assertSame(JOHNSMITH,UnifiedSetWithHashingStrategy.newSetWith(LAST_NAME_HASHING_STRATEGY,JOHNSMITH).removeFromPool(JOHNSMITH));
}
