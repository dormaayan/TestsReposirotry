@Override @Test public void equalsAndHashCode(){
  super.equalsAndHashCode();
  UnifiedSetWithHashingStrategy<Integer> singleCollisionBucket=UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,COLLISION_2);
  singleCollisionBucket.remove(COLLISION_2);
  Assert.assertEquals(singleCollisionBucket,UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1));
  Verify.assertEqualsAndHashCode(UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,null,COLLISION_1,COLLISION_2,COLLISION_3),UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,null,COLLISION_1,COLLISION_2,COLLISION_3));
  Verify.assertEqualsAndHashCode(UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,null,COLLISION_2,COLLISION_3),UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,null,COLLISION_2,COLLISION_3));
  Verify.assertEqualsAndHashCode(UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,COLLISION_2,null,COLLISION_3),UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,COLLISION_2,null,COLLISION_3));
  Verify.assertEqualsAndHashCode(UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,COLLISION_2,COLLISION_3,null),UnifiedSetWithHashingStrategy.newSetWith(INTEGER_HASHING_STRATEGY,COLLISION_1,COLLISION_2,COLLISION_3,null));
}
