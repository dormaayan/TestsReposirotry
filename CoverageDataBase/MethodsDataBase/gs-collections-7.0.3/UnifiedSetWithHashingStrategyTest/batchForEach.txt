@Test public void batchForEach(){
  UnifiedSet<Integer> set=UnifiedSet.<Integer>newSet(10).with(1,2,3,4,5,6,7,8,9,10);
  for (int sectionCount=1; sectionCount <= 16; ++sectionCount) {
    Sum sum=new IntegerSum(0);
    for (int sectionIndex=0; sectionIndex < sectionCount; ++sectionIndex) {
      set.batchForEach(new SumProcedure<>(sum),sectionIndex,sectionCount);
    }
    Assert.assertEquals(55,sum.getValue());
  }
  Sum sum2=new IntegerSum(0);
  UnifiedSetWithHashingStrategy<Integer> set2=UnifiedSetWithHashingStrategy.newSet(INTEGER_HASHING_STRATEGY,3).with(COLLISION_1,COLLISION_2,COLLISION_3,1,2);
  int numBatches=set2.getBatchCount(100);
  for (int i=0; i < numBatches; ++i) {
    set2.batchForEach(new SumProcedure<>(sum2),i,numBatches);
  }
  Assert.assertEquals(1,numBatches);
  Assert.assertEquals(54,sum2.getValue());
  Sum sum3=new IntegerSum(0);
  UnifiedSetWithHashingStrategy<Integer> set3=UnifiedSetWithHashingStrategy.newSet(INTEGER_HASHING_STRATEGY,4,1.0F).with(COLLISION_1,COLLISION_2,1,2,3,4,5);
  int numBatches2=set3.getBatchCount(3);
  for (int i=0; i < numBatches2; ++i) {
    set3.batchForEach(new SumProcedure<>(sum3),i,numBatches2);
  }
  Assert.assertEquals(32,sum3.getValue());
  Sum sum4=new IntegerSum(0);
  UnifiedSetWithHashingStrategy<Integer> set4=UnifiedSetWithHashingStrategy.newSet(INTEGER_HASHING_STRATEGY);
  set4.batchForEach(new SumProcedure<>(sum4),0,set4.getBatchCount(1));
  Assert.assertEquals(0,sum4.getValue());
}
