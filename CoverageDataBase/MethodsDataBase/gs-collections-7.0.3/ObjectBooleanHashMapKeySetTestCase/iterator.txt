@Test public void iterator(){
  MutableObjectBooleanMap<String> map=this.newMapWithKeysValues("One",true,"Two",false,"Three",true,null,false);
  Set<String> keySet=map.keySet();
  Iterator<String> iterator=keySet.iterator();
  HashBag<String> expected=HashBag.newBagWith("One","Two","Three",null);
  HashBag<String> actual=HashBag.newBag();
  Verify.assertThrows(IllegalStateException.class,iterator::remove);
  for (int i=0; i < 4; i++) {
    Assert.assertTrue(iterator.hasNext());
    actual.add(iterator.next());
  }
  Assert.assertFalse(iterator.hasNext());
  Verify.assertThrows(NoSuchElementException.class,(Runnable)iterator::next);
  Assert.assertEquals(expected,actual);
  Iterator<String> iterator1=keySet.iterator();
  for (int i=4; i > 0; i--) {
    Assert.assertTrue(iterator1.hasNext());
    iterator1.next();
    iterator1.remove();
    Verify.assertThrows(IllegalStateException.class,iterator1::remove);
    Verify.assertSize(i - 1,keySet);
    Verify.assertSize(i - 1,map);
  }
  Assert.assertFalse(iterator1.hasNext());
  Verify.assertEmpty(map);
  Verify.assertEmpty(keySet);
}
