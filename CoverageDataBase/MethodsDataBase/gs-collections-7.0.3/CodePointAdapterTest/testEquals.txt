@Override @Test public void testEquals(){
  super.testEquals();
  ImmutableIntList list1=this.newWith(1,2,3,4);
  ImmutableIntList list2=this.newWith(4,3,2,1);
  Assert.assertNotEquals(list1,list2);
  Assert.assertEquals(CodePointAdapter.adapt(UNICODE_STRING),CodePointAdapter.adapt(UNICODE_STRING));
  Assert.assertNotEquals(CodePointAdapter.adapt("\u3042\uD840\uDC00\u3044\uD840\uDC03\u3046"),CodePointAdapter.adapt(UNICODE_STRING));
  Assert.assertEquals(CodePointAdapter.adapt("ABC"),CodePointAdapter.adapt("ABC"));
  Assert.assertNotEquals(CodePointAdapter.adapt("123"),CodePointAdapter.adapt("ABC"));
  Verify.assertEqualsAndHashCode(CodePointAdapter.adapt("ABC"),CodePointList.from("ABC"));
  Verify.assertEqualsAndHashCode(CodePointAdapter.adapt(UNICODE_STRING),CodePointList.from(UNICODE_STRING));
  Assert.assertNotEquals(CodePointList.from("123"),CodePointAdapter.adapt("ABC"));
  Assert.assertNotEquals(CodePointAdapter.adapt("ABC"),CodePointList.from("123"));
  Assert.assertNotEquals(CodePointList.from("ABCD"),CodePointAdapter.adapt("ABC"));
  Assert.assertNotEquals(CodePointAdapter.adapt("ABC"),CodePointList.from("ABCD"));
  Assert.assertNotEquals(CodePointList.from("ABC"),CodePointAdapter.adapt("ABCD"));
  Assert.assertNotEquals(CodePointAdapter.adapt("ABCD"),CodePointList.from("ABC"));
}
