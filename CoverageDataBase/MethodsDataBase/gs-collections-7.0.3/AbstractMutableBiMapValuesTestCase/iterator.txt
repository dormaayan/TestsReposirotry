@Test public void iterator(){
  MutableSet<String> expected=UnifiedSet.newSetWith("zero","thirtyOne",null);
  MutableSet<String> actual=UnifiedSet.newSet();
  Iterator<String> iterator=HashBiMap.newWithKeysValues(0.0f,"zero",31.0f,"thirtyOne",32.0f,null).iterator();
  Assert.assertTrue(iterator.hasNext());
  actual.add(iterator.next());
  Assert.assertTrue(iterator.hasNext());
  actual.add(iterator.next());
  Assert.assertTrue(iterator.hasNext());
  actual.add(iterator.next());
  Assert.assertFalse(iterator.hasNext());
  Assert.assertEquals(expected,actual);
  Verify.assertThrows(NoSuchElementException.class,(Runnable)iterator::next);
  MutableBiMap<Float,String> map1=this.newMapWithKeysValues(0.0f,"zero",1.0f,null);
  Iterator<String> iterator1=map1.iterator();
  Verify.assertThrows(IllegalStateException.class,iterator1::remove);
  iterator1.next();
  iterator1.remove();
  Assert.assertTrue(map1.toString(),HashBiMap.newWithKeysValues(0.0f,"zero").equals(map1) || HashBiMap.newWithKeysValues(1.0f,null).equals(map1));
  Assert.assertTrue(map1.toString(),HashBiMap.newWithKeysValues(0.0f,"zero").inverse().equals(map1.inverse()) || HashBiMap.newWithKeysValues(1.0f,null).inverse().equals(map1.inverse()));
  iterator1.next();
  iterator1.remove();
  Assert.assertEquals(HashBiMap.newMap(),map1);
  Verify.assertThrows(IllegalStateException.class,iterator1::remove);
  MutableBiMap<Float,String> map2=this.newMapWithKeysValues(0.0f,null,9.0f,"nine");
  Iterator<String> iterator2=map2.iterator();
  Verify.assertThrows(IllegalStateException.class,iterator2::remove);
  iterator2.next();
  iterator2.remove();
  Assert.assertTrue(map2.toString(),HashBiMap.newWithKeysValues(0.0f,null).equals(map2) || HashBiMap.newWithKeysValues(9.0f,"nine").equals(map2));
  Assert.assertTrue(map2.toString(),HashBiMap.newWithKeysValues(0.0f,null).inverse().equals(map2.inverse()) || HashBiMap.newWithKeysValues(9.0f,"nine").inverse().equals(map2.inverse()));
  iterator2.next();
  iterator2.remove();
  Assert.assertEquals(HashBiMap.newMap(),map2);
  MutableBiMap<Float,String> map3=this.newMapWithKeysValues(8.0f,"eight",9.0f,null);
  Iterator<String> iterator3=map3.iterator();
  Verify.assertThrows(IllegalStateException.class,iterator3::remove);
  iterator3.next();
  iterator3.remove();
  Assert.assertTrue(map3.toString(),HashBiMap.newWithKeysValues(8.0f,"eight").equals(map3) || HashBiMap.newWithKeysValues(9.0f,null).equals(map3));
  iterator3.next();
  iterator3.remove();
  Assert.assertEquals(HashBiMap.newMap(),map3);
}
