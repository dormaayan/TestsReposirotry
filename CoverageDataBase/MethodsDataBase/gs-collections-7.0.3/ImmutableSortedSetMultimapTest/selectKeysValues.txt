@Override @Test public void selectKeysValues(){
  TreeSortedSetMultimap<String,Integer> mutableMultimap=TreeSortedSetMultimap.newMultimap(Comparators.<Integer>reverseNaturalOrder());
  mutableMultimap.putAll("One",FastList.newListWith(4,3,2,1,1));
  mutableMultimap.putAll("Two",FastList.newListWith(5,4,3,2,2));
  ImmutableSortedSetMultimap<String,Integer> immutableMap=mutableMultimap.toImmutable();
  ImmutableSortedSetMultimap<String,Integer> selectedMultimap=immutableMap.selectKeysValues((key,value) -> ("Two".equals(key) && (value % 2 == 0)));
  TreeSortedSetMultimap<String,Integer> expectedMultimap=TreeSortedSetMultimap.newMultimap(Comparators.<Integer>reverseNaturalOrder());
  expectedMultimap.putAll("Two",FastList.newListWith(4,2));
  ImmutableSortedSetMultimap<String,Integer> expectedImmutableMultimap=expectedMultimap.toImmutable();
  Assert.assertEquals(expectedImmutableMultimap,selectedMultimap);
  Verify.assertIterablesEqual(expectedImmutableMultimap.get("Two"),selectedMultimap.get("Two"));
  Assert.assertSame(expectedMultimap.comparator(),selectedMultimap.comparator());
}
