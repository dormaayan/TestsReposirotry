@Override @Test public void rejectKeysMultiValues(){
  TreeSortedSetMultimap<Integer,Integer> mutableMultimap=TreeSortedSetMultimap.newMultimap(Comparators.<Integer>reverseNaturalOrder());
  mutableMultimap.putAll(1,FastList.newListWith(5,4,3,2,1));
  mutableMultimap.putAll(2,FastList.newListWith(5,4,3,2,2));
  mutableMultimap.putAll(3,FastList.newListWith(5,4,2,2));
  mutableMultimap.putAll(4,FastList.newListWith(4,3,1));
  ImmutableSortedSetMultimap<Integer,Integer> immutableMap=mutableMultimap.toImmutable();
  ImmutableSortedSetMultimap<Integer,Integer> selectedMultimap=immutableMap.rejectKeysMultiValues((key,values) -> (key % 2 == 0 || Iterate.sizeOf(values) > 4));
  TreeSortedSetMultimap<Integer,Integer> expectedMultimap=TreeSortedSetMultimap.newMultimap(Comparators.<Integer>reverseNaturalOrder());
  expectedMultimap.putAll(3,FastList.newListWith(5,4,2,2));
  ImmutableSortedSetMultimap<Integer,Integer> expectedImmutableMultimap=expectedMultimap.toImmutable();
  Assert.assertEquals(expectedImmutableMultimap,selectedMultimap);
  Verify.assertIterablesEqual(expectedImmutableMultimap.get(3),selectedMultimap.get(3));
  Assert.assertSame(expectedMultimap.comparator(),selectedMultimap.comparator());
}
