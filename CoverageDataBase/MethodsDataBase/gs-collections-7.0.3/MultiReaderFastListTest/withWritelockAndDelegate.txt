@Test public void withWritelockAndDelegate(){
  MultiReaderFastList<Integer> list=MultiReaderFastList.newList(2);
  AtomicReference<MutableList<?>> delegateList=new AtomicReference<>();
  AtomicReference<MutableList<?>> subLists=new AtomicReference<>();
  AtomicReference<Iterator<?>> iterator=new AtomicReference<>();
  AtomicReference<Iterator<?>> listIterator=new AtomicReference<>();
  AtomicReference<Iterator<?>> listIteratorWithPosition=new AtomicReference<>();
  list.withWriteLockAndDelegate(delegate -> {
    delegate.add(1);
    delegate.add(2);
    delegate.add(3);
    delegate.add(4);
    delegateList.set(delegate);
    subLists.set(delegate.subList(1,3));
    iterator.set(delegate.iterator());
    listIterator.set(delegate.listIterator());
    listIteratorWithPosition.set(delegate.listIterator(3));
  }
);
  Assert.assertEquals(FastList.newListWith(1,2,3,4),list);
  this.assertIteratorThrows(delegateList.get());
  this.assertIteratorThrows(subLists.get());
  this.assertIteratorThrows(iterator.get());
  this.assertIteratorThrows(listIterator.get());
  this.assertIteratorThrows(listIteratorWithPosition.get());
}
