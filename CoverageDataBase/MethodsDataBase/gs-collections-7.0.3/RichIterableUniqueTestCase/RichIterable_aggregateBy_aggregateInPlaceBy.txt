@Override @Test default void RichIterable_aggregateBy_aggregateInPlaceBy(){
  RichIterable<Integer> iterable=this.newWith(4,3,2,1);
  MapIterable<String,Integer> aggregateBy=iterable.aggregateBy(Object::toString,() -> 0,(integer1,integer2) -> integer1 + integer2);
  assertEquals(4,aggregateBy.get("4").intValue());
  assertEquals(3,aggregateBy.get("3").intValue());
  assertEquals(2,aggregateBy.get("2").intValue());
  assertEquals(1,aggregateBy.get("1").intValue());
  MapIterable<String,AtomicInteger> aggregateInPlaceBy=iterable.aggregateInPlaceBy(String::valueOf,AtomicInteger::new,AtomicInteger::addAndGet);
  assertEquals(4,aggregateInPlaceBy.get("4").intValue());
  assertEquals(3,aggregateInPlaceBy.get("3").intValue());
  assertEquals(2,aggregateInPlaceBy.get("2").intValue());
  assertEquals(1,aggregateInPlaceBy.get("1").intValue());
}
