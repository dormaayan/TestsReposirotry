@Test public void forEachWithIndexUsingFromToWithOptimisableList(){
  ArrayList<Integer> optimisableList=Interval.oneTo(105).addAllTo(new ArrayList<>());
  ArrayList<Integer> expected=Interval.oneTo(105).addAllTo(new ArrayList<>());
  ArrayList<Integer> results=new ArrayList<>();
  ArrayListIterate.forEachWithIndex(optimisableList,0,104,ObjectIntProcedures.fromProcedure(results::add));
  Assert.assertEquals(expected,results);
  MutableList<Integer> reverseResults=Lists.mutable.of();
  ObjectIntProcedure<Integer> objectIntProcedure=ObjectIntProcedures.fromProcedure(reverseResults::add);
  ArrayListIterate.forEachWithIndex(expected,104,0,objectIntProcedure);
  Assert.assertEquals(ListIterate.reverseThis(expected),reverseResults);
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> ArrayListIterate.forEachWithIndex(expected,104,-1,objectIntProcedure));
  Verify.assertThrows(IndexOutOfBoundsException.class,() -> ArrayListIterate.forEachWithIndex(expected,-1,104,objectIntProcedure));
}
