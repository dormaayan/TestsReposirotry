@Test public void withKeysValues(){
  HashBiMap<Integer,Character> map=this.getEmptyMap();
  HashBiMap<Integer,Character> map1=map.withKeysValues(1,'a');
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a'),map1);
  Assert.assertSame(map,map1);
  HashBiMap<Integer,Character> map2=map1.withKeysValues(2,'b');
  HashBiMap<Integer,Character> map22=map.withKeysValues(1,'a',2,'b');
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a',2,'b'),map2);
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a',2,'b'),map22);
  Assert.assertSame(map,map22);
  Assert.assertSame(map1,map2);
  HashBiMap<Integer,Character> map3=map2.withKeysValues(3,'c');
  HashBiMap<Integer,Character> map33=map.withKeysValues(1,'a',2,'b',3,'c');
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a',2,'b',3,'c'),map3);
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a',2,'b',3,'c'),map33);
  Assert.assertSame(map,map33);
  Assert.assertSame(map2,map3);
  HashBiMap<Integer,Character> map4=map3.withKeysValues(4,'d');
  HashBiMap<Integer,Character> map44=map.withKeysValues(1,'a',2,'b',3,'c',4,'d');
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a',2,'b',3,'c',4,'d'),map4);
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'a',2,'b',3,'c',4,'d'),map44);
  Assert.assertSame(map,map44);
  Assert.assertSame(map3,map4);
}
