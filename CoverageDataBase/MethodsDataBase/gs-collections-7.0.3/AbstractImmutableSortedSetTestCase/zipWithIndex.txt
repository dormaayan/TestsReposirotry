@Test public void zipWithIndex(){
  ImmutableSortedSet<Integer> immutableSet=this.classUnderTest(Collections.<Integer>reverseOrder());
  ImmutableSortedSet<Pair<Integer,Integer>> pairs=immutableSet.zipWithIndex();
  Assert.assertEquals(immutableSet.toList(),pairs.collect((Function<Pair<Integer,?>,Integer>)Pair::getOne));
  Assert.assertEquals(Interval.zeroTo(immutableSet.size() - 1).toList(),pairs.collect((Function<Pair<?,Integer>,Integer>)Pair::getTwo));
  Assert.assertEquals(immutableSet.zipWithIndex(),immutableSet.zipWithIndex(UnifiedSet.<Pair<Integer,Integer>>newSet()));
  Verify.assertListsEqual(TreeSortedSet.newSet(Collections.<Integer>reverseOrder(),Interval.oneTo(immutableSet.size())).toList(),pairs.collect((Function<Pair<Integer,?>,Integer>)Pair::getOne).toList());
}
