@Test public void forcePut(){
  MutableBiMap<Integer,Character> biMap=this.classUnderTest();
  Assert.assertNull(biMap.forcePut(4,'d'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,null,null,'b',3,'c',4,'d'),biMap);
  Assert.assertEquals(UnifiedMap.newWithKeysValues(1,null,null,'b',3,'c',4,'d'),biMap);
  Assert.assertNull(biMap.forcePut(1,null));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,null,null,'b',3,'c',4,'d'),biMap);
  Assert.assertNull(biMap.forcePut(1,'e'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'e',null,'b',3,'c',4,'d'),biMap);
  Assert.assertNull(biMap.forcePut(5,'e'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(5,'e',null,'b',3,'c',4,'d'),biMap);
  Assert.assertEquals(Character.valueOf('d'),biMap.forcePut(4,'e'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(4,'e',null,'b',3,'c'),biMap);
  HashBiMap<Integer,Character> actual=HashBiMap.newMap();
  actual.forcePut(1,null);
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,null),actual);
}
