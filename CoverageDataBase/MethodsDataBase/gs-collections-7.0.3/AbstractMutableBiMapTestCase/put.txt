@Override @Test public void put(){
  MutableBiMap<Integer,Character> biMap=this.classUnderTest();
  Assert.assertNull(biMap.put(4,'d'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,null,null,'b',3,'c',4,'d'),biMap);
  Assert.assertEquals(UnifiedMap.newWithKeysValues(1,null,null,'b',3,'c',4,'d'),biMap);
  Assert.assertNull(biMap.put(1,null));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,null,null,'b',3,'c',4,'d'),biMap);
  Assert.assertNull(biMap.put(1,'e'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'e',null,'b',3,'c',4,'d'),biMap);
  Verify.assertThrows(IllegalArgumentException.class,() -> biMap.put(5,'e'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'e',null,'b',3,'c',4,'d'),biMap);
  Verify.assertThrows(IllegalArgumentException.class,() -> biMap.put(4,'e'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,'e',null,'b',3,'c',4,'d'),biMap);
  HashBiMap<Integer,Character> actual=HashBiMap.newMap();
  actual.put(1,null);
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(1,null),actual);
}
