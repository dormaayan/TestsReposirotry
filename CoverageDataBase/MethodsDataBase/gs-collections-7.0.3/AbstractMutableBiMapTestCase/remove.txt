@Test public void remove(){
  MutableBiMap<Integer,Character> biMap=this.classUnderTest();
  Assert.assertNull(biMap.remove(4));
  Verify.assertSize(3,biMap);
  Assert.assertNull(biMap.remove(1));
  Assert.assertNull(biMap.get(1));
  Assert.assertNull(biMap.inverse().get(null));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(null,'b',3,'c'),biMap);
  Assert.assertEquals(Character.valueOf('b'),biMap.remove(null));
  Assert.assertNull(biMap.get(null));
  Assert.assertNull(biMap.inverse().get('b'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newWithKeysValues(3,'c'),biMap);
  Assert.assertEquals(Character.valueOf('c'),biMap.remove(3));
  Assert.assertNull(biMap.get(3));
  Assert.assertNull(biMap.inverse().get('c'));
  AbstractMutableBiMapTestCase.assertBiMapsEqual(HashBiMap.newMap(),biMap);
  Verify.assertEmpty(biMap);
  Assert.assertNull(HashBiMap.newMap().remove(1));
}
