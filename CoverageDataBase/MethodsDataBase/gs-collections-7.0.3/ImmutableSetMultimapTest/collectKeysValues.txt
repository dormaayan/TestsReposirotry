@Override @Test public void collectKeysValues(){
  MutableSetMultimap<String,Integer> mutableMultimap=UnifiedSetMultimap.newMultimap();
  mutableMultimap.putAll("1",FastList.newListWith(4,3,2,1));
  mutableMultimap.putAll("2",FastList.newListWith(5,4,3,2));
  ImmutableSetMultimap<String,Integer> immutableMap=mutableMultimap.toImmutable();
  ImmutableBagMultimap<Integer,String> collectedMultimap=immutableMap.collectKeysValues((key,value) -> Tuples.pair(Integer.valueOf(key),value + "Value"));
  MutableBagMultimap<Integer,String> expectedMultimap=HashBagMultimap.newMultimap();
  expectedMultimap.putAll(1,FastList.newListWith("1Value","2Value","3Value","4Value"));
  expectedMultimap.putAll(2,FastList.newListWith("2Value","3Value","4Value","5Value"));
  ImmutableBagMultimap<Integer,String> expectedImmutableMultimap=expectedMultimap.toImmutable();
  Assert.assertEquals(expectedImmutableMultimap,collectedMultimap);
  ImmutableBagMultimap<Integer,String> collectedMultimap2=immutableMap.collectKeysValues((key,value) -> Tuples.pair(1,value + "Value"));
  MutableBagMultimap<Integer,String> expectedMultimap2=HashBagMultimap.newMultimap();
  expectedMultimap2.putAll(1,FastList.newListWith("1Value","2Value","3Value","4Value"));
  expectedMultimap2.putAll(1,FastList.newListWith("2Value","3Value","4Value","5Value"));
  ImmutableBagMultimap<Integer,String> expectedImmutableMultimap2=expectedMultimap2.toImmutable();
  Assert.assertEquals(expectedImmutableMultimap2,collectedMultimap2);
}
