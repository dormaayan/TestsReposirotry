@Test public void take(){
  MutableSortedMap<Integer,String> strings1=this.newMapWithKeysValues(1,"1",2,"2",3,"3",4,"4");
  Assert.assertEquals(SortedMaps.mutable.of(strings1.comparator()),strings1.take(0));
  Assert.assertSame(strings1.comparator(),strings1.take(0).comparator());
  Assert.assertEquals(SortedMaps.mutable.of(strings1.comparator(),1,"1",2,"2",3,"3"),strings1.take(3));
  Assert.assertSame(strings1.comparator(),strings1.take(3).comparator());
  Assert.assertEquals(SortedMaps.mutable.of(strings1.comparator(),1,"1",2,"2",3,"3"),strings1.take(strings1.size() - 1));
  MutableSortedMap<Integer,String> expectedMap=this.newMapWithKeysValues(Comparators.reverseNaturalOrder(),1,"1",2,"2",3,"3",4,"4");
  MutableSortedMap<Integer,String> strings2=this.newMapWithKeysValues(Comparators.reverseNaturalOrder(),1,"1",2,"2",3,"3",4,"4");
  Assert.assertEquals(expectedMap,strings2.take(strings2.size()));
  Assert.assertEquals(expectedMap,strings2.take(10));
  Assert.assertEquals(expectedMap,strings2.take(Integer.MAX_VALUE));
}
