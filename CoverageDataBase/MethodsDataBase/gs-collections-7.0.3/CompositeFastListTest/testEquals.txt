@Test public void testEquals(){
  CompositeFastList<String> composite=new CompositeFastList<>();
  MutableList<String> list=FastList.newList();
  Verify.assertEqualsAndHashCode(composite,list);
  MutableList<String> list2=FastList.newListWith("one","two","three");
  CompositeFastList<String> composite2=new CompositeFastList<>();
  MutableList<String> firstBit=FastList.newListWith("one","two");
  MutableList<String> secondBit=FastList.newListWith("three");
  composite2.addAll(firstBit);
  composite2.addAll(secondBit);
  Verify.assertEqualsAndHashCode(list2,composite2);
  Assert.assertNotEquals(firstBit,composite2);
  Assert.assertNotEquals(composite2,firstBit);
  MutableList<String> list1=FastList.newListWith("one",null,"three");
  CompositeFastList<String> composite1=new CompositeFastList<>();
  MutableList<String> firstBit1=FastList.newListWith("one",null);
  MutableList<String> secondBit1=FastList.newListWith("three");
  composite1.addAll(firstBit1);
  composite1.addAll(secondBit1);
  Verify.assertEqualsAndHashCode(list1,composite1);
}
