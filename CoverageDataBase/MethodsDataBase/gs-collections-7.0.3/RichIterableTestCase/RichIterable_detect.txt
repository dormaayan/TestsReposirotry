@Test default void RichIterable_detect(){
  RichIterable<Integer> iterable=this.newWith(3,2,1);
  assertThat(iterable.detect(Predicates.greaterThan(0)),is(3));
  assertThat(iterable.detect(Predicates.greaterThan(1)),is(3));
  assertThat(iterable.detect(Predicates.greaterThan(2)),is(3));
  assertThat(iterable.detect(Predicates.greaterThan(3)),nullValue());
  assertThat(iterable.detect(Predicates.lessThan(1)),nullValue());
  assertThat(iterable.detect(Predicates.lessThan(2)),is(1));
  assertThat(iterable.detect(Predicates.lessThan(3)),is(2));
  assertThat(iterable.detect(Predicates.lessThan(4)),is(3));
  assertThat(iterable.detectWith(Predicates2.greaterThan(),0),is(3));
  assertThat(iterable.detectWith(Predicates2.greaterThan(),1),is(3));
  assertThat(iterable.detectWith(Predicates2.greaterThan(),2),is(3));
  assertThat(iterable.detectWith(Predicates2.greaterThan(),3),nullValue());
  assertThat(iterable.detectWith(Predicates2.lessThan(),1),nullValue());
  assertThat(iterable.detectWith(Predicates2.lessThan(),2),is(1));
  assertThat(iterable.detectWith(Predicates2.lessThan(),3),is(2));
  assertThat(iterable.detectWith(Predicates2.lessThan(),4),is(3));
  assertThat(iterable.detectIfNone(Predicates.greaterThan(0),() -> 4),is(3));
  assertThat(iterable.detectIfNone(Predicates.greaterThan(1),() -> 4),is(3));
  assertThat(iterable.detectIfNone(Predicates.greaterThan(2),() -> 4),is(3));
  assertThat(iterable.detectIfNone(Predicates.greaterThan(3),() -> 4),is(4));
  assertThat(iterable.detectIfNone(Predicates.lessThan(1),() -> 4),is(4));
  assertThat(iterable.detectIfNone(Predicates.lessThan(2),() -> 4),is(1));
  assertThat(iterable.detectIfNone(Predicates.lessThan(3),() -> 4),is(2));
  assertThat(iterable.detectIfNone(Predicates.lessThan(4),() -> 4),is(3));
  assertThat(iterable.detectWithIfNone(Predicates2.greaterThan(),0,() -> 4),is(3));
  assertThat(iterable.detectWithIfNone(Predicates2.greaterThan(),1,() -> 4),is(3));
  assertThat(iterable.detectWithIfNone(Predicates2.greaterThan(),2,() -> 4),is(3));
  assertThat(iterable.detectWithIfNone(Predicates2.greaterThan(),3,() -> 4),is(4));
  assertThat(iterable.detectWithIfNone(Predicates2.lessThan(),1,() -> 4),is(4));
  assertThat(iterable.detectWithIfNone(Predicates2.lessThan(),2,() -> 4),is(1));
  assertThat(iterable.detectWithIfNone(Predicates2.lessThan(),3,() -> 4),is(2));
  assertThat(iterable.detectWithIfNone(Predicates2.lessThan(),4,() -> 4),is(3));
}
