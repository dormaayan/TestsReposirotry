@Test default void RichIterable_anySatisfy_allSatisfy_noneSatisfy(){
  RichIterable<Integer> iterable=this.newWith(3,2,1);
  assertTrue(iterable.anySatisfy(Predicates.greaterThan(0)));
  assertTrue(iterable.anySatisfy(Predicates.greaterThan(1)));
  assertTrue(iterable.anySatisfy(Predicates.greaterThan(2)));
  assertFalse(iterable.anySatisfy(Predicates.greaterThan(3)));
  assertTrue(iterable.anySatisfyWith(Predicates2.greaterThan(),0));
  assertTrue(iterable.anySatisfyWith(Predicates2.greaterThan(),1));
  assertTrue(iterable.anySatisfyWith(Predicates2.greaterThan(),2));
  assertFalse(iterable.anySatisfyWith(Predicates2.greaterThan(),3));
  assertTrue(iterable.allSatisfy(Predicates.greaterThan(0)));
  assertFalse(iterable.allSatisfy(Predicates.greaterThan(1)));
  assertFalse(iterable.allSatisfy(Predicates.greaterThan(2)));
  assertFalse(iterable.allSatisfy(Predicates.greaterThan(3)));
  assertTrue(iterable.allSatisfyWith(Predicates2.greaterThan(),0));
  assertFalse(iterable.allSatisfyWith(Predicates2.greaterThan(),1));
  assertFalse(iterable.allSatisfyWith(Predicates2.greaterThan(),2));
  assertFalse(iterable.allSatisfyWith(Predicates2.greaterThan(),3));
  assertFalse(iterable.noneSatisfy(Predicates.greaterThan(0)));
  assertFalse(iterable.noneSatisfy(Predicates.greaterThan(1)));
  assertFalse(iterable.noneSatisfy(Predicates.greaterThan(2)));
  assertTrue(iterable.noneSatisfy(Predicates.greaterThan(3)));
  assertFalse(iterable.noneSatisfyWith(Predicates2.greaterThan(),0));
  assertFalse(iterable.noneSatisfyWith(Predicates2.greaterThan(),1));
  assertFalse(iterable.noneSatisfyWith(Predicates2.greaterThan(),2));
  assertTrue(iterable.noneSatisfyWith(Predicates2.greaterThan(),3));
}
