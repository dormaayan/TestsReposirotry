@Test default void RichIterable_min_max_non_comparable(){
  Object sentinel=new Object();
  assertSame(sentinel,this.newWith(sentinel).min());
  assertThrows(ClassCastException.class,() -> this.newWith(new Object(),new Object()).min());
  assertSame(sentinel,this.newWith(sentinel).max());
  assertThrows(ClassCastException.class,() -> this.newWith(new Object(),new Object()).max());
  assertSame(sentinel,this.newWith(sentinel).min(Comparators.reverseNaturalOrder()));
  assertThrows(ClassCastException.class,() -> this.newWith(new Object(),new Object()).min(Comparators.reverseNaturalOrder()));
  assertSame(sentinel,this.newWith(sentinel).max(Comparators.reverseNaturalOrder()));
  assertThrows(ClassCastException.class,() -> this.newWith(new Object(),new Object()).max(Comparators.reverseNaturalOrder()));
}
