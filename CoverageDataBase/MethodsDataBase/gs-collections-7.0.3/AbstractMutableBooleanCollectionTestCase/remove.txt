@Test public void remove(){
  MutableBooleanCollection collection=this.classUnderTest();
  Assert.assertTrue(collection.remove(false));
  Assert.assertEquals(this.newMutableCollectionWith(true,true),collection);
  Assert.assertFalse(collection.remove(false));
  Assert.assertEquals(this.newMutableCollectionWith(true,true),collection);
  Assert.assertTrue(collection.remove(true));
  Assert.assertEquals(this.newMutableCollectionWith(true),collection);
  MutableBooleanCollection collection1=this.newWith();
  Assert.assertFalse(collection1.remove(false));
  Assert.assertEquals(this.newMutableCollectionWith(),collection1);
  Assert.assertTrue(collection1.add(false));
  Assert.assertTrue(collection1.add(false));
  Assert.assertTrue(collection1.remove(false));
  Assert.assertEquals(this.newMutableCollectionWith(false),collection1);
  Assert.assertTrue(collection1.remove(false));
  Assert.assertEquals(this.newMutableCollectionWith(),collection1);
  MutableBooleanCollection collection2=this.newWith();
  Assert.assertFalse(collection2.remove(true));
  Assert.assertEquals(this.newMutableCollectionWith(),collection2);
  Assert.assertTrue(collection2.add(true));
  Assert.assertTrue(collection2.add(true));
  Assert.assertTrue(collection2.remove(true));
  Assert.assertEquals(this.newMutableCollectionWith(true),collection2);
  Assert.assertTrue(collection2.remove(true));
  Assert.assertEquals(this.newMutableCollectionWith(),collection2);
}
