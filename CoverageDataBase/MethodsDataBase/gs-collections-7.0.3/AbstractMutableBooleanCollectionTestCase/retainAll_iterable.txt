@Test public void retainAll_iterable(){
  MutableBooleanCollection collection=this.classUnderTest();
  Assert.assertFalse(collection.retainAll(true,false));
  Assert.assertTrue(collection.retainAll(true));
  Assert.assertEquals(this.newMutableCollectionWith(true,true),collection);
  Assert.assertTrue(collection.retainAll(false,false));
  Assert.assertEquals(this.newMutableCollectionWith(),collection);
  MutableBooleanCollection list=this.classUnderTest();
  Assert.assertFalse(list.retainAll(false,false,true));
  MutableBooleanCollection booleanArrayList=this.newWith(false,false);
  Assert.assertFalse(booleanArrayList.retainAll(false));
  Assert.assertEquals(this.newMutableCollectionWith(false,false),booleanArrayList);
  Assert.assertTrue(booleanArrayList.retainAll(true));
  Assert.assertEquals(this.newMutableCollectionWith(),booleanArrayList);
  Assert.assertTrue(list.retainAll(false));
  Assert.assertEquals(this.newMutableCollectionWith(false),list);
  Assert.assertTrue(list.retainAll());
  Assert.assertEquals(this.newMutableCollectionWith(),list);
  Assert.assertFalse(list.retainAll(true,false));
  Assert.assertEquals(this.newMutableCollectionWith(),list);
  MutableBooleanCollection list1=this.newWith(true,false,true,true);
  Assert.assertFalse(list1.retainAll(false,false,true));
  Assert.assertTrue(list1.retainAll(false,false));
  Verify.assertSize(1,list1);
  Assert.assertFalse(list1.contains(true));
  Assert.assertEquals(this.newMutableCollectionWith(false),list1);
  Assert.assertTrue(list1.retainAll(true,true));
  Assert.assertEquals(this.newMutableCollectionWith(),list1);
  MutableBooleanCollection list2=this.newWith(true,false,true,false,true);
  Assert.assertTrue(list2.retainAll());
  Assert.assertEquals(this.newMutableCollectionWith(),list2);
}
