@Test public void equals_with_hashing_strategy(){
  ObjectBooleanHashMapWithHashingStrategy<Person> map1=ObjectBooleanHashMapWithHashingStrategy.newWithKeysValues(LAST_NAME_HASHING_STRATEGY,JOHNDOE,true,JANEDOE,true,JOHNSMITH,true,JANESMITH,true);
  ObjectBooleanHashMapWithHashingStrategy<Person> map2=ObjectBooleanHashMapWithHashingStrategy.newWithKeysValues(FIRST_NAME_HASHING_STRATEGY,JOHNDOE,true,JANEDOE,true,JOHNSMITH,true,JANESMITH,true);
  ObjectBooleanHashMapWithHashingStrategy<Person> mapWithConstantHashcodeStrategy=ObjectBooleanHashMapWithHashingStrategy.newWithKeysValues(CONSTANT_HASHCODE_STRATEGY,JOHNDOE,true,JANEDOE,true,JOHNSMITH,true,JANESMITH,true);
  Assert.assertEquals(map1,map2);
  Assert.assertEquals(map2,map1);
  Assert.assertEquals(mapWithConstantHashcodeStrategy,map2);
  Assert.assertEquals(map2,mapWithConstantHashcodeStrategy);
  Assert.assertNotEquals(map1.hashCode(),map2.hashCode());
  Assert.assertNotEquals(map1.hashCode(),mapWithConstantHashcodeStrategy.hashCode());
  Assert.assertNotEquals(map2.hashCode(),mapWithConstantHashcodeStrategy.hashCode());
  ObjectBooleanHashMapWithHashingStrategy<Person> map3=ObjectBooleanHashMapWithHashingStrategy.newWithKeysValues(LAST_NAME_HASHING_STRATEGY,JOHNDOE,true,JANEDOE,false,JOHNSMITH,true,JANESMITH,false);
  ObjectBooleanHashMapWithHashingStrategy<Person> map4=ObjectBooleanHashMapWithHashingStrategy.newMap(map3);
  ObjectBooleanMap<Person> hashMap=ObjectBooleanMaps.mutable.withAll(map3);
  Verify.assertEqualsAndHashCode(map3,map4);
  Assert.assertTrue(map3.equals(hashMap) && hashMap.equals(map3) && map3.hashCode() != hashMap.hashCode());
  ObjectBooleanHashMap<Person> objectMap=ObjectBooleanHashMap.newWithKeysValues(JOHNDOE,true,JANEDOE,false,JOHNSMITH,true,JANESMITH,false);
  ObjectBooleanHashMapWithHashingStrategy<Person> map5=ObjectBooleanHashMapWithHashingStrategy.newMap(LAST_NAME_HASHING_STRATEGY,objectMap);
  Assert.assertNotEquals(map5,objectMap);
}
