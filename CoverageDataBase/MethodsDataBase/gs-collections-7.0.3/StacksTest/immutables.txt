@Test public void immutables(){
  ImmutableStackFactory stackFactory=Stacks.immutable;
  Assert.assertEquals(ArrayStack.newStack(),stackFactory.of());
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of());
  Assert.assertEquals(ArrayStack.newStackWith(1),stackFactory.of(1));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1));
  Assert.assertEquals(ArrayStack.newStackWith(1,2),stackFactory.of(1,2));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3),stackFactory.of(1,2,3));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4),stackFactory.of(1,2,3,4));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4,5),stackFactory.of(1,2,3,4,5));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4,5));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4,5,6),stackFactory.of(1,2,3,4,5,6));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4,5,6));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4,5,6,7),stackFactory.of(1,2,3,4,5,6,7));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4,5,6,7));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4,5,6,7,8),stackFactory.of(1,2,3,4,5,6,7,8));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4,5,6,7,8));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4,5,6,7,8,9),stackFactory.of(1,2,3,4,5,6,7,8,9));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4,5,6,7,8,9));
  Assert.assertEquals(ArrayStack.newStackWith(1,2,3,4,5,6,7,8,9,10),stackFactory.of(1,2,3,4,5,6,7,8,9,10));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.of(1,2,3,4,5,6,7,8,9,10));
  Assert.assertEquals(ArrayStack.newStackWith(3,2,1),stackFactory.ofAll(ArrayStack.newStackWith(1,2,3)));
  Verify.assertInstanceOf(ImmutableStack.class,stackFactory.ofAll(ArrayStack.newStackWith(1,2,3)));
}
