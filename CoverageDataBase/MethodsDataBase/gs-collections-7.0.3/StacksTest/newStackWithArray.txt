@SuppressWarnings("RedundantArrayCreation") @Test public void newStackWithArray(){
  ImmutableStack<String> stack=Stacks.immutable.of();
  Assert.assertEquals(stack=stack.push("1"),Stacks.immutable.of(new String[]{"1"}));
  Assert.assertEquals(stack=stack.push("2"),Stacks.immutable.of(new String[]{"1","2"}));
  Assert.assertEquals(stack=stack.push("3"),Stacks.immutable.of(new String[]{"1","2","3"}));
  Assert.assertEquals(stack=stack.push("4"),Stacks.immutable.of(new String[]{"1","2","3","4"}));
  Assert.assertEquals(stack=stack.push("5"),Stacks.immutable.of(new String[]{"1","2","3","4","5"}));
  Assert.assertEquals(stack=stack.push("6"),Stacks.immutable.of(new String[]{"1","2","3","4","5","6"}));
  Assert.assertEquals(stack=stack.push("7"),Stacks.immutable.of(new String[]{"1","2","3","4","5","6","7"}));
  Assert.assertEquals(stack=stack.push("8"),Stacks.immutable.of(new String[]{"1","2","3","4","5","6","7","8"}));
  Assert.assertEquals(stack=stack.push("9"),Stacks.immutable.of(new String[]{"1","2","3","4","5","6","7","8","9"}));
  Assert.assertEquals(stack=stack.push("10"),Stacks.immutable.of(new String[]{"1","2","3","4","5","6","7","8","9","10"}));
  Assert.assertEquals(stack=stack.push("11"),Stacks.immutable.of("1","2","3","4","5","6","7","8","9","10","11"));
}
