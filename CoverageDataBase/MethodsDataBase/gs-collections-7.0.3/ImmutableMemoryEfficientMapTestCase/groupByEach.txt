@Test public void groupByEach(){
  ImmutableMap<String,Integer> map=this.newMapWithKeysValues("1",1,"2",2,"3",3,"4",4);
  NegativeIntervalFunction function=new NegativeIntervalFunction();
  MutableMultimap<Integer,Integer> expected=FastListMultimap.newMultimap();
  for (int i=1; i < map.size(); i++) {
    expected.putAll(-i,Interval.fromTo(i,map.size()));
  }
  Multimap<Integer,Integer> actual=map.groupByEach(function);
  expected.forEachKey(each -> {
    Assert.assertTrue(actual.containsKey(each));
    MutableList<Integer> values=actual.get(each).toList();
    Verify.assertNotEmpty(values);
    Assert.assertTrue(expected.get(each).containsAllIterable(values));
  }
);
  Multimap<Integer,Integer> actualFromTarget=map.groupByEach(function,FastListMultimap.<Integer,Integer>newMultimap());
  expected.forEachKey(each -> {
    Assert.assertTrue(actualFromTarget.containsKey(each));
    MutableList<Integer> values=actualFromTarget.get(each).toList();
    Verify.assertNotEmpty(values);
    Assert.assertTrue(expected.get(each).containsAllIterable(values));
  }
);
}
