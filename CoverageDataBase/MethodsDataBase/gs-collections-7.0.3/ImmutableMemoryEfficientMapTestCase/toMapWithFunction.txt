@Test public void toMapWithFunction(){
  ImmutableMap<String,String> map=this.newMapWithKeysValues("1","One","3","Three","4","Four","11","Eleven");
  MutableMap<Integer,String> actual=map.toMap(String::length,String::valueOf);
switch (map.size()) {
case 1:
    Assert.assertEquals(UnifiedMap.newWithKeysValues(3,"One"),actual);
  break;
case 2:
Assert.assertEquals(UnifiedMap.newWithKeysValues(3,"One",5,"Three"),actual);
break;
case 3:
Assert.assertEquals(UnifiedMap.newWithKeysValues(3,"One",5,"Three",4,"Four"),actual);
break;
case 4:
Assert.assertEquals(UnifiedMap.newWithKeysValues(3,"One",5,"Three",4,"Four",6,"Eleven"),actual);
break;
default :
Verify.assertEmpty(actual);
break;
}
}
