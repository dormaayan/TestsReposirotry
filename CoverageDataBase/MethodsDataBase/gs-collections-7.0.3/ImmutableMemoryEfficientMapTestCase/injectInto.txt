@Test public void injectInto(){
  ImmutableMap<String,Integer> map=this.newMapWithKeysValues("1",1,"2",2,"3",3,"4",4);
  Integer expectedInteger;
  IntegerSum expectedSum;
switch (map.size()) {
case 1:
    expectedSum=new IntegerSum(1);
  expectedInteger=Integer.valueOf(1);
break;
case 2:
expectedSum=new IntegerSum(3);
expectedInteger=Integer.valueOf(3);
break;
case 3:
expectedSum=new IntegerSum(6);
expectedInteger=Integer.valueOf(6);
break;
case 4:
expectedSum=new IntegerSum(10);
expectedInteger=Integer.valueOf(10);
break;
default :
expectedSum=new IntegerSum(0);
expectedInteger=Integer.valueOf(0);
break;
}
Integer actual=map.injectInto(0,AddFunction.INTEGER);
Assert.assertEquals(expectedInteger,actual);
Sum sum=map.injectInto(new IntegerSum(0),SumProcedure.number());
Assert.assertEquals(expectedSum,sum);
}
