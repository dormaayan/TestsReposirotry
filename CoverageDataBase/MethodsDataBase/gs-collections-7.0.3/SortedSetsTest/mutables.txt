@Test public void mutables(){
  MutableSortedSetFactory factory=SortedSets.mutable;
  Assert.assertEquals(TreeSortedSet.newSet(),factory.of());
  Verify.assertInstanceOf(MutableSortedSet.class,factory.of());
  Assert.assertEquals(TreeSortedSet.newSetWith(1,2),factory.of(1,2,2));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.of(1,2));
  Assert.assertEquals(TreeSortedSet.newSetWith(1,2,3,4),factory.of(1,2,3,4));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.of(1,2,3,4));
  Assert.assertEquals(TreeSortedSet.newSetWith(1,2,3,4,5,6),factory.of(1,2,3,4,5,6));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.of(1,2,3,4,5,6));
  Assert.assertEquals(TreeSortedSet.newSetWith(1,2,3,4,5,6,7,8),factory.of(1,2,3,4,5,6,7,8));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.of(1,2,3,4,5,6,7,8));
  Assert.assertEquals(TreeSortedSet.newSetWith(1,2,3,4,5,6,7,8),factory.ofAll(FastList.newListWith(1,2,3,4,5,6,7,8)));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.ofAll(FastList.newListWith(1,2,3,4,5,6,7,8)));
  Assert.assertEquals(TreeSortedSet.newSet(Comparators.naturalOrder()),factory.of(Comparators.naturalOrder()));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.of(Comparators.naturalOrder()));
  Assert.assertEquals(TreeSortedSet.newSetWith(8,7,6,5,4,3,2,1),factory.ofAll(Comparators.reverseNaturalOrder(),FastList.newListWith(1,2,3,4,5,6,7,8)));
  Verify.assertInstanceOf(MutableSortedSet.class,factory.ofAll(Comparators.reverseNaturalOrder(),FastList.newListWith(1,2,3,4,5,6,7,8)));
}
