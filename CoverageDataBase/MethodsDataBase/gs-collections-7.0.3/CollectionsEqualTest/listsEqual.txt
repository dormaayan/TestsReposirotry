@Test public void listsEqual(){
  List<?> nullList=null;
  Verify.assertListsEqual(nullList,nullList);
  Verify.assertListsEqual("assertListsEqual(nullList, nullList)",nullList,nullList);
  Verify.assertListsEqual(this.list,this.list);
  Verify.assertListsEqual("assertListsEqual(list, list)",this.list,this.list);
  try {
    Verify.assertListsEqual("assertListsEqual(nullList, list)",nullList,this.list);
    Assert.fail("AssertionError expected");
  }
 catch (  AssertionError e) {
    Verify.assertContains(CollectionsEqualTest.class.getName(),e.getStackTrace()[0].toString());
  }
  try {
    Verify.assertListsEqual(nullList,this.list);
    Assert.fail("AssertionError expected");
  }
 catch (  AssertionError e) {
    Verify.assertContains(CollectionsEqualTest.class.getName(),e.getStackTrace()[0].toString());
  }
  try {
    Verify.assertListsEqual("assertListsEqual(list, nullList)",this.list,nullList);
    Assert.fail("AssertionError expected");
  }
 catch (  AssertionError e) {
    Verify.assertContains(CollectionsEqualTest.class.getName(),e.getStackTrace()[0].toString());
  }
  try {
    Verify.assertListsEqual(this.list,nullList);
    Assert.fail("AssertionError expected");
  }
 catch (  AssertionError e) {
    Verify.assertContains(CollectionsEqualTest.class.getName(),e.getStackTrace()[0].toString());
  }
}
