@Override @Test public void removeAll_iterable(){
  Assert.assertFalse(this.newWith().removeAll(new BooleanArrayList()));
  ObjectBooleanHashMap<Integer> map=ObjectBooleanHashMap.newWithKeysValues(1,true,null,false);
  MutableBooleanCollection collection=map.values();
  Assert.assertFalse(collection.removeAll());
  Assert.assertTrue(collection.removeAll(BooleanArrayList.newListWith(false)));
  Assert.assertFalse(collection.contains(false));
  Assert.assertTrue(collection.contains(true));
  Assert.assertFalse(map.contains(false));
  Assert.assertTrue(map.contains(true));
  Assert.assertTrue(collection.removeAll(BooleanArrayList.newListWith(true)));
  Assert.assertTrue(collection.isEmpty());
  Assert.assertFalse(collection.contains(true));
  Assert.assertFalse(collection.contains(false));
  Assert.assertFalse(map.contains(true));
  Assert.assertFalse(map.contains(false));
  Assert.assertTrue(map.isEmpty());
  ObjectBooleanHashMap<Integer> map1=ObjectBooleanHashMap.newWithKeysValues(1,true,null,false);
  MutableBooleanCollection collection1=map1.values();
  Assert.assertTrue(collection1.removeAll(BooleanArrayList.newListWith(true,false)));
  Assert.assertTrue(collection1.isEmpty());
  Assert.assertFalse(collection1.contains(true));
  Assert.assertFalse(collection.contains(false));
  Assert.assertFalse(map1.contains(true));
  Assert.assertFalse(map1.contains(false));
  Assert.assertTrue(map1.isEmpty());
}
