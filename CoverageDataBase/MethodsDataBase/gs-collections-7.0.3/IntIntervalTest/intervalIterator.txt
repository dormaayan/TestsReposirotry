@Test public void intervalIterator(){
  IntInterval zero=IntInterval.zero();
  IntIterator zeroIterator=zero.intIterator();
  Assert.assertTrue(zeroIterator.hasNext());
  Assert.assertEquals(0,zeroIterator.next());
  Assert.assertFalse(zeroIterator.hasNext());
  IntInterval oneToFive=IntInterval.oneTo(5);
  IntIterator oneToFiveIterator=oneToFive.intIterator();
  for (int i=1; i < 6; i++) {
    Assert.assertTrue(oneToFiveIterator.hasNext());
    Assert.assertEquals(i,oneToFiveIterator.next());
  }
  Verify.assertThrows(NoSuchElementException.class,(Runnable)oneToFiveIterator::next);
  IntInterval threeToNegativeThree=IntInterval.fromTo(3,-3);
  IntIterator threeToNegativeThreeIterator=threeToNegativeThree.intIterator();
  for (int i=3; i > -4; i--) {
    Assert.assertTrue(threeToNegativeThreeIterator.hasNext());
    Assert.assertEquals(i,threeToNegativeThreeIterator.next());
  }
  Verify.assertThrows(NoSuchElementException.class,(Runnable)threeToNegativeThreeIterator::next);
}
