@Override @Test public void containsAllIterable(){
  UnmodifiableBooleanSet emptyCollection=this.newWith();
  Assert.assertTrue(emptyCollection.containsAll(new BooleanArrayList()));
  Assert.assertFalse(emptyCollection.containsAll(BooleanArrayList.newListWith(true)));
  Assert.assertFalse(emptyCollection.containsAll(BooleanArrayList.newListWith(false)));
  UnmodifiableBooleanSet collection=this.newWith(true,true,false,false,false);
  Assert.assertTrue(collection.containsAll(BooleanArrayList.newListWith(true)));
  Assert.assertTrue(collection.containsAll(BooleanArrayList.newListWith(false)));
  Assert.assertTrue(collection.containsAll(BooleanArrayList.newListWith(true,false)));
  Assert.assertTrue(collection.containsAll(BooleanArrayList.newListWith(true,true)));
  Assert.assertTrue(collection.containsAll(BooleanArrayList.newListWith(false,false)));
  Assert.assertTrue(collection.containsAll(BooleanArrayList.newListWith(true,false,true)));
  Assert.assertFalse(this.newWith(true,true).containsAll(BooleanArrayList.newListWith(false,true,false)));
  UnmodifiableBooleanSet trueCollection=this.newWith(true,true,true,true);
  Assert.assertFalse(trueCollection.containsAll(BooleanArrayList.newListWith(true,false)));
  UnmodifiableBooleanSet falseCollection=this.newWith(false,false,false,false);
  Assert.assertFalse(falseCollection.containsAll(BooleanArrayList.newListWith(true,false)));
}
