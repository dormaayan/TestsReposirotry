@Test public void immutable(){
  ImmutableHashingStrategySetFactory factory=HashingStrategySets.immutable;
  Assert.assertEquals(UnifiedSet.newSet(),factory.of(HashingStrategies.defaultStrategy()));
  Verify.assertInstanceOf(ImmutableSet.class,factory.of(HashingStrategies.defaultStrategy()));
  Assert.assertEquals(UnifiedSet.newSetWith(1,2),factory.of(HashingStrategies.defaultStrategy(),1,2));
  Verify.assertInstanceOf(ImmutableSet.class,factory.of(HashingStrategies.defaultStrategy(),1,2));
  Assert.assertEquals(UnifiedSet.newSetWith(1,2,3,4),factory.of(HashingStrategies.defaultStrategy(),1,2,3,4));
  Verify.assertInstanceOf(ImmutableSet.class,factory.of(HashingStrategies.defaultStrategy(),1,2,3,4));
  Assert.assertEquals(UnifiedSet.newSetWith(1,2,3,4,5,6),factory.of(HashingStrategies.defaultStrategy(),1,2,3,4,5,6));
  Verify.assertInstanceOf(ImmutableSet.class,factory.of(HashingStrategies.defaultStrategy(),1,2,3,4,5,6));
  Assert.assertEquals(UnifiedSet.newSetWith(1,2,3,4,5,6,7,8),factory.of(HashingStrategies.defaultStrategy(),1,2,3,4,5,6,7,8));
  Verify.assertInstanceOf(ImmutableSet.class,factory.of(HashingStrategies.defaultStrategy(),1,2,3,4,5,6,7,8));
  Assert.assertEquals(UnifiedSet.newSetWith(),factory.of(HashingStrategies.defaultStrategy(),null));
  Verify.assertInstanceOf(ImmutableSet.class,factory.of(HashingStrategies.defaultStrategy(),null));
}
