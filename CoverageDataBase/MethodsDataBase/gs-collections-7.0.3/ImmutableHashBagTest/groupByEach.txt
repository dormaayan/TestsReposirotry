@Override @Test public void groupByEach(){
  ImmutableBag<Integer> immutableBag=ImmutableHashBag.newBagWith(1,2,2,3,3,3,4,4,4,4);
  MutableMultimap<Integer,Integer> expected=HashBagMultimap.newMultimap();
  int keys=this.numKeys();
  immutableBag.forEachWithOccurrences((each,parameter) -> {
    HashBag<Integer> bag=HashBag.newBag();
    Interval.fromTo(each,keys).forEach((    int eachInt) -> bag.addOccurrences(eachInt,eachInt));
    expected.putAll(-each,bag);
  }
);
  Multimap<Integer,Integer> actual=immutableBag.groupByEach(new NegativeIntervalFunction());
  Assert.assertEquals(expected,actual);
  Multimap<Integer,Integer> actualWithTarget=immutableBag.groupByEach(new NegativeIntervalFunction(),HashBagMultimap.<Integer,Integer>newMultimap());
  Assert.assertEquals(expected,actualWithTarget);
}
