@Test public void entry_toArray(){
  MutableBiMap<Integer,String> biMap=this.newMapWithKeysValues(1,"1",2,"2",3,"3");
  Map.Entry<Integer,String>[] objects=biMap.entrySet().toArray(new Map.Entry[3]);
  Comparator<Map.Entry<Integer,String>> comparator=(o1,o2) -> o1.getKey().compareTo(o2.getKey());
  Arrays.sort(objects,comparator);
  for (int i=0; i < objects.length; i++) {
    Map.Entry<Integer,String> object=objects[i];
    Assert.assertEquals(Integer.valueOf(i + 1),object.getKey());
    Assert.assertEquals(String.valueOf(i + 1),object.getValue());
  }
  Map.Entry<Integer,String>[] smallArray=biMap.entrySet().toArray(new Map.Entry[2]);
  Arrays.sort(objects,comparator);
  for (int i=0; i < objects.length; i++) {
    Map.Entry<Integer,String> object=smallArray[i];
    Assert.assertEquals(Integer.valueOf(i + 1),object.getKey());
    Assert.assertEquals(String.valueOf(i + 1),object.getValue());
  }
  for (int i=0; i < objects.length; i++) {
    Map.Entry<Integer,String> object=objects[i];
    object.setValue(String.valueOf(i + 4));
  }
  Assert.assertTrue(Arrays.equals(new Map.Entry[]{ImmutableEntry.of(1,"4"),ImmutableEntry.of(2,"5"),ImmutableEntry.of(3,"6")},biMap.entrySet().toArray()));
  Assert.assertEquals(HashBiMap.newWithKeysValues(1,"4",2,"5",3,"6"),biMap);
}
