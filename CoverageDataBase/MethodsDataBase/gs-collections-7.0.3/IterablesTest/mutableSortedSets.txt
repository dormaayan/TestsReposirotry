@Test public void mutableSortedSets(){
  this.assertEqualsAndInstanceOf(TreeSortedSet.newSet(),Iterables.mSortedSet(),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(1).toSortedSet(),Iterables.mSortedSet(1),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(2).toSortedSet(),Iterables.mSortedSet(1,2),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(3).toSortedSet(),Iterables.mSortedSet(1,2,3),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(4).toSortedSet(),Iterables.mSortedSet(1,2,3,4),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(5).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(6).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5,6),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(7).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5,6,7),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(8).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5,6,7,8),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(9).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5,6,7,8,9),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(10).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5,6,7,8,9,10),MutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(11).toSortedSet(),Iterables.mSortedSet(1,2,3,4,5,6,7,8,9,10,11),MutableSortedSet.class);
}
