@Test public void mutableSortedMapsWithComparator(){
  this.assertEqualsAndInstanceOf(TreeSortedMap.newMap(Comparators.reverseNaturalOrder()),Iterables.mSortedMap(Comparators.reverseNaturalOrder()),MutableSortedMap.class);
  this.assertEqualsAndInstanceOf(TreeSortedMap.newMap(Comparators.reverseNaturalOrder()),Iterables.mSortedMap(null),MutableSortedMap.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(1).toSortedMap(Comparators.reverseNaturalOrder(),Functions.getPassThru(),Functions.getPassThru()),Iterables.mSortedMap(Comparators.reverseNaturalOrder(),1,1),MutableSortedMap.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(2).toSortedMap(Comparators.reverseNaturalOrder(),Functions.getPassThru(),Functions.getPassThru()),Iterables.mSortedMap(Comparators.reverseNaturalOrder(),1,1,2,2),MutableSortedMap.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(3).toSortedMap(Comparators.reverseNaturalOrder(),Functions.getPassThru(),Functions.getPassThru()),Iterables.mSortedMap(Comparators.reverseNaturalOrder(),1,1,2,2,3,3),MutableSortedMap.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(4).toSortedMap(Comparators.reverseNaturalOrder(),Functions.getPassThru(),Functions.getPassThru()),Iterables.mSortedMap(Comparators.reverseNaturalOrder(),1,1,2,2,3,3,4,4),MutableSortedMap.class);
}
