@Test public void immutableSortedSets(){
  this.assertEqualsAndInstanceOf(TreeSortedSet.newSet(),Iterables.iSortedSet(),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(1).toSortedSet(),Iterables.iSortedSet(1),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(2).toSortedSet(),Iterables.iSortedSet(1,2),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(3).toSortedSet(),Iterables.iSortedSet(1,2,3),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(4).toSortedSet(),Iterables.iSortedSet(1,2,3,4),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(5).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(6).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5,6),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(7).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5,6,7),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(8).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5,6,7,8),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(9).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5,6,7,8,9),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(10).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5,6,7,8,9,10),ImmutableSortedSet.class);
  this.assertEqualsAndInstanceOf(Interval.oneTo(11).toSortedSet(),Iterables.iSortedSet(1,2,3,4,5,6,7,8,9,10,11),ImmutableSortedSet.class);
}
