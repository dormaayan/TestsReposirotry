@Override @Test public void zip(){
  ImmutableSet<Integer> immutableSet=this.classUnderTest();
  List<Object> nulls=Collections.nCopies(immutableSet.size(),null);
  List<Object> nullsPlusOne=Collections.nCopies(immutableSet.size() + 1,null);
  ImmutableSet<Pair<Integer,Object>> pairs=immutableSet.zip(nulls);
  Assert.assertEquals(immutableSet,pairs.collect((Function<Pair<Integer,?>,Integer>)Pair::getOne));
  Assert.assertEquals(UnifiedSet.newSet(nulls),pairs.collect((Function<Pair<?,Object>,Object>)Pair::getTwo));
  ImmutableSet<Pair<Integer,Object>> pairsPlusOne=immutableSet.zip(nullsPlusOne);
  Assert.assertEquals(immutableSet,pairsPlusOne.collect((Function<Pair<Integer,?>,Integer>)Pair::getOne));
  Assert.assertEquals(UnifiedSet.newSet(nulls),pairsPlusOne.collect((Function<Pair<?,Object>,Object>)Pair::getTwo));
  Assert.assertEquals(immutableSet.zip(nulls),immutableSet.zip(nulls,UnifiedSet.<Pair<Integer,Object>>newSet()));
}
