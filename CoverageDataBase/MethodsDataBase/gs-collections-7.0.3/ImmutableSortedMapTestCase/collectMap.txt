@Override @Test public void collectMap(){
  super.collectMap();
  ImmutableSortedMap<Integer,String> map=this.classUnderTest();
  Function2<Integer,String,Pair<String,Integer>> function=(  Integer argument1,  String argument2) -> Tuples.pair(argument2,argument1);
  ImmutableMap<String,Integer> collect=map.collect(function);
  Verify.assertSetsEqual(Interval.oneTo(this.size()).collect(String::valueOf).toSet(),collect.keysView().toSet());
  Verify.assertSetsEqual(Interval.oneTo(this.size()).toSet(),collect.valuesView().toSet());
  ImmutableSortedMap<Integer,String> revMap=this.classUnderTest(REV_INT_COMPARATOR);
  ImmutableMap<String,Integer> revCollect=revMap.collect(function);
  Verify.assertSetsEqual(Interval.oneTo(this.size()).collect(String::valueOf).toSet(),revCollect.keysView().toSet());
  Verify.assertSetsEqual(Interval.oneTo(this.size()).toSet(),revCollect.valuesView().toSet());
}
