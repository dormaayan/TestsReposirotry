@Override @Test public void forEachWith(){
  super.forEachWith();
  Object actualParameter=new Object();
  MutableList<String> actualValues=Lists.mutable.of();
  MutableList<Object> actualParameters=Lists.mutable.of();
  this.classUnderTest().forEachWith((eachValue,parameter) -> {
    actualValues.add(eachValue);
    actualParameters.add(parameter);
  }
,actualParameter);
  Verify.assertListsEqual(this.expectedKeys().collect(String::valueOf),actualValues);
  Verify.assertListsEqual(Collections.nCopies(this.size(),actualParameter),actualParameters);
  MutableList<String> revActualValues=Lists.mutable.of();
  MutableList<Object> revActualParameters=Lists.mutable.of();
  this.classUnderTest(REV_INT_COMPARATOR).forEachWith((eachValue,parameter) -> {
    revActualValues.add(eachValue);
    revActualParameters.add(parameter);
  }
,actualParameter);
  Verify.assertListsEqual(this.expectedKeys().collect(String::valueOf).reverseThis(),revActualValues);
  Verify.assertListsEqual(Collections.nCopies(this.size(),actualParameter),revActualParameters);
}
