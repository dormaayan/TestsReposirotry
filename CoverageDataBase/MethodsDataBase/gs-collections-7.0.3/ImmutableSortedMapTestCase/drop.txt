@Test public void drop(){
  ImmutableSortedMap<Integer,String> strings1=this.classUnderTest();
  Assert.assertSame(strings1,strings1.drop(0));
  Assert.assertSame(strings1.comparator(),strings1.drop(0).comparator());
  Assert.assertEquals(SortedMaps.immutable.of(strings1.comparator(),4,"4"),strings1.drop(3));
  Assert.assertSame(strings1.comparator(),strings1.drop(3).comparator());
  Assert.assertEquals(SortedMaps.immutable.of(strings1.comparator(),4,"4"),strings1.drop(strings1.size() - 1));
  ImmutableSortedMap<Integer,String> expectedMap=SortedMaps.immutable.of(Comparators.reverseNaturalOrder());
  ImmutableSortedMap<Integer,String> strings2=this.classUnderTest(Comparators.reverseNaturalOrder());
  Assert.assertEquals(expectedMap,strings2.drop(strings2.size()));
  Assert.assertEquals(expectedMap,strings2.drop(10));
  Assert.assertEquals(expectedMap,strings2.drop(Integer.MAX_VALUE));
}
