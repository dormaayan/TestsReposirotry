@Override @Test public void forEachKeyValue(){
  super.forEachKeyValue();
  MutableList<Integer> actualKeys=Lists.mutable.of();
  MutableList<String> actualValues=Lists.mutable.of();
  this.classUnderTest().forEachKeyValue((key,value) -> {
    actualKeys.add(key);
    actualValues.add(value);
  }
);
  MutableList<Integer> expectedKeys=this.expectedKeys();
  Verify.assertListsEqual(expectedKeys,actualKeys);
  MutableList<String> expectedValues=expectedKeys.collect(String::valueOf);
  Verify.assertListsEqual(expectedValues,actualValues);
  MutableList<Integer> revActualKeys=Lists.mutable.of();
  MutableList<String> revActualValues=Lists.mutable.of();
  this.classUnderTest(REV_INT_COMPARATOR).forEachKeyValue((key,value) -> {
    revActualKeys.add(key);
    revActualValues.add(value);
  }
);
  MutableList<Integer> reverseKeys=expectedKeys.reverseThis();
  Verify.assertListsEqual(reverseKeys,revActualKeys);
  MutableList<String> reverseValues=expectedValues.reverseThis();
  Verify.assertListsEqual(reverseValues,revActualValues);
}
