@Test public void chains(){
  Function<String,Integer> toInteger=Functions.getStringToInteger();
  Function<Object,String> toString=String::valueOf;
  Assert.assertEquals("42",Functions.chain(toInteger,toString).valueOf("42"));
  Assert.assertEquals(Integer.valueOf(42),Functions.chain(toString,toInteger).valueOf(42));
  Function<String,Integer> chain=Functions.chain(toInteger,toString).chain(toInteger);
  Assert.assertEquals(Integer.valueOf(42),chain.valueOf("42"));
  Assert.assertEquals("42",Functions.chain(toString,toInteger).chain(toString).valueOf(42));
  Assert.assertEquals("42",Functions.chain(toInteger,toString).chain(toInteger).chain(toString).valueOf("42"));
  Assert.assertEquals(Integer.valueOf(42),Functions.chain(toString,toInteger).chain(toString).chain(toInteger).valueOf(42));
  Assert.assertEquals(Integer.valueOf(42),Functions.chain(toInteger,toString).chain(toInteger).chain(toString).chain(toInteger).valueOf("42"));
  Assert.assertEquals(Integer.valueOf(42),Functions.chain(toString,toInteger).chain(toString).chain(toInteger).chain(toString).chain(toInteger).valueOf(42));
}
