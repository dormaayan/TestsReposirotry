@Override @Test public void zip(){
  ImmutableList<Integer> immutableList=this.classUnderTest();
  List<Object> nulls=Collections.nCopies(immutableList.size(),null);
  List<Object> nullsPlusOne=Collections.nCopies(immutableList.size() + 1,null);
  ImmutableList<Pair<Integer,Object>> pairs=immutableList.zip(nulls);
  Assert.assertEquals(immutableList,pairs.collect((Function<Pair<Integer,?>,Integer>)Pair::getOne));
  Assert.assertEquals(nulls,pairs.collect((Function<Pair<?,Object>,Object>)Pair::getTwo));
  ImmutableList<Pair<Integer,Object>> pairsPlusOne=immutableList.zip(nullsPlusOne);
  Assert.assertEquals(immutableList,pairsPlusOne.collect((Function<Pair<Integer,?>,Integer>)Pair::getOne));
  Assert.assertEquals(nulls,pairsPlusOne.collect((Function<Pair<?,Object>,Object>)Pair::getTwo));
  Assert.assertEquals(immutableList.zip(nulls),immutableList.zip(nulls,FastList.<Pair<Integer,Object>>newList()));
}
