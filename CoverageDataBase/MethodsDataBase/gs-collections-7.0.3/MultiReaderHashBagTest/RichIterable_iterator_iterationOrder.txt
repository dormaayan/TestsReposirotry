@Override @Test public void RichIterable_iterator_iterationOrder(){
  MutableCollection<Integer> iterationOrder=this.newMutableForFilter();
  MultiReaderHashBag<Integer> instanceUnderTest=this.newWith(4,4,4,4,3,3,3,2,2,1);
  MutableCollection<Integer> expectedIterationOrder=this.newMutableForFilter();
  instanceUnderTest.forEach(Procedures.cast(expectedIterationOrder::add));
  instanceUnderTest.withReadLockAndDelegate(delegate -> {
    Iterator<Integer> iterator=delegate.iterator();
    while (iterator.hasNext()) {
      iterationOrder.add(iterator.next());
    }
  }
);
  assertEquals(expectedIterationOrder,iterationOrder);
}
