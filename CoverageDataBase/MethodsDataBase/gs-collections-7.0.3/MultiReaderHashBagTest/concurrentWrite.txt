@Test public void concurrentWrite(){
  MultiReaderHashBag<Integer> numbers=this.newWith();
  Interval interval=Interval.oneTo(100);
  ParallelIterate.forEach(interval,each -> {
    numbers.add(each);
    Verify.assertSize(1,numbers.select(each::equals));
    numbers.add(each);
    Assert.assertEquals(2,numbers.count(each::equals));
    numbers.add(each);
    Integer[] removed=new Integer[1];
    numbers.withWriteLockAndDelegate(bag -> {
      Iterator<Integer> iterator=bag.iterator();
      removed[0]=iterator.next();
      bag.remove(removed[0]);
      bag.add(removed[0]);
    }
);
    numbers.add(each);
    Assert.assertEquals(4,numbers.count(each::equals));
  }
,1);
  interval.forEach(Procedures.cast(each -> Assert.assertEquals(4,numbers.occurrencesOf(each))));
}
