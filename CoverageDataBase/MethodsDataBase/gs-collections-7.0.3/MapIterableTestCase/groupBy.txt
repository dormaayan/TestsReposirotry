@Test public void groupBy(){
  MapIterable<String,Integer> map=this.newMapWithKeysValues("1",1,"2",2,"3",3,"4",4);
  Function<Integer,Boolean> isOddFunction=object -> IntegerPredicates.isOdd().accept(object);
  Multimap<Boolean,Integer> expected=FastListMultimap.newMultimap(Tuples.pair(Boolean.TRUE,1),Tuples.pair(Boolean.TRUE,3),Tuples.pair(Boolean.FALSE,2),Tuples.pair(Boolean.FALSE,4));
  Multimap<Boolean,Integer> actual=map.groupBy(isOddFunction);
  expected.forEachKey(each -> {
    Assert.assertTrue(actual.containsKey(each));
    MutableList<Integer> values=actual.get(each).toList();
    Verify.assertNotEmpty(values);
    Assert.assertTrue(expected.get(each).containsAllIterable(values));
  }
);
  Multimap<Boolean,Integer> actualFromTarget=map.groupBy(isOddFunction,FastListMultimap.<Boolean,Integer>newMultimap());
  expected.forEachKey(each -> {
    Assert.assertTrue(actualFromTarget.containsKey(each));
    MutableList<Integer> values=actualFromTarget.get(each).toList();
    Verify.assertNotEmpty(values);
    Assert.assertTrue(expected.get(each).containsAllIterable(values));
  }
);
}
