@Test public void put_get_with_hashing_strategy(){
  UnifiedMapWithHashingStrategy<Integer,Integer> map=UnifiedMapWithHashingStrategy.newMap(INTEGER_HASHING_STRATEGY);
  Assert.assertNull(map.put(1,1));
  Assert.assertNull(map.put(2,2));
  Assert.assertNull(map.put(3,3));
  Assert.assertNull(map.put(4,4));
  Assert.assertNull(map.put(5,null));
  Assert.assertEquals(1,map.get(1).intValue());
  Assert.assertEquals(2,map.get(2).intValue());
  Assert.assertNull(map.get(5));
  Assert.assertNull(map.put(COLLISION_1,1));
  Assert.assertNull(map.get(COLLISION_2));
  Assert.assertNull(map.put(COLLISION_2,2));
  Assert.assertNull(map.get(COLLISION_3));
  Assert.assertNull(map.put(COLLISION_3,null));
  Assert.assertNull(map.put(COLLISION_4,4));
  Assert.assertNull(map.put(COLLISION_5,5));
  Assert.assertEquals(1,map.get(COLLISION_1).intValue());
  Assert.assertEquals(5,map.get(COLLISION_5).intValue());
  Assert.assertNull(map.get(COLLISION_3));
  map.remove(COLLISION_2);
  Assert.assertNull(map.get(COLLISION_2));
  HashingStrategy<Person> lastName=new HashingStrategy<Person>(){
    public int computeHashCode(    Person object){
      return object.getLastName().hashCode();
    }
    public boolean equals(    Person object1,    Person object2){
      return object1.equals(object2);
    }
  }
;
  UnifiedMapWithHashingStrategy<Person,Integer> map2=UnifiedMapWithHashingStrategy.newMap(lastName);
  Assert.assertNull(map2.put(new Person("abe","smith"),1));
  Assert.assertNull(map2.put(new Person("brad","smith"),2));
  Assert.assertNull(map2.put(new Person("charlie","smith"),3));
}
