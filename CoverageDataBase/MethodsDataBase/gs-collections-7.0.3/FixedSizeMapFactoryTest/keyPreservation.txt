@Test public void keyPreservation(){
  Key key=new Key("key");
  Key duplicateKey1=new Key("key");
  MutableMap<Key,Integer> map1=Maps.fixedSize.of(key,1,duplicateKey1,2);
  Verify.assertSize(1,map1);
  Verify.assertContainsKeyValue(key,2,map1);
  Assert.assertSame(key,map1.keysView().getFirst());
  Key duplicateKey2=new Key("key");
  MutableMap<Key,Integer> map2=Maps.fixedSize.of(key,1,duplicateKey1,2,duplicateKey2,3);
  Verify.assertSize(1,map2);
  Verify.assertContainsKeyValue(key,3,map2);
  Assert.assertSame(key,map1.keysView().getFirst());
  Key duplicateKey3=new Key("key");
  MutableMap<Key,Integer> map3=Maps.fixedSize.of(key,1,new Key("not a dupe"),2,duplicateKey3,3);
  Verify.assertSize(2,map3);
  Verify.assertContainsAllKeyValues(map3,key,3,new Key("not a dupe"),2);
  Assert.assertSame(key,map3.keysView().detect(key::equals));
}
