@Test public void collectIf(){
  StackIterable<Integer> stack=this.newStackFromTopToBottom(1,2,3,4,5);
  CountingPredicate<Integer> predicate1=CountingPredicate.of(Predicates.lessThan(3));
  CountingFunction<Object,String> function1=CountingFunction.of(String::valueOf);
  Assert.assertEquals(this.newStackFromTopToBottom("1","2"),stack.collectIf(predicate1,function1));
  Assert.assertEquals(5,predicate1.count);
  Assert.assertEquals(2,function1.count);
  CountingPredicate<Integer> predicate2=CountingPredicate.of(Predicates.lessThan(3));
  CountingFunction<Object,String> function2=CountingFunction.of(String::valueOf);
  Assert.assertEquals(FastList.newListWith("1","2"),stack.collectIf(predicate2,function2,FastList.<String>newList()));
  Assert.assertEquals(5,predicate2.count);
  Assert.assertEquals(2,function2.count);
}
