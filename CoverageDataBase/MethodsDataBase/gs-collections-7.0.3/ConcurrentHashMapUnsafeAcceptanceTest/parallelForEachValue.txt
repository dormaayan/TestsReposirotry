@Test public void parallelForEachValue(){
  ConcurrentHashMapUnsafe<Integer,Integer> source=ConcurrentHashMapUnsafe.newMap(Interval.oneTo(1000).toMap(Functions.getIntegerPassThru(),Functions.getIntegerPassThru()));
  MutableMap<Integer,MutableBag<Integer>> actual=ConcurrentHashMapUnsafe.newMap();
  Procedure<Integer> procedure=each -> actual.getIfAbsentPut(each % 100,() -> HashBag.<Integer>newBag().asSynchronized()).add(each);
  source.parallelForEachValue(FastList.newList(Collections.nCopies(5,procedure)),this.executor);
  Verify.assertEqualsAndHashCode(BAG_MUTABLE_MAP,actual);
}
