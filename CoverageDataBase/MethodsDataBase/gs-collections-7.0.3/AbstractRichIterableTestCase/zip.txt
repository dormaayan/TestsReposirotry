@Test public void zip(){
  RichIterable<String> collection=this.newWith("1","2","3","4","5","6","7");
  List<Object> nulls=Collections.nCopies(collection.size(),null);
  List<Object> nullsPlusOne=Collections.nCopies(collection.size() + 1,null);
  List<Object> nullsMinusOne=Collections.nCopies(collection.size() - 1,null);
  RichIterable<Pair<String,Object>> pairs=collection.zip(nulls);
  Assert.assertEquals(collection.toSet(),pairs.collect((Function<Pair<String,?>,String>)Pair::getOne).toSet());
  Assert.assertEquals(nulls,pairs.collect((Function<Pair<?,Object>,Object>)Pair::getTwo,Lists.mutable.of()));
  RichIterable<Pair<String,Object>> pairsPlusOne=collection.zip(nullsPlusOne);
  Assert.assertEquals(collection.toSet(),pairsPlusOne.collect((Function<Pair<String,?>,String>)Pair::getOne).toSet());
  Assert.assertEquals(nulls,pairsPlusOne.collect((Function<Pair<?,Object>,Object>)Pair::getTwo,Lists.mutable.of()));
  RichIterable<Pair<String,Object>> pairsMinusOne=collection.zip(nullsMinusOne);
  Assert.assertEquals(collection.size() - 1,pairsMinusOne.size());
  Assert.assertTrue(collection.containsAllIterable(pairsMinusOne.collect((Function<Pair<String,?>,String>)Pair::getOne)));
  Assert.assertEquals(collection.zip(nulls).toSet(),collection.zip(nulls,UnifiedSet.<Pair<String,Object>>newSet()));
}
