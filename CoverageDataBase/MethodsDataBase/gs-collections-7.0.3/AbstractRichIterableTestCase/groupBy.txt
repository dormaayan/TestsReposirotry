@Test public void groupBy(){
  RichIterable<Integer> collection=this.newWith(1,2,3,4,5,6,7);
  Function<Integer,Boolean> isOddFunction=object -> IntegerPredicates.isOdd().accept(object);
  MutableMap<Boolean,RichIterable<Integer>> expected=UnifiedMap.newWithKeysValues(Boolean.TRUE,this.newWith(1,3,5,7),Boolean.FALSE,this.newWith(2,4,6));
  Multimap<Boolean,Integer> multimap=collection.groupBy(isOddFunction);
  Assert.assertEquals(expected,multimap.toMap());
  Function<Integer,Boolean> function=(  Integer object) -> true;
  MutableMultimap<Boolean,Integer> multimap2=collection.groupBy(isOddFunction,this.<Integer>newWith().groupBy(function).toMutable());
  Assert.assertEquals(expected,multimap2.toMap());
}
