@Test public void groupByEach(){
  RichIterable<Integer> collection=this.newWith(1,2,3,4,5,6,7);
  NegativeIntervalFunction function=new NegativeIntervalFunction();
  MutableMultimap<Integer,Integer> expected=this.<Integer>newWith().groupByEach(function).toMutable();
  for (int i=1; i < 8; i++) {
    expected.putAll(-i,Interval.fromTo(i,7));
  }
  Multimap<Integer,Integer> actual=collection.groupByEach(function);
  Assert.assertEquals(expected,actual);
  Multimap<Integer,Integer> actualWithTarget=collection.groupByEach(function,this.<Integer>newWith().groupByEach(function).toMutable());
  Assert.assertEquals(expected,actualWithTarget);
}
