@Test public void collectIf(){
  Predicate<Integer> predicate=Predicates.greaterThan(1).and(Predicates.lessThan(4));
  Assert.assertEquals(this.getExpectedCollect().collectIf(predicate,String::valueOf),this.getActual(this.classUnderTest().collectIf(predicate,String::valueOf)));
  Assert.assertEquals(this.getExpectedCollect().collectIf(predicate,String::valueOf,HashBag.newBag()),this.classUnderTest().collectIf(predicate,String::valueOf).toList().toBag());
  Assert.assertEquals(this.getExpectedCollect().collectIf(predicate,String::valueOf).toBag(),this.classUnderTest().collectIf(predicate,String::valueOf).toBag());
  Object constant=new Object();
  Assert.assertEquals(this.getExpectedCollect().collectIf(predicate,ignored -> constant,HashBag.newBag()),this.classUnderTest().collectIf(predicate,ignored -> constant).toList().toBag());
}
