@Test public void rejectWith(){
  Assert.assertEquals(this.getExpected().rejectWith(Predicates2.<Integer>lessThanOrEqualTo(),1).rejectWith(Predicates2.<Integer>greaterThanOrEqualTo(),4),this.getActual(this.classUnderTest().rejectWith(Predicates2.<Integer>lessThanOrEqualTo(),1).rejectWith(Predicates2.<Integer>greaterThanOrEqualTo(),4)));
  Assert.assertEquals(this.getExpected().rejectWith(Predicates2.<Integer>lessThanOrEqualTo(),1).rejectWith(Predicates2.<Integer>greaterThanOrEqualTo(),4).toList().toBag(),this.classUnderTest().rejectWith(Predicates2.<Integer>lessThanOrEqualTo(),1).rejectWith(Predicates2.<Integer>greaterThanOrEqualTo(),4).toList().toBag());
  Assert.assertEquals(this.getExpected().rejectWith(Predicates2.<Integer>lessThanOrEqualTo(),1).rejectWith(Predicates2.<Integer>greaterThanOrEqualTo(),4).toBag(),this.classUnderTest().rejectWith(Predicates2.<Integer>lessThanOrEqualTo(),1).rejectWith(Predicates2.<Integer>greaterThanOrEqualTo(),4).toBag());
}
