@Test public void flattenReflective(){
  MutableList<MutableList<Boolean>> list=Lists.fixedSize.<MutableList<Boolean>>of(Lists.fixedSize.of(true,false),Lists.fixedSize.of(true,null));
  MutableList<Boolean> newList=RandomAccessListIterate.flatCollect(list,RichIterable::toList);
  Verify.assertListsEqual(FastList.newListWith(true,false,true,null),newList);
  MutableSet<Boolean> newSet=RandomAccessListIterate.flatCollect(list,RichIterable::toSet,UnifiedSet.<Boolean>newSet());
  Verify.assertSetsEqual(UnifiedSet.newSetWith(true,false,null),newSet);
}
