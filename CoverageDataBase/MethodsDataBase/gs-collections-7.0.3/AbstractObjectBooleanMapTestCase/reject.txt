@Test public void reject(){
  Assert.assertEquals(BooleanHashBag.newBagWith(false),this.classUnderTest().reject(BooleanPredicates.isTrue()).toBag());
  Assert.assertEquals(BooleanHashBag.newBagWith(true,true),this.classUnderTest().reject(BooleanPredicates.isFalse()).toBag());
  Assert.assertEquals(new BooleanHashBag(),this.classUnderTest().reject(BooleanPredicates.or(BooleanPredicates.isTrue(),BooleanPredicates.isFalse())).toBag());
  Assert.assertEquals(BooleanHashBag.newBagWith(true,true,false),this.classUnderTest().reject(BooleanPredicates.and(BooleanPredicates.isTrue(),BooleanPredicates.isFalse())).toBag());
  Assert.assertEquals(this.newWithKeysValues("1",true,"2",false),this.classUnderTest().reject((object,value) -> (Integer.parseInt(object) & 1) == 0 && value));
  Assert.assertEquals(this.newWithKeysValues("0",true,"1",true),this.classUnderTest().reject((object,value) -> (Integer.parseInt(object) & 1) == 0 && !value));
  Assert.assertEquals(this.newWithKeysValues("0",true,"1",true,"2",false),this.classUnderTest().reject((object,value) -> (Integer.parseInt(object) & 1) != 0 && !value));
}
