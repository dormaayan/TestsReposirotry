@Test public void appendString(){
  Appendable appendable=new StringBuilder();
  this.getEmptyMap().appendString(appendable);
  Assert.assertEquals("",appendable.toString());
  Appendable appendable0=new StringBuilder();
  this.newWithKeysValues(0,true).appendString(appendable0);
  Assert.assertEquals("true",appendable0.toString());
  Appendable appendable1=new StringBuilder();
  this.newWithKeysValues(1,false).appendString(appendable1);
  Assert.assertEquals("false",appendable1.toString());
  Appendable appendable2=new StringBuilder();
  this.newWithKeysValues(null,false).appendString(appendable2);
  Assert.assertEquals("false",appendable2.toString());
  Appendable appendable3=new StringBuilder();
  ObjectBooleanMap<Integer> map1=this.newWithKeysValues(0,true,1,false);
  map1.appendString(appendable3);
  Assert.assertTrue(appendable3.toString(),"true, false".equals(appendable3.toString()) || "false, true".equals(appendable3.toString()));
  Appendable appendable4=new StringBuilder();
  map1.appendString(appendable4,"/");
  Assert.assertTrue(appendable4.toString(),"true/false".equals(appendable4.toString()) || "false/true".equals(appendable4.toString()));
  Appendable appendable5=new StringBuilder();
  map1.appendString(appendable5,"[","/","]");
  Assert.assertTrue(appendable5.toString(),"[true/false]".equals(appendable5.toString()) || "[false/true]".equals(appendable5.toString()));
}
