@Test default void OrderedIterable_forEach_from_to(){
  SortedIterable<Integer> integers=this.newWith(9,8,7,6,5,4,3,2,1,0);
  MutableList<Integer> result=Lists.mutable.empty();
  integers.forEach(5,7,result::add);
  assertEquals(Lists.immutable.with(4,3,2),result);
  MutableList<Integer> result2=Lists.mutable.empty();
  integers.forEach(5,5,result2::add);
  assertEquals(Lists.immutable.with(4),result2);
  MutableList<Integer> result3=Lists.mutable.empty();
  integers.forEach(0,9,result3::add);
  assertEquals(Lists.immutable.with(9,8,7,6,5,4,3,2,1,0),result3);
  MutableList<Integer> result4=Lists.mutable.empty();
  integers.forEach(0,0,result4::add);
  assertEquals(Lists.immutable.with(9),result4);
  MutableList<Integer> result5=Lists.mutable.empty();
  integers.forEach(9,9,result5::add);
  assertEquals(Lists.immutable.with(0),result5);
  assertThrows(IndexOutOfBoundsException.class,() -> integers.forEach(-1,0,result::add));
  assertThrows(IndexOutOfBoundsException.class,() -> integers.forEach(0,-1,result::add));
  assertThrows(IndexOutOfBoundsException.class,() -> integers.forEach(0,10,result::add));
  assertThrows(IndexOutOfBoundsException.class,() -> integers.forEach(10,0,result::add));
}
