@Test public void zip(){
  String[] array={"1","2","3","4","5","6","7"};
  Object[] nulls=Collections.nCopies(array.length,null).toArray();
  Object[] nullsPlusOne=Collections.nCopies(array.length + 1,null).toArray();
  Object[] nullsMinusOne=Collections.nCopies(array.length - 1,null).toArray();
  MutableList<Pair<String,Object>> pairs=ArrayIterate.zip(array,nulls);
  Assert.assertEquals(FastList.newListWith(array),pairs.collect((Function<Pair<String,?>,String>)Pair::getOne));
  Assert.assertEquals(FastList.newListWith(nulls),pairs.collect((Function<Pair<?,Object>,Object>)Pair::getTwo,Lists.mutable.of()));
  MutableList<Pair<String,Object>> pairsPlusOne=ArrayIterate.zip(array,nullsPlusOne);
  Assert.assertEquals(FastList.newListWith(array),pairsPlusOne.collect((Function<Pair<String,?>,String>)Pair::getOne));
  Assert.assertEquals(FastList.newListWith(nulls),pairsPlusOne.collect((Function<Pair<?,Object>,Object>)Pair::getTwo,Lists.mutable.of()));
  MutableList<Pair<String,Object>> pairsMinusOne=ArrayIterate.zip(array,nullsMinusOne);
  Assert.assertEquals(array.length - 1,pairsMinusOne.size());
  Assert.assertTrue(FastList.newListWith(array).containsAll(pairsMinusOne.collect((Function<Pair<String,?>,String>)Pair::getOne)));
  Assert.assertEquals(ArrayIterate.zip(array,nulls),ArrayIterate.zip(array,nulls,FastList.<Pair<String,Object>>newList()));
}
