@Override @Test public void collectKeysValues(){
  super.collectKeysValues();
  MutableBagMultimap<String,Integer> multimap=this.newMultimap();
  multimap.putAll("1",FastList.newListWith(1,2,3,4,4));
  multimap.putAll("2",FastList.newListWith(2,3,4,5,3,2));
  MutableBagMultimap<Integer,String> collectedMultimap=multimap.collectKeysValues((key,value) -> Tuples.pair(Integer.valueOf(key),value + "Value"));
  MutableBagMultimap<Integer,String> expectedMultimap=HashBagMultimap.newMultimap();
  expectedMultimap.putAll(1,FastList.newListWith("1Value","2Value","3Value","4Value","4Value"));
  expectedMultimap.putAll(2,FastList.newListWith("2Value","3Value","4Value","5Value","3Value","2Value"));
  Assert.assertEquals(expectedMultimap,collectedMultimap);
  MutableBagMultimap<Integer,String> collectedMultimap2=multimap.collectKeysValues((key,value) -> Tuples.pair(1,value + "Value"));
  MutableBagMultimap<Integer,String> expectedMultimap2=HashBagMultimap.newMultimap();
  expectedMultimap2.putAll(1,FastList.newListWith("1Value","2Value","3Value","4Value","4Value"));
  expectedMultimap2.putAll(1,FastList.newListWith("2Value","3Value","4Value","5Value","3Value","2Value"));
  Assert.assertEquals(expectedMultimap2,collectedMultimap2);
}
