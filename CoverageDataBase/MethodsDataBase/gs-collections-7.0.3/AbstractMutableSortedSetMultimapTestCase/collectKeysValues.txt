@Override @Test public void collectKeysValues(){
  MutableSortedSetMultimap<String,Integer> multimap=this.newMultimap(Comparators.<Integer>reverseNaturalOrder());
  multimap.putAll("1",FastList.newListWith(4,3,2,1,1));
  multimap.putAll("2",FastList.newListWith(5,4,3,2,2));
  MutableBagMultimap<Integer,String> collectedMultimap1=multimap.collectKeysValues((key,value) -> Tuples.pair(Integer.valueOf(key),value + "Value"));
  MutableBagMultimap<Integer,String> expectedMultimap1=HashBagMultimap.newMultimap();
  expectedMultimap1.putAll(1,FastList.newListWith("4Value","3Value","2Value","1Value"));
  expectedMultimap1.putAll(2,FastList.newListWith("5Value","4Value","3Value","2Value"));
  Assert.assertEquals(expectedMultimap1,collectedMultimap1);
  MutableBagMultimap<Integer,String> collectedMultimap2=multimap.collectKeysValues((key,value) -> Tuples.pair(1,value + "Value"));
  MutableBagMultimap<Integer,String> expectedMultimap2=HashBagMultimap.newMultimap();
  expectedMultimap2.putAll(1,FastList.newListWith("4Value","3Value","2Value","1Value"));
  expectedMultimap2.putAll(1,FastList.newListWith("5Value","4Value","3Value","2Value"));
  Assert.assertEquals(expectedMultimap2,collectedMultimap2);
}
