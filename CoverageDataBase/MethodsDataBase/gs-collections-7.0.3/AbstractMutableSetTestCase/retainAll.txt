@Override @Test public void retainAll(){
  super.retainAll();
  MutableList<Integer> collisions=MORE_COLLISIONS.clone();
  collisions.add(COLLISION_10);
  int size=MORE_COLLISIONS.size();
  for (int i=0; i < size; i++) {
    MutableList<Integer> list=MORE_COLLISIONS.subList(0,i);
    MutableSet<Integer> set=this.<Integer>newWith().withAll(list);
    Assert.assertFalse(set.retainAll(collisions));
    Assert.assertEquals(list.toSet(),set);
  }
  for (  Integer item : MORE_COLLISIONS) {
    MutableSet<Integer> integers=this.<Integer>newWith().withAll(MORE_COLLISIONS);
    @SuppressWarnings("BoxingBoxedValue") Integer keyCopy=new Integer(item);
    Assert.assertTrue(integers.retainAll(mList(keyCopy)));
    Assert.assertEquals(iSet(keyCopy),integers);
    Assert.assertNotSame(keyCopy,Iterate.getOnly(integers));
  }
  MutableSet<Integer> singleCollisionBucket=this.newWith(COLLISION_1,COLLISION_2);
  singleCollisionBucket.remove(COLLISION_2);
  Assert.assertTrue(singleCollisionBucket.retainAll(FastList.newListWith(COLLISION_2)));
}
