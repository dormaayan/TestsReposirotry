@Test public void groupBy(){
  RichIterable<Integer> list=this.newWith(1,2,3,4,5,6,7);
  Function<Integer,Boolean> isOddFunction=object -> IntegerPredicates.isOdd().accept(object);
  MutableMap<Boolean,RichIterable<Integer>> expected=UnifiedMap.<Boolean,RichIterable<Integer>>newWithKeysValues(Boolean.TRUE,FastList.newListWith(1,3,5,7),Boolean.FALSE,FastList.newListWith(2,4,6));
  Multimap<Boolean,Integer> multimap=list.groupBy(isOddFunction);
  Assert.assertEquals(expected,multimap.toMap());
  Multimap<Boolean,Integer> multimap2=list.groupBy(isOddFunction,FastListMultimap.<Boolean,Integer>newMultimap());
  Assert.assertEquals(expected,multimap2.toMap());
}
