@Override @Test public void groupByEach(){
  RichIterable<Integer> underTest=this.newWith(1,2,3,4,5,6,7);
  Function<Integer,Iterable<Integer>> intervalFunction=new NegativeIntervalFunction();
  MutableMultimap<Integer,Integer> expected=this.<Integer>newWith().groupByEach(intervalFunction);
  for (int i=1; i < 8; i++) {
    expected.putAll(-i,Interval.fromTo(i,7));
  }
  Multimap<Integer,Integer> actual=underTest.groupByEach(intervalFunction);
  Assert.assertEquals(expected,actual);
  Multimap<Integer,Integer> actualWithTarget=underTest.groupByEach(intervalFunction,this.<Integer>newWith().groupByEach(intervalFunction));
  Assert.assertEquals(expected,actualWithTarget);
}
