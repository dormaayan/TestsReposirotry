@Override @Test public void newWithoutAll(){
  ImmutableBooleanCollection immutableBooleanCollection=this.classUnderTest();
  MutableBooleanCollection mutableTrueCollection=this.getTrueCollection(immutableBooleanCollection);
  ImmutableBooleanCollection trueCollection=mutableTrueCollection.toImmutable();
  Assert.assertEquals(this.newMutableCollectionWith(),trueCollection.newWithoutAll(this.newMutableCollectionWith(true,false)));
  Assert.assertEquals(mutableTrueCollection,trueCollection);
  MutableBooleanList list=immutableBooleanCollection.toList();
  list.removeAll(true);
  Assert.assertEquals(list,immutableBooleanCollection.newWithoutAll(this.newMutableCollectionWith(true)));
  Assert.assertEquals(this.newMutableCollectionWith(),immutableBooleanCollection.newWithoutAll(this.newMutableCollectionWith(true,false)));
  ImmutableBooleanCollection collection=this.newWith(true,false,true,false,true);
  Assert.assertEquals(this.newMutableCollectionWith(false,false),collection.newWithoutAll(this.newMutableCollectionWith(true,true)));
  Assert.assertEquals(this.newMutableCollectionWith(),collection.newWithoutAll(this.newMutableCollectionWith(true,false)));
}
