@Test public void aggregateInPlaceBy(){
  Procedure2<AtomicInteger,Integer> countAggregator=(aggregate,value) -> aggregate.incrementAndGet();
  List<Integer> list=Interval.oneTo(2000);
  MutableMap<String,AtomicInteger> aggregation=ParallelIterate.aggregateInPlaceBy(list,EVEN_OR_ODD,AtomicInteger::new,countAggregator);
  Assert.assertEquals(1000,aggregation.get("Even").intValue());
  Assert.assertEquals(1000,aggregation.get("Odd").intValue());
  ParallelIterate.aggregateInPlaceBy(list,EVEN_OR_ODD,AtomicInteger::new,countAggregator,aggregation);
  Assert.assertEquals(2000,aggregation.get("Even").intValue());
  Assert.assertEquals(2000,aggregation.get("Odd").intValue());
}
