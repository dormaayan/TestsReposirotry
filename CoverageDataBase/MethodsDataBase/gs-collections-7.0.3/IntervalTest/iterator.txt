@Test public void iterator(){
  Interval zero=Interval.zero();
  Iterator<Integer> zeroIterator=zero.iterator();
  Assert.assertTrue(zeroIterator.hasNext());
  Assert.assertEquals(Integer.valueOf(0),zeroIterator.next());
  Assert.assertFalse(zeroIterator.hasNext());
  Interval oneToFive=Interval.oneTo(5);
  Iterator<Integer> oneToFiveIterator=oneToFive.iterator();
  for (int i=1; i < 6; i++) {
    Assert.assertTrue(oneToFiveIterator.hasNext());
    Assert.assertEquals(Integer.valueOf(i),oneToFiveIterator.next());
  }
  Verify.assertThrows(NoSuchElementException.class,(Runnable)oneToFiveIterator::next);
  Interval threeToNegativeThree=Interval.fromTo(3,-3);
  Iterator<Integer> threeToNegativeThreeIterator=threeToNegativeThree.iterator();
  for (int i=3; i > -4; i--) {
    Assert.assertTrue(threeToNegativeThreeIterator.hasNext());
    Assert.assertEquals(Integer.valueOf(i),threeToNegativeThreeIterator.next());
  }
  Verify.assertThrows(NoSuchElementException.class,(Runnable)threeToNegativeThreeIterator::next);
  Verify.assertThrows(UnsupportedOperationException.class,() -> Interval.zeroTo(10).iterator().remove());
}
