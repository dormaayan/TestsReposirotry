@Test public void should_fail_validating_view_because_more_than_1_non_pk() throws Exception {
  setExec(aptUtils -> {
    final TypeElement typeElementBase=aptUtils.elementUtils.getTypeElement(TestEntitySensor.class.getCanonicalName());
    final TypeElement typeElementView=aptUtils.elementUtils.getTypeElement(TestViewSensorWithMultipleNonPK.class.getCanonicalName());
    final EntityMetaCodeGen builder=new EntityMetaCodeGen(aptUtils);
    final EntityMetaCodeGen.EntityMetaSignature baseSignature=builder.buildEntityMeta(TABLE,typeElementBase,context,getTypeParsingResults(aptUtils,typeElementBase,context),emptyList());
    final EntityMetaCodeGen.EntityMetaSignature viewSignature=builder.buildEntityMeta(VIEW,typeElementView,context,getTypeParsingResults(aptUtils,typeElementView,context),emptyList());
    beanValidator.validateViewsAgainstBaseTable(aptUtils,Arrays.asList(viewSignature),Arrays.asList(baseSignature));
  }
);
  failTestWithMessage("There should be maximum 1 column in the view info.archinnov.achilles.internals.sample_classes.parser.view.TestViewSensorWithMultipleNonPK primary key that is NOT a primary column of the base class 'info.archinnov.achilles.internals.sample_classes.parser.entity.TestEntitySensor'. We have [{fieldName='type', cqlColumn='type', sourceType=java.lang.String, targetType=java.lang.String}, {fieldName='value', cqlColumn='value', sourceType=java.lang.Double, targetType=java.lang.Double}]",TestEntitySensor.class);
}
