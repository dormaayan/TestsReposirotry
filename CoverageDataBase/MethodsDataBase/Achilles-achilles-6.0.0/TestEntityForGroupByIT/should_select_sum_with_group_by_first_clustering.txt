@Test public void should_select_sum_with_group_by_first_clustering() throws Exception {
  final Long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
  final UUID uuid=new UUID(1L,0L);
  scriptExecutor.executeScriptTemplate("EntityForGroupBy/insert_rows.cql",ImmutableMap.of("id",id,"uuid",uuid));
  final EntityForGroupBy_AchillesMeta.ColumnsForFunctions columns=COLUMNS;
  final List<TypedMap> typedMaps=manager.dsl().select().clust1().function(SystemFunctions.sum(COLUMNS.VAL),"sum_val").fromBaseTable().where().id().Eq(id).uuid().Eq(uuid).groupBy().clust1().orderByClust1Ascending().getTypedMaps();
  assertThat(typedMaps).hasSize(3);
  final TypedMap clustering_1=typedMaps.get(0);
  assertThat(clustering_1.<Integer>getTyped("clust1")).isEqualTo(1);
  assertThat(clustering_1.<Integer>getTyped("sum_val")).isEqualTo(9);
  final TypedMap clustering_2=typedMaps.get(1);
  assertThat(clustering_2.<Integer>getTyped("clust1")).isEqualTo(2);
  assertThat(clustering_2.<Integer>getTyped("sum_val")).isEqualTo(6);
  final TypedMap clustering_3=typedMaps.get(2);
  assertThat(clustering_3.<Integer>getTyped("clust1")).isEqualTo(3);
  assertThat(clustering_3.<Integer>getTyped("sum_val")).isEqualTo(3);
}
