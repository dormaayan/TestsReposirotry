@Test public void should_fail_create_custom_codec_for_counter_if_target_type_not_matched() throws Exception {
  setExec(aptUtils -> {
    final CodecFactory codecFactory=new CodecFactory(aptUtils);
    final TypeElement typeElement=aptUtils.elementUtils.getTypeElement(TestEntityForCodecs.class.getCanonicalName());
    final FieldParsingContext context=getFieldParsingContext(aptUtils,typeElement);
    final VariableElement elm=findFieldInType(typeElement,"counterWithWrongCodec");
    final AnnotationTree tree=AnnotationTree.buildFrom(aptUtils,context.entityContext.globalContext,elm);
    codecFactory.createCodec(ClassName.get(Integer.class),tree,context,Optional.empty());
  }
);
  failTestWithMessage("Codec 'info.archinnov.achilles.internals.sample_classes.codecs.IntToStringCodec' " + "target type 'java.lang.String' should be Long/long because the column is annotated with @Counter");
}
