@Test public void should_delete_by_partition_and_first_clustering_column_only() throws Exception {
  final long id=RandomUtils.nextLong(0,Long.MAX_VALUE);
  scriptExecutor.executeScriptTemplate("MultiClusteringEntity/insertRows.cql",ImmutableMap.of("id",id));
  manager.dsl().delete().allColumns_FromBaseTable().where().id().Eq(id).c1().Eq(3).execute();
  final List<Row> all=session.execute("SELECT c1,c2 FROM achilles_embedded.multi_clustering_entity WHERE id = " + id).all();
  assertThat(all).hasSize(6);
  assertThat(all.get(0).getInt("c1")).isEqualTo(1);
  assertThat(all.get(0).getInt("c2")).isEqualTo(1);
  assertThat(all.get(1).getInt("c1")).isEqualTo(1);
  assertThat(all.get(1).getInt("c2")).isEqualTo(2);
  assertThat(all.get(2).getInt("c1")).isEqualTo(1);
  assertThat(all.get(2).getInt("c2")).isEqualTo(3);
  assertThat(all.get(3).getInt("c1")).isEqualTo(2);
  assertThat(all.get(3).getInt("c2")).isEqualTo(1);
  assertThat(all.get(4).getInt("c1")).isEqualTo(2);
  assertThat(all.get(4).getInt("c2")).isEqualTo(2);
  assertThat(all.get(5).getInt("c1")).isEqualTo(2);
  assertThat(all.get(5).getInt("c2")).isEqualTo(3);
}
