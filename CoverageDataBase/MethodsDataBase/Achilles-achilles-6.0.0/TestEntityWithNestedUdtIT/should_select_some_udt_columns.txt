@Test public void should_select_some_udt_columns() throws Exception {
  final Long id=RandomUtils.nextLong(0,Long.MAX_VALUE);
  final EntityWithNestedUDT entity=new EntityWithNestedUDT();
  final UDTWithNoKeyspace udtWithNoKeySpace=new UDTWithNoKeyspace();
  udtWithNoKeySpace.setId(id);
  udtWithNoKeySpace.setValue("udt_with_no_keyspace");
  final UDTWithNestedUDT udtWithNestedUDT=new UDTWithNestedUDT();
  udtWithNestedUDT.setValue("value");
  udtWithNestedUDT.setNestedUDT(udtWithNoKeySpace);
  udtWithNestedUDT.setUdtList(Arrays.asList(udtWithNoKeySpace));
  udtWithNestedUDT.setTupleWithUDT(new Tuple2<>(1,udtWithNoKeySpace));
  entity.setId(id);
  entity.setUdt(udtWithNoKeySpace);
  entity.setComplexUDT(udtWithNestedUDT);
  manager.crud().insert(entity).execute();
  final TypedMap found=manager.dsl().select().complexUDT().value().complexUDT().nestedUDT().value().udt().value().fromBaseTable().where().id().Eq(id).getTypedMap();
  assertThat(found).isNotNull();
  assertThat(found.<String>getTyped("complexudt.value")).isEqualTo("value");
  assertThat(found.<String>getTyped("complexudt.nestedudt.VALUE")).isEqualTo("udt_with_no_keyspace");
  assertThat(found.<String>getTyped("udt.VALUE")).isEqualTo("udt_with_no_keyspace");
}
