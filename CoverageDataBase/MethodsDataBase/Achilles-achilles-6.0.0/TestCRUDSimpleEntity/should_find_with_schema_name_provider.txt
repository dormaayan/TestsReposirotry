@Test public void should_find_with_schema_name_provider() throws Exception {
  final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
  final Date date=buildDateKey();
  final String tableName="simple_find_with_schema_name";
  scriptExecutor.executeScriptTemplate("SimpleEntity/create_simple_mirror_table.cql",ImmutableMap.of("table",tableName));
  scriptExecutor.executeScriptTemplate("SimpleEntity/insert_single_row.cql",ImmutableMap.of("id",id,"table",tableName));
  final SchemaNameProvider provider=new SchemaNameProvider(){
    @Override public <T>String keyspaceFor(    Class<T> entityClass){
      return DEFAULT_CASSANDRA_EMBEDDED_KEYSPACE_NAME;
    }
    @Override public <T>String tableNameFor(    Class<T> entityClass){
      return tableName;
    }
  }
;
  final SimpleEntity actual=manager.crud().withSchemaNameProvider(provider).findById(id,date).get();
  assertThat(actual).isNotNull();
  assertThat(actual.getValue()).isEqualTo("0 AM");
  assertThat(actual.getConsistencyList()).containsExactly(ConsistencyLevel.QUORUM,ConsistencyLevel.LOCAL_ONE);
  assertThat(actual.getSimpleSet()).containsExactly(1.0,2.0);
  assertThat(actual.getSimpleMap()).containsEntry(10,"ten");
  assertThat(actual.getSimpleMap()).containsEntry(20,"twenty");
}
