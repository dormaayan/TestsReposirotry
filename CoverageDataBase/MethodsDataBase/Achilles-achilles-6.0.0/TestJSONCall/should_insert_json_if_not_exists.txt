@Test public void should_insert_json_if_not_exists() throws Exception {
  final long id=RandomUtils.nextLong(0L,Long.MAX_VALUE);
  String json="{\"id\": " + id + ", \"clust\": 1, \"value\": \"val\", "+ "\"liststring\": [\"one\"], "+ "\"setstring\": [\"two\"], "+ "\"mapstring\": {\"3\": \"three\"}"+ "}";
  AtomicBoolean success=new AtomicBoolean(false);
  final CountDownLatch latch=new CountDownLatch(1);
  manager.crud().insertJSON(json).ifNotExists().withLwtResultListener(new LWTResultListener(){
    @Override public void onSuccess(){
      success.getAndSet(true);
      latch.countDown();
    }
    @Override public void onError(    LWTResult lwtResult){
      latch.countDown();
    }
  }
).execute();
  latch.await();
  assertThat(success.get()).isTrue();
  final Row row=session.execute("SELECT * FROM achilles_embedded.entity_for_json_function_call WHERE id = " + id + "AND clust = 1").one();
  assertThat(row).isNotNull();
  assertThat(row.getString("value")).isEqualTo("val");
  assertThat(row.getList("liststring",String.class)).containsExactly("one");
  assertThat(row.getSet("setstring",String.class)).containsExactly("two");
  assertThat(row.getMap("mapstring",Integer.class,String.class)).hasSize(1).containsEntry(3,"three");
}
