@Test public void should_fail_parsing_wrongascii() throws Exception {
  setExec(aptUtils -> {
    final FieldParser fieldParser=new FieldParser(aptUtils);
    final String className=TestEntityForCodecs.class.getCanonicalName();
    final TypeElement typeElement=aptUtils.elementUtils.getTypeElement(className);
    final EntityParsingContext entityContext=new EntityParsingContext(typeElement,ClassName.get(TestEntityForCodecs.class),strategy,globalParsingContext);
    VariableElement elm=findFieldInType(typeElement,"wrongascii");
    fieldParser.parse(elm,entityContext);
  }
);
  Truth.ASSERT.about(JavaSourcesSubjectFactory.javaSources()).that(Sets.newHashSet(loadClass(TestEntityForCodecs.class))).processedWith(this).failsToCompile().withErrorContaining("Incorrect use @ASCII annotation on field wrongascii of class info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs because its type is not java.lang.String");
}
