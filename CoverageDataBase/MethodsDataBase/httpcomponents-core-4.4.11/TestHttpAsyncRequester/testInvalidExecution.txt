@Test public void testInvalidExecution() throws Exception {
  try {
    this.requester.execute(null,this.responseConsumer,this.conn);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(this.requestProducer,null,this.conn);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(this.requestProducer,this.responseConsumer,(NHttpClientConnection)null);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(this.requestProducer,this.responseConsumer,this.conn,null);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(null,this.responseConsumer,this.connPool);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(this.requestProducer,null,this.connPool);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(this.requestProducer,this.responseConsumer,(ConnPool<HttpHost,PoolEntry<HttpHost,NHttpClientConnection>>)null);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    this.requester.execute(this.requestProducer,this.responseConsumer,this.connPool,null);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
}
