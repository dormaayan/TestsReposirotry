@SuppressWarnings({"rawtypes","unchecked"}) @Test public void testPooledConnectionAutoReleaseOnRequestCancel() throws Exception {
  final HttpHost host=new HttpHost("somehost");
  Mockito.when(this.requestProducer.getTarget()).thenReturn(host);
  final Future<Object> future=this.requester.execute(this.requestProducer,this.responseConsumer,this.connPool,this.exchangeContext,this.callback);
  Assert.assertNotNull(future);
  final ArgumentCaptor<FutureCallback> argCaptor=ArgumentCaptor.forClass(FutureCallback.class);
  Mockito.verify(this.connPool).lease(Matchers.eq(host),Matchers.isNull(),argCaptor.capture());
  final ConnRequestCallback connRequestCallback=(ConnRequestCallback)argCaptor.getValue();
  future.cancel(true);
  final BasicNIOPoolEntry entry=new BasicNIOPoolEntry("id",host,this.conn);
  connRequestCallback.completed(entry);
  Mockito.verify(this.connPool).release(entry,true);
  Mockito.verify(this.conn,Mockito.never()).requestOutput();
}
