@Test public void testHandshakeTimeout() throws Exception {
  final InetSocketAddress address=start();
  final HttpHost target=new HttpHost("localhost",address.getPort(),getScheme().name());
  final CountDownLatch latch=new CountDownLatch(1);
  final FutureCallback<HttpResponse> callback=new FutureCallback<HttpResponse>(){
    @Override public void cancelled(){
      latch.countDown();
    }
    @Override public void failed(    final Exception ex){
      latch.countDown();
    }
    @Override public void completed(    final HttpResponse response){
      Assert.fail();
    }
  }
;
  final HttpRequest request=new BasicHttpRequest("GET","/");
  final HttpContext context=new BasicHttpContext();
  this.client.setTimeout(1000);
  this.client.execute(new BasicAsyncRequestProducer(target,request),new BasicAsyncResponseConsumer(),context,callback);
  final Socket accepted=serverSocket.accept();
  try {
    Assert.assertTrue(latch.await(10,TimeUnit.SECONDS));
  }
  finally {
    accepted.close();
  }
}
