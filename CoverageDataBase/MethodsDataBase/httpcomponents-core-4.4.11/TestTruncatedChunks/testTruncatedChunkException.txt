@Test public void testTruncatedChunkException() throws Exception {
  this.server.registerHandler("*",new BasicAsyncRequestHandler(new SimpleRequestHandler(true)));
  this.server.start();
  this.client.start();
  final ListenerEndpoint endpoint=this.server.getListenerEndpoint();
  endpoint.waitFor();
  final String pattern=RndTestPatternGenerator.generateText();
  final int count=RndTestPatternGenerator.generateCount(1000);
  final HttpHost target=new HttpHost("localhost",((InetSocketAddress)endpoint.getAddress()).getPort());
  final BasicHttpRequest request=new BasicHttpRequest("GET",pattern + "x" + count);
  final Future<HttpResponse> future=this.client.execute(target,request);
  try {
    future.get(RESULT_TIMEOUT_SEC,TimeUnit.SECONDS);
    Assert.fail("ExecutionException should have been thrown");
  }
 catch (  final ExecutionException ex) {
    final Throwable cause=ex.getCause();
    Assert.assertTrue(cause instanceof MalformedChunkCodingException);
  }
}
