@Test public void testHttpPostsHTTP10() throws Exception {
  this.server.registerHandler("*",new BasicAsyncRequestHandler(new SimpleRequestHandler()));
  final HttpHost target=start();
  this.client.setMaxPerRoute(3);
  this.client.setMaxTotal(3);
  final String pattern=RndTestPatternGenerator.generateText();
  final int count=RndTestPatternGenerator.generateCount(1000);
  final String expectedPattern=createExpectedString(pattern,count);
  final Queue<Future<HttpResponse>> queue=new ConcurrentLinkedQueue<Future<HttpResponse>>();
  for (int i=0; i < 30; i++) {
    final BasicHttpEntityEnclosingRequest request=new BasicHttpEntityEnclosingRequest("POST",createRequestUri(pattern,count),HttpVersion.HTTP_1_0);
    final NStringEntity entity=new NStringEntity(expectedPattern,ContentType.DEFAULT_TEXT);
    request.setEntity(entity);
    final Future<HttpResponse> future=this.client.execute(target,request);
    queue.add(future);
  }
  while (!queue.isEmpty()) {
    final Future<HttpResponse> future=queue.remove();
    final HttpResponse response=future.get(RESULT_TIMEOUT_SEC,TimeUnit.SECONDS);
    Assert.assertNotNull(response);
    Assert.assertEquals(expectedPattern,EntityUtils.toString(response.getEntity()));
  }
}
