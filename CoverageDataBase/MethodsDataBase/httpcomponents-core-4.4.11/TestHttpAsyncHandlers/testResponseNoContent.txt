@Test public void testResponseNoContent() throws Exception {
  this.server.registerHandler("*",new BasicAsyncRequestHandler(new HttpRequestHandler(){
    @Override public void handle(    final HttpRequest request,    final HttpResponse response,    final HttpContext context) throws HttpException, IOException {
      response.setStatusCode(HttpStatus.SC_NO_CONTENT);
    }
  }
));
  final HttpHost target=start();
  this.client.setMaxPerRoute(3);
  this.client.setMaxTotal(3);
  final Queue<Future<HttpResponse>> queue=new ConcurrentLinkedQueue<Future<HttpResponse>>();
  for (int i=0; i < 30; i++) {
    final BasicHttpRequest request=new BasicHttpRequest("GET","/");
    final Future<HttpResponse> future=this.client.execute(target,request);
    queue.add(future);
  }
  while (!queue.isEmpty()) {
    final Future<HttpResponse> future=queue.remove();
    final HttpResponse response=future.get(RESULT_TIMEOUT_SEC,TimeUnit.SECONDS);
    Assert.assertNotNull(response);
    Assert.assertNull(response.getEntity());
  }
}
