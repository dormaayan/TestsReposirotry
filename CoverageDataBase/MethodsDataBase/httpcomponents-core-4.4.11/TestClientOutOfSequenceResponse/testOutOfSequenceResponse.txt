@Test public void testOutOfSequenceResponse() throws Exception {
  client.setMaxPerRoute(1);
  client.setMaxTotal(1);
  client.start();
  final HttpHost target=new HttpHost("localhost",server.getLocalPort());
  final HttpRequest get1=new BasicHttpRequest("GET","/",HttpVersion.HTTP_1_1);
  final Future<HttpResponse> future1=client.execute(target,get1);
  final HttpRequest get2=new BasicHttpRequest("GET","/",HttpVersion.HTTP_1_1);
  final Future<HttpResponse> future2=client.execute(target,get2);
  final Socket socket=server.accept();
  Thread.sleep(100);
  for (int i=0; i < 3; ++i) {
    socket.getOutputStream().write(("HTTP/1.1 200 OK\r\n" + "Content-Length: 0\r\n" + "Connection: keep-alive\r\n\r\n").getBytes(Consts.UTF_8));
    socket.getOutputStream().flush();
  }
  final HttpResponse response1=future1.get();
  Assert.assertEquals(200,response1.getStatusLine().getStatusCode());
  try {
    final HttpResponse response2=future2.get();
    Assert.assertEquals(200,response2.getStatusLine().getStatusCode());
  }
 catch (  final ExecutionException ex) {
    Assert.assertTrue(ex.getCause() instanceof HttpException);
  }
}
