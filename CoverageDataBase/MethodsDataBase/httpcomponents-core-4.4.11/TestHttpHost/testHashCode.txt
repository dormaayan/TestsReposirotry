@Test public void testHashCode() throws Exception {
  final HttpHost host1=new HttpHost("somehost",8080,"http");
  final HttpHost host2=new HttpHost("somehost",80,"http");
  final HttpHost host3=new HttpHost("someotherhost",8080,"http");
  final HttpHost host4=new HttpHost("somehost",80,"http");
  final HttpHost host5=new HttpHost("SomeHost",80,"http");
  final HttpHost host6=new HttpHost("SomeHost",80,"myhttp");
  final HttpHost host7=new HttpHost(InetAddress.getByAddress("127.0.0.1",new byte[]{127,0,0,1}),80,"http");
  final HttpHost host8=new HttpHost("127.0.0.1",80,"http");
  final HttpHost host9=new HttpHost(InetAddress.getByAddress("somehost",new byte[]{127,0,0,1}),80,"http");
  final HttpHost host10=new HttpHost(InetAddress.getByAddress(new byte[]{127,0,0,1}),"somehost",80,"http");
  final HttpHost host11=new HttpHost(InetAddress.getByAddress("someotherhost",new byte[]{127,0,0,1}),80,"http");
  Assert.assertTrue(host1.hashCode() == host1.hashCode());
  Assert.assertTrue(host1.hashCode() != host2.hashCode());
  Assert.assertTrue(host1.hashCode() != host3.hashCode());
  Assert.assertTrue(host2.hashCode() == host4.hashCode());
  Assert.assertTrue(host2.hashCode() == host5.hashCode());
  Assert.assertTrue(host5.hashCode() != host6.hashCode());
  Assert.assertTrue(host7.hashCode() != host8.hashCode());
  Assert.assertTrue(host8.hashCode() != host9.hashCode());
  Assert.assertTrue(host9.hashCode() == host10.hashCode());
  Assert.assertTrue(host10.hashCode() != host11.hashCode());
  Assert.assertTrue(host9.hashCode() != host11.hashCode());
}
