@Test public void testEquals() throws Exception {
  final HttpHost host1=new HttpHost("somehost",8080,"http");
  final HttpHost host2=new HttpHost("somehost",80,"http");
  final HttpHost host3=new HttpHost("someotherhost",8080,"http");
  final HttpHost host4=new HttpHost("somehost",80,"http");
  final HttpHost host5=new HttpHost("SomeHost",80,"http");
  final HttpHost host6=new HttpHost("SomeHost",80,"myhttp");
  final HttpHost host7=new HttpHost(InetAddress.getByAddress("127.0.0.1",new byte[]{127,0,0,1}),80,"http");
  final HttpHost host8=new HttpHost("127.0.0.1",80,"http");
  final HttpHost host9=new HttpHost(InetAddress.getByAddress("somehost",new byte[]{127,0,0,1}),80,"http");
  final HttpHost host10=new HttpHost(InetAddress.getByAddress(new byte[]{127,0,0,1}),"somehost",80,"http");
  final HttpHost host11=new HttpHost(InetAddress.getByAddress("someotherhost",new byte[]{127,0,0,1}),80,"http");
  Assert.assertTrue(host1.equals(host1));
  Assert.assertFalse(host1.equals(host2));
  Assert.assertFalse(host1.equals(host3));
  Assert.assertTrue(host2.equals(host4));
  Assert.assertTrue(host2.equals(host5));
  Assert.assertFalse(host5.equals(host6));
  Assert.assertFalse(host7.equals(host8));
  Assert.assertTrue(!host7.equals(host9));
  Assert.assertFalse(host1.equals(null));
  Assert.assertFalse(host1.equals("http://somehost"));
  Assert.assertFalse(host9.equals("http://somehost"));
  Assert.assertFalse(host8.equals(host9));
  Assert.assertTrue(host9.equals(host10));
  Assert.assertFalse(host9.equals(host11));
}
