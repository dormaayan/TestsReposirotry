@Test public void testBasicDecoding() throws Exception {
  final ReadableByteChannel channel=new ReadableByteChannelMock(new String[]{"stuff;","more stuff"},Consts.ASCII);
  final SessionInputBuffer inbuf=new SessionInputBufferImpl(1024,256,Consts.ASCII);
  final HttpTransportMetricsImpl metrics=new HttpTransportMetricsImpl();
  final IdentityDecoder decoder=new IdentityDecoder(channel,inbuf,metrics);
  final ByteBuffer dst=ByteBuffer.allocate(1024);
  int bytesRead=decoder.read(dst);
  Assert.assertEquals(6,bytesRead);
  Assert.assertEquals("stuff;",CodecTestUtils.convert(dst));
  Assert.assertFalse(decoder.isCompleted());
  Assert.assertEquals(6,metrics.getBytesTransferred());
  dst.clear();
  bytesRead=decoder.read(dst);
  Assert.assertEquals(10,bytesRead);
  Assert.assertEquals("more stuff",CodecTestUtils.convert(dst));
  Assert.assertFalse(decoder.isCompleted());
  Assert.assertEquals(16,metrics.getBytesTransferred());
  dst.clear();
  bytesRead=decoder.read(dst);
  Assert.assertEquals(-1,bytesRead);
  Assert.assertTrue(decoder.isCompleted());
  Assert.assertEquals(16,metrics.getBytesTransferred());
  dst.clear();
  bytesRead=decoder.read(dst);
  Assert.assertEquals(-1,bytesRead);
  Assert.assertTrue(decoder.isCompleted());
  Assert.assertEquals(16,metrics.getBytesTransferred());
  Assert.assertEquals("[identity; completed: true]",decoder.toString());
}
