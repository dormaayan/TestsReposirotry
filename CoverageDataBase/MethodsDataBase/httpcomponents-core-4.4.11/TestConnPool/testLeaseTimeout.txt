@Test public void testLeaseTimeout() throws Exception {
  final LocalConnFactory connFactory=Mockito.mock(LocalConnFactory.class);
  final HttpConnection conn1=Mockito.mock(HttpConnection.class);
  Mockito.when(conn1.isOpen()).thenReturn(true);
  Mockito.when(connFactory.create(Matchers.eq("somehost"))).thenReturn(conn1);
  final LocalConnPool pool=new LocalConnPool(connFactory,1,1);
  final Future<LocalPoolEntry> future1=pool.lease("somehost",null);
  final GetPoolEntryThread t1=new GetPoolEntryThread(future1);
  t1.start();
  t1.join(GRACE_PERIOD);
  Assert.assertTrue(future1.isDone());
  final LocalPoolEntry entry1=t1.getEntry();
  Assert.assertNotNull(entry1);
  final Future<LocalPoolEntry> future2=pool.lease("somehost",null);
  final GetPoolEntryThread t2=new GetPoolEntryThread(future2,50,TimeUnit.MICROSECONDS);
  t2.start();
  t2.join(GRACE_PERIOD);
  Assert.assertTrue(t2.getException() instanceof TimeoutException);
  Assert.assertFalse(future2.isDone());
  Assert.assertFalse(future2.isCancelled());
}
