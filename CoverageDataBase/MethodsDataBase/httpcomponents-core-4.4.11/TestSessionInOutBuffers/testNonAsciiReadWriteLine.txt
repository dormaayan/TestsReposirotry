@Test public void testNonAsciiReadWriteLine() throws Exception {
  final String s1=constructString(SWISS_GERMAN_HELLO);
  final SessionOutputBufferMock outbuffer=new SessionOutputBufferMock(Consts.ISO_8859_1);
  final CharArrayBuffer chbuffer=new CharArrayBuffer(16);
  for (int i=0; i < 5; i++) {
    chbuffer.clear();
    chbuffer.append(s1);
    outbuffer.writeLine(chbuffer);
  }
  for (int i=0; i < 5; i++) {
    outbuffer.writeLine(s1);
  }
  chbuffer.clear();
  outbuffer.writeLine(chbuffer);
  outbuffer.flush();
  final long bytesWritten=outbuffer.getMetrics().getBytesTransferred();
  final long expected=((s1.toString().getBytes(Consts.ISO_8859_1).length + 2)) * 10 + 2;
  Assert.assertEquals(expected,bytesWritten);
  final SessionInputBufferMock inBuffer=new SessionInputBufferMock(outbuffer.getData(),Consts.ISO_8859_1);
  final CharArrayBuffer buf=new CharArrayBuffer(64);
  for (int i=0; i < 10; i++) {
    buf.clear();
    final int readLen=inBuffer.readLine(buf);
    Assert.assertEquals(readLen,SWISS_GERMAN_HELLO.length);
    Assert.assertEquals(s1,buf.toString());
  }
  buf.clear();
  Assert.assertEquals("",inBuffer.readLine());
  Assert.assertNull(inBuffer.readLine());
  Assert.assertNull(inBuffer.readLine());
  final long bytesRead=inBuffer.getMetrics().getBytesTransferred();
  Assert.assertEquals(expected,bytesRead);
}
