@Test public void testConnectUnknownHost() throws Exception {
  final SessionRequest sessionRequest=Mockito.mock(SessionRequest.class);
  Mockito.when(sessionRequest.getAttachment()).thenReturn("somehost");
  Mockito.when(sessionRequest.getException()).thenReturn(new IOException());
  final ConnectingIOReactor ioReactor=Mockito.mock(ConnectingIOReactor.class);
  final SocketAddressResolver<String> addressResolver=Mockito.mock(SocketAddressResolver.class);
  Mockito.when(addressResolver.resolveRemoteAddress("somehost")).thenThrow(new UnknownHostException());
  final LocalSessionPool pool=new LocalSessionPool(ioReactor,addressResolver,2,10);
  final Future<LocalPoolEntry> future=pool.lease("somehost",null);
  Assert.assertTrue(future.isDone());
  Assert.assertFalse(future.isCancelled());
  try {
    future.get();
    Assert.fail("ExecutionException should have been thrown");
  }
 catch (  final ExecutionException ex) {
    Assert.assertTrue(ex.getCause() instanceof UnknownHostException);
  }
}
