@Test public void testBasicExecutionHTTP10() throws Exception {
  final HttpProcessor httprocessor=Mockito.mock(HttpProcessor.class);
  final ConnectionReuseStrategy connReuseStrategy=Mockito.mock(ConnectionReuseStrategy.class);
  final HttpResponseFactory responseFactory=Mockito.mock(HttpResponseFactory.class);
  final HttpRequestHandlerMapper handlerResolver=Mockito.mock(HttpRequestHandlerMapper.class);
  final HttpService httpservice=new HttpService(httprocessor,connReuseStrategy,responseFactory,handlerResolver);
  final HttpCoreContext context=HttpCoreContext.create();
  final HttpServerConnection conn=Mockito.mock(HttpServerConnection.class);
  final HttpRequest request=new BasicHttpRequest("GET","/",HttpVersion.HTTP_1_0);
  Mockito.when(conn.receiveRequestHeader()).thenReturn(request);
  final HttpResponse response=new BasicHttpResponse(HttpVersion.HTTP_1_0,200,"OK");
  Mockito.when(responseFactory.newHttpResponse(HttpVersion.HTTP_1_1,200,context)).thenReturn(response);
  Mockito.when(connReuseStrategy.keepAlive(response,context)).thenReturn(Boolean.FALSE);
  httpservice.handleRequest(conn,context);
  Mockito.verify(responseFactory).newHttpResponse(HttpVersion.HTTP_1_1,200,context);
}
