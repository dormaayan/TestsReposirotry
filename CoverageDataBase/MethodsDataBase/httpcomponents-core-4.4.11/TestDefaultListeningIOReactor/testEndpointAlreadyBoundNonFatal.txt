@Test public void testEndpointAlreadyBoundNonFatal() throws Exception {
  final IOEventDispatch eventDispatch=createIOEventDispatch();
  final IOReactorConfig config=IOReactorConfig.custom().setIoThreadCount(1).build();
  final DefaultListeningIOReactor ioReactor=new DefaultListeningIOReactor(config);
  ioReactor.setExceptionHandler(new IOReactorExceptionHandler(){
    @Override public boolean handle(    final IOException ex){
      return (ex instanceof BindException);
    }
    @Override public boolean handle(    final RuntimeException ex){
      return false;
    }
  }
);
  final Thread t=new Thread(new Runnable(){
    @Override public void run(){
      try {
        ioReactor.execute(eventDispatch);
      }
 catch (      final IOException ex) {
      }
    }
  }
);
  t.start();
  final ListenerEndpoint endpoint1=ioReactor.listen(new InetSocketAddress(9999));
  endpoint1.waitFor();
  final ListenerEndpoint endpoint2=ioReactor.listen(new InetSocketAddress(9999));
  endpoint2.waitFor();
  Assert.assertNotNull(endpoint2.getException());
  Thread.sleep(500);
  Assert.assertEquals(IOReactorStatus.ACTIVE,ioReactor.getStatus());
  ioReactor.shutdown(1000);
  t.join(1000);
  Assert.assertEquals(IOReactorStatus.SHUT_DOWN,ioReactor.getStatus());
}
