@Test public void testInvalidExecution() throws Exception {
  try {
    new BasicAsyncClientExchangeHandler<Object>(null,this.responseConsumer,null,this.context,this.conn,this.httpProcessor,this.reuseStrategy);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    new BasicAsyncClientExchangeHandler<Object>(this.requestProducer,null,null,this.context,this.conn,this.httpProcessor,this.reuseStrategy);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    new BasicAsyncClientExchangeHandler<Object>(this.requestProducer,this.responseConsumer,null,null,this.conn,this.httpProcessor,this.reuseStrategy);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    new BasicAsyncClientExchangeHandler<Object>(this.requestProducer,this.responseConsumer,null,this.context,null,this.httpProcessor,this.reuseStrategy);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    new BasicAsyncClientExchangeHandler<Object>(this.requestProducer,this.responseConsumer,null,this.context,this.conn,null,this.reuseStrategy);
    Assert.fail("IllegalArgumentException expected");
  }
 catch (  final IllegalArgumentException ex) {
  }
}
