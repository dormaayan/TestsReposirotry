@Test public void testResponseContinue() throws Exception {
  final State state=new HttpAsyncRequestExecutor.State();
  state.setRequestState(MessageState.ACK_EXPECTED);
  state.setTimeout(1000);
  final BasicHttpEntityEnclosingRequest request=new BasicHttpEntityEnclosingRequest("POST","/");
  request.setEntity(new NStringEntity("stuff"));
  state.setRequest(request);
  this.connContext.setAttribute(HttpAsyncRequestExecutor.HTTP_EXCHANGE_STATE,state);
  this.connContext.setAttribute(HttpAsyncRequestExecutor.HTTP_HANDLER,this.exchangeHandler);
  final BasicHttpResponse response=new BasicHttpResponse(HttpVersion.HTTP_1_1,100,"Continue");
  Mockito.when(this.conn.getHttpResponse()).thenReturn(response);
  this.protocolHandler.responseReceived(this.conn);
  Assert.assertNull(state.getResponse());
  Assert.assertEquals(MessageState.BODY_STREAM,state.getRequestState());
  Assert.assertEquals(MessageState.READY,state.getResponseState());
  Mockito.verify(this.conn).setSocketTimeout(1000);
  Mockito.verify(this.conn).requestOutput();
}
