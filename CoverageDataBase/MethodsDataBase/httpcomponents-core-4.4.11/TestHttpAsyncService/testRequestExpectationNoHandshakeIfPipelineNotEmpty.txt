@Test public void testRequestExpectationNoHandshakeIfPipelineNotEmpty() throws Exception {
  final State state=new State();
  state.setRequestState(MessageState.READY);
  state.setResponseState(MessageState.READY);
  final Queue<PipelineEntry> pipeline=state.getPipeline();
  final HttpContext exchangeContext=new BasicHttpContext();
  final HttpRequest pipelinedRequest=new BasicHttpRequest("GET","/",HttpVersion.HTTP_1_1);
  final PipelineEntry entry=new PipelineEntry(pipelinedRequest,pipelinedRequest,null,requestHandler,exchangeContext);
  pipeline.add(entry);
  this.connContext.setAttribute(HttpAsyncService.HTTP_EXCHANGE_STATE,state);
  final HttpEntityEnclosingRequest request=new BasicHttpEntityEnclosingRequest("POST","/",HttpVersion.HTTP_1_1);
  request.addHeader(HTTP.EXPECT_DIRECTIVE,HTTP.EXPECT_CONTINUE);
  Mockito.when(this.conn.getHttpRequest()).thenReturn(request);
  Mockito.when(this.requestHandler.processRequest(Matchers.eq(request),Matchers.any(HttpContext.class))).thenReturn(this.requestConsumer);
  this.protocolHandler.requestReceived(this.conn);
  Mockito.verify(this.requestConsumer).requestReceived(request);
  Assert.assertEquals(MessageState.BODY_STREAM,state.getRequestState());
  Assert.assertEquals(MessageState.READY,state.getResponseState());
}
