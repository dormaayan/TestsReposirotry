@Test public void testHttpExceptionHandlingResponseSubmitted() throws Exception {
  final State state=new State();
  state.setRequestState(MessageState.READY);
  state.setResponseState(MessageState.READY);
  final HttpContext exchangeContext=new BasicHttpContext();
  final HttpRequest request=new BasicHttpRequest("GET","/",HttpVersion.HTTP_1_1);
  final Incoming incoming=new Incoming(request,this.requestHandler,this.requestConsumer,exchangeContext);
  state.setIncoming(incoming);
  final HttpResponse response=new BasicHttpResponse(HttpVersion.HTTP_1_1,200,"OK");
  final Outgoing outgoing=new Outgoing(request,response,this.responseProducer,exchangeContext);
  state.setOutgoing(outgoing);
  this.connContext.setAttribute(HttpAsyncService.HTTP_EXCHANGE_STATE,state);
  Mockito.when(this.conn.isResponseSubmitted()).thenReturn(Boolean.TRUE);
  final HttpException httpex=new HttpException();
  this.protocolHandler.exception(this.conn,httpex);
  Assert.assertEquals(MessageState.READY,state.getRequestState());
  Assert.assertEquals(MessageState.READY,state.getResponseState());
  Mockito.verify(this.conn).shutdown();
  Mockito.verify(this.requestConsumer).failed(httpex);
  Mockito.verify(this.requestConsumer).close();
  Mockito.verify(this.responseProducer).failed(httpex);
  Mockito.verify(this.responseProducer).close();
}
