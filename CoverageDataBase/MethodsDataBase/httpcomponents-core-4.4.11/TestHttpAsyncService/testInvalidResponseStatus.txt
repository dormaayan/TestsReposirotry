@Test(expected=HttpException.class) public void testInvalidResponseStatus() throws Exception {
  final State state=new State();
  final HttpContext exchangeContext=new BasicHttpContext();
  final HttpEntityEnclosingRequest request=new BasicHttpEntityEnclosingRequest("POST","/",HttpVersion.HTTP_1_1);
  final Incoming incoming=new Incoming(request,this.requestHandler,this.requestConsumer,exchangeContext);
  state.setIncoming(incoming);
  state.setRequestState(MessageState.COMPLETED);
  state.setResponseState(MessageState.INIT);
  final HttpResponse response=new BasicHttpResponse(HttpVersion.HTTP_1_1,112,"Something stupid");
  final Outgoing outgoing=new Outgoing(request,response,this.responseProducer,exchangeContext);
  state.setOutgoing(outgoing);
  this.connContext.setAttribute(HttpAsyncService.HTTP_EXCHANGE_STATE,state);
  Mockito.when(this.responseProducer.generateResponse()).thenReturn(response);
  Mockito.when(this.conn.isResponseSubmitted()).thenReturn(Boolean.FALSE);
  this.protocolHandler.responseReady(this.conn);
}
