@Test public void testTimeoutClosingConnection() throws Exception {
  final State state=new State();
  final HttpContext exchangeContext=new BasicHttpContext();
  final HttpRequest request=new BasicHttpRequest("GET","/",HttpVersion.HTTP_1_1);
  final Incoming incoming=new Incoming(request,this.requestHandler,this.requestConsumer,exchangeContext);
  state.setIncoming(incoming);
  final HttpResponse response=new BasicHttpResponse(HttpVersion.HTTP_1_1,200,"OK");
  final Outgoing outgoing=new Outgoing(request,response,this.responseProducer,exchangeContext);
  state.setOutgoing(outgoing);
  this.connContext.setAttribute(HttpAsyncService.HTTP_EXCHANGE_STATE,state);
  Mockito.when(this.conn.getStatus()).thenReturn(NHttpConnection.CLOSING);
  this.protocolHandler.timeout(this.conn);
  Mockito.verify(this.conn).shutdown();
  Mockito.verify(this.requestConsumer).failed(Matchers.any(SocketTimeoutException.class));
  Mockito.verify(this.requestConsumer).close();
  Mockito.verify(this.responseProducer).failed(Matchers.any(SocketTimeoutException.class));
  Mockito.verify(this.responseProducer).close();
}
