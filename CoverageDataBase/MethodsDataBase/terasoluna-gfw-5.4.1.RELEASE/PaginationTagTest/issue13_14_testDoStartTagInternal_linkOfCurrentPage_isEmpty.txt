@Test public void issue13_14_testDoStartTagInternal_linkOfCurrentPage_isEmpty() throws Exception {
  Page<String> page=mock(Page.class);
  when(page.getNumber()).thenReturn(0);
  when(page.getSize()).thenReturn(10);
  when(page.getTotalPages()).thenReturn(100);
  when(page.getTotalElements()).thenReturn(1000L);
  tag.setPage(page);
  tag.setMaxDisplayCount(3);
  tag.setPathTmpl("/{page}/{size}");
  tag.setQueryTmpl(null);
  tag.setCriteriaQuery("a=b");
  tag.setEnableLinkOfCurrentPage("");
  int ret=tag.doStartTagInternal();
  assertThat(ret,is(TagSupport.EVAL_BODY_INCLUDE));
  StringBuilder expected=new StringBuilder();
  expected.append("<ul>");
  expected.append("<li class=\"disabled\"><a href=\"javascript:void(0)\">&lt;&lt;</a></li>");
  expected.append("<li class=\"disabled\"><a href=\"javascript:void(0)\">&lt;</a></li>");
  expected.append("<li class=\"active\"><a href=\"javascript:void(0)\">1</a></li>");
  expected.append("<li><a href=\"/1/10?a=b\">2</a></li>");
  expected.append("<li><a href=\"/2/10?a=b\">3</a></li>");
  expected.append("<li><a href=\"/1/10?a=b\">&gt;</a></li>");
  expected.append("<li><a href=\"/99/10?a=b\">&gt;&gt;</a></li>");
  expected.append("</ul>");
  assertThat(getOutput(),is(expected.toString()));
}
