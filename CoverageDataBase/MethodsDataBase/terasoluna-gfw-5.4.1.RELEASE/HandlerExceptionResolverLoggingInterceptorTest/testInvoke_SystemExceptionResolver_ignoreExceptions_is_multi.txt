@Test public void testInvoke_SystemExceptionResolver_ignoreExceptions_is_multi() throws Throwable {
  FileNotFoundException occurException1=new FileNotFoundException("error.");
  DuplicateKeyException occurException2=new DuplicateKeyException("error.");
  SystemExceptionResolver resolver=new SystemExceptionResolver();
  when(mockMethodInvocation.proceed()).thenReturn("viewname");
  when(mockMethodInvocation.getThis()).thenReturn(resolver);
  when(mockMethodInvocation.getArguments()).thenReturn(new Object[]{null,null,null,occurException1},new Object[]{null,null,null,occurException2});
  Set<Class<? extends Exception>> ignoreExceptions=new HashSet<Class<? extends Exception>>();
  ignoreExceptions.add(DataAccessException.class);
  ignoreExceptions.add(IOException.class);
  testTarget.setIgnoreExceptions(ignoreExceptions);
  testTarget.invoke(mockMethodInvocation);
  testTarget.invoke(mockMethodInvocation);
  verify(mockExceptionLogger,times(0)).log((Exception)any());
  verify(mockExceptionLogger,times(0)).info((Exception)any());
  verify(mockExceptionLogger,times(0)).warn((Exception)any());
  verify(mockExceptionLogger,times(0)).error((Exception)any());
}
