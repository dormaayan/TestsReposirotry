@Test public void unrelatedPinnedIntermediateCertificateInChain() throws Exception {
  HeldCertificate rootCa=new HeldCertificate.Builder().serialNumber(1L).certificateAuthority(1).commonName("root").build();
  HeldCertificate compromisedRootCa=new HeldCertificate.Builder().serialNumber(2L).certificateAuthority(1).commonName("compromised_root").build();
  HeldCertificate goodIntermediateCa=new HeldCertificate.Builder().signedBy(rootCa).certificateAuthority(0).serialNumber(3L).commonName("intermediate_ca").build();
  CertificatePinner certificatePinner=new CertificatePinner.Builder().add(server.getHostName(),CertificatePinner.pin(goodIntermediateCa.certificate())).build();
  HandshakeCertificates handshakeCertificates=new HandshakeCertificates.Builder().addTrustedCertificate(rootCa.certificate()).addTrustedCertificate(compromisedRootCa.certificate()).build();
  OkHttpClient client=defaultClient().newBuilder().sslSocketFactory(handshakeCertificates.sslSocketFactory(),handshakeCertificates.trustManager()).hostnameVerifier(new RecordingHostnameVerifier()).certificatePinner(certificatePinner).build();
  HeldCertificate compromisedIntermediateCa=new HeldCertificate.Builder().signedBy(compromisedRootCa).certificateAuthority(0).serialNumber(4L).commonName("intermediate_ca").build();
  HeldCertificate rogueCertificate=new HeldCertificate.Builder().serialNumber(5L).signedBy(compromisedIntermediateCa).commonName(server.getHostName()).build();
  SSLSocketFactory socketFactory=newServerSocketFactory(rogueCertificate,goodIntermediateCa.certificate(),compromisedIntermediateCa.certificate());
  server.useHttps(socketFactory,false);
  server.enqueue(new MockResponse().setBody("abc").addHeader("Content-Type: text/plain"));
  Request request=new Request.Builder().url(server.url("/")).build();
  Call call=client.newCall(request);
  try {
    call.execute();
    fail();
  }
 catch (  SSLHandshakeException expected) {
    String message=expected.getMessage();
    assertTrue(message,message.contains("Could not validate certificate"));
  }
catch (  SSLPeerUnverifiedException expected) {
    String message=expected.getMessage();
    assertTrue(message,message.startsWith("Certificate pinning failure!"));
  }
}
