/** 
 * Test a previously coalesced connection that's no longer healthy. 
 */
@Test public void staleCoalescedConnection() throws Exception {
  server.enqueue(new MockResponse().setResponseCode(200));
  server.enqueue(new MockResponse().setResponseCode(200));
  final AtomicReference<Connection> connection=new AtomicReference<>();
  client=client.newBuilder().addNetworkInterceptor(new Interceptor(){
    @Override public Response intercept(    Chain chain) throws IOException {
      connection.set(chain.connection());
      return chain.proceed(chain.request());
    }
  }
).build();
  dns.set("san.com",Dns.SYSTEM.lookup(server.getHostName()).subList(0,1));
  assert200Http2Response(execute(url),server.getHostName());
  connection.get().socket().close();
  HttpUrl sanUrl=url.newBuilder().host("san.com").build();
  assert200Http2Response(execute(sanUrl),"san.com");
  assertEquals(1,client.connectionPool().connectionCount());
}
