/** 
 * Test that we can interrogate the response when the cache is being populated. http://code.google.com/p/android/issues/detail?id=7787
 */
@Test public void responseCacheCallbackApis() throws Exception {
  final String body="ABCDE";
  final AtomicInteger cacheCount=new AtomicInteger();
  server.enqueue(new MockResponse().setStatus("HTTP/1.1 200 Fantastic").addHeader("Content-Type: text/plain").addHeader("fgh: ijk").setBody(body));
  setInternalCache(new CacheAdapter(new AbstractResponseCache(){
    @Override public CacheRequest put(    URI uri,    URLConnection connection) throws IOException {
      HttpURLConnection httpURLConnection=(HttpURLConnection)connection;
      assertEquals(server.url("/").url(),uri.toURL());
      assertEquals(200,httpURLConnection.getResponseCode());
      InputStream is=httpURLConnection.getInputStream();
      try {
        is.read();
        fail();
      }
 catch (      UnsupportedOperationException expected) {
      }
      assertEquals("5",connection.getHeaderField("Content-Length"));
      assertEquals("text/plain",connection.getHeaderField("Content-Type"));
      assertEquals("ijk",connection.getHeaderField("fgh"));
      cacheCount.incrementAndGet();
      return null;
    }
  }
));
  URL url=server.url("/").url();
  HttpURLConnection connection=openConnection(url);
  assertEquals(body,readAscii(connection));
  assertEquals(1,cacheCount.get());
}
