/** 
 * Test to ensure we throw a read timeout on responses that are progressing too slowly.  For this case, we take a 2KiB body and throttle it to 1KiB/second.  We set the read timeout to half a second.  If our implementation is acting correctly, it will throw, as a byte doesn't arrive in time.
 */
@Test public void readTimeoutOnSlowConnection() throws Exception {
  String body=TestUtil.repeat('y',2048);
  server.enqueue(new MockResponse().setBody(body).throttleBody(1024,1,SECONDS));
  server.enqueue(new MockResponse().setBody(body));
  client=client.newBuilder().readTimeout(500,MILLISECONDS).build();
  Call call1=client.newCall(new Request.Builder().url(server.url("/")).build());
  Response response1=call1.execute();
  try {
    response1.body().string();
    fail("Should have timed out!");
  }
 catch (  SocketTimeoutException expected) {
    assertEquals("timeout",expected.getMessage());
  }
  Call call2=client.newCall(new Request.Builder().url(server.url("/")).build());
  Response response2=call2.execute();
  assertEquals(body,response2.body().string());
  assertEquals(0,server.takeRequest().getSequenceNumber());
  assertEquals(1,server.takeRequest().getSequenceNumber());
}
