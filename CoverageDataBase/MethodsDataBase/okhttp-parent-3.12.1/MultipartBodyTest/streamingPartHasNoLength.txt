@Test public void streamingPartHasNoLength() throws Exception {
class StreamingBody extends RequestBody {
    private final String body;
    StreamingBody(    String body){
      this.body=body;
    }
    @Override public MediaType contentType(){
      return null;
    }
    @Override public void writeTo(    BufferedSink sink) throws IOException {
      sink.writeUtf8(body);
    }
  }
  String expected="" + "--123\r\n" + "Content-Length: 5\r\n"+ "\r\n"+ "Quick\r\n"+ "--123\r\n"+ "\r\n"+ "Brown\r\n"+ "--123\r\n"+ "Content-Length: 3\r\n"+ "\r\n"+ "Fox\r\n"+ "--123--\r\n";
  MultipartBody body=new MultipartBody.Builder("123").addPart(RequestBody.create(null,"Quick")).addPart(new StreamingBody("Brown")).addPart(RequestBody.create(null,"Fox")).build();
  assertEquals("123",body.boundary());
  assertEquals(MultipartBody.MIXED,body.type());
  assertEquals("multipart/mixed; boundary=123",body.contentType().toString());
  assertEquals(3,body.parts().size());
  assertEquals(-1,body.contentLength());
  Buffer buffer=new Buffer();
  body.writeTo(buffer);
  assertEquals(expected,buffer.readUtf8());
}
