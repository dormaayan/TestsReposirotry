@Test public void createOkResponseForCacheGet() throws Exception {
  final String statusLine="HTTP/1.1 200 Fantastic";
  URI uri=new URI("http://foo/bar");
  Request request=new Request.Builder().url(uri.toURL()).build();
  CacheResponse cacheResponse=new CacheResponse(){
    @Override public Map<String,List<String>> getHeaders() throws IOException {
      Map<String,List<String>> headers=new LinkedHashMap<>();
      headers.put(null,Collections.singletonList(statusLine));
      headers.put("xyzzy",Arrays.asList("bar","baz"));
      return headers;
    }
    @Override public InputStream getBody() throws IOException {
      return new ByteArrayInputStream("HelloWorld".getBytes(StandardCharsets.UTF_8));
    }
  }
;
  Response response=JavaApiConverter.createOkResponseForCacheGet(request,cacheResponse);
  Request cacheRequest=response.request();
  assertEquals(request.url(),cacheRequest.url());
  assertEquals(request.method(),cacheRequest.method());
  assertEquals(0,request.headers().size());
  assertEquals(Protocol.HTTP_1_1,response.protocol());
  assertEquals(200,response.code());
  assertEquals("Fantastic",response.message());
  Headers okResponseHeaders=response.headers();
  assertEquals("baz",okResponseHeaders.get("xyzzy"));
  assertEquals("HelloWorld",response.body().string());
  assertNull(response.handshake());
}
