@Test public void createJavaUrlConnection_responseHeadersOk() throws Exception {
  ResponseBody responseBody=createResponseBody("BodyText");
  Response okResponse=new Response.Builder().request(createArbitraryOkRequest()).protocol(Protocol.HTTP_1_1).code(200).message("Fantastic").addHeader("A","c").addHeader("B","d").addHeader("A","e").addHeader("Content-Length",Long.toString(responseBody.contentLength())).body(responseBody).build();
  HttpURLConnection httpUrlConnection=JavaApiConverter.createJavaUrlConnectionForCachePut(okResponse);
  assertEquals(200,httpUrlConnection.getResponseCode());
  assertEquals("Fantastic",httpUrlConnection.getResponseMessage());
  assertEquals(responseBody.contentLength(),httpUrlConnection.getContentLength());
  assertEquals("HTTP/1.1 200 Fantastic",httpUrlConnection.getHeaderField(null));
  assertEquals("e",httpUrlConnection.getHeaderField("A"));
  assertEquals("e",httpUrlConnection.getHeaderField("a"));
  Map<String,List<String>> responseHeaders=httpUrlConnection.getHeaderFields();
  assertEquals(Arrays.asList("HTTP/1.1 200 Fantastic"),responseHeaders.get(null));
  assertEquals(newSet("c","e"),newSet(responseHeaders.get("A")));
  assertEquals(newSet("c","e"),newSet(responseHeaders.get("a")));
  assertHeadersContainsMapping(responseHeaders,null,"HTTP/1.1 200 Fantastic");
  assertHeadersContainsMapping(responseHeaders,"A","c","e");
  assertHeadersContainsMapping(responseHeaders,"B","d");
  try {
    responseHeaders.put("N",Arrays.asList("o"));
    fail("Modified an unmodifiable view.");
  }
 catch (  UnsupportedOperationException expected) {
  }
  try {
    responseHeaders.get("A").add("f");
    fail("Modified an unmodifiable view.");
  }
 catch (  UnsupportedOperationException expected) {
  }
  assertEquals(null,httpUrlConnection.getHeaderFieldKey(0));
  assertEquals("HTTP/1.1 200 Fantastic",httpUrlConnection.getHeaderField(0));
  int i=1;
  while (!httpUrlConnection.getHeaderFieldKey(i).equals("A")) {
    i++;
  }
  assertResponseHeaderAtIndex(httpUrlConnection,i++,"A","c");
  assertResponseHeaderAtIndex(httpUrlConnection,i++,"B","d");
  assertResponseHeaderAtIndex(httpUrlConnection,i++,"A","e");
  while (httpUrlConnection.getHeaderField(i) != null) {
    assertNotNull(httpUrlConnection.getHeaderFieldKey(i));
    i++;
  }
  assertNull(httpUrlConnection.getHeaderFieldKey(i));
}
