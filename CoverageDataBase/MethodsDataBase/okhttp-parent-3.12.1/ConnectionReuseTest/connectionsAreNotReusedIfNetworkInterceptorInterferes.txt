/** 
 * Regression test for an edge case where closing response body in the HTTP engine doesn't release the corresponding stream allocation. This test keeps those response bodies alive and reads them after the redirect has completed. This forces a connection to not be reused where it would be otherwise. <p>This test leaks a response body by not closing it. https://github.com/square/okhttp/issues/2409
 */
@Test public void connectionsAreNotReusedIfNetworkInterceptorInterferes() throws Exception {
  client=client.newBuilder().addNetworkInterceptor(new Interceptor(){
    @Override public Response intercept(    Chain chain) throws IOException {
      Response response=chain.proceed(chain.request());
      return response.newBuilder().body(ResponseBody.create(null,"unrelated response body!")).build();
    }
  }
).build();
  server.enqueue(new MockResponse().setResponseCode(301).addHeader("Location: /b").setBody("/a has moved!"));
  server.enqueue(new MockResponse().setBody("/b is here"));
  Request request=new Request.Builder().url(server.url("/")).build();
  Call call=client.newCall(request);
  try {
    call.execute();
    fail();
  }
 catch (  IllegalStateException expected) {
    assertTrue(expected.getMessage().startsWith("Closing the body of"));
  }
}
