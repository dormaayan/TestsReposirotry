@Test public void failedDribbledCallEventSequence() throws IOException {
  server.enqueue(new MockResponse().setBody("0123456789").throttleBody(2,100,TimeUnit.MILLISECONDS).setSocketPolicy(SocketPolicy.DISCONNECT_DURING_RESPONSE_BODY));
  client=client.newBuilder().protocols(Collections.singletonList(Protocol.HTTP_1_1)).readTimeout(250,TimeUnit.MILLISECONDS).build();
  Call call=client.newCall(new Request.Builder().url(server.url("/")).build());
  Response response=call.execute();
  try {
    response.body.string();
    fail();
  }
 catch (  IOException expected) {
    assertThat(expected.getMessage(),equalTo("unexpected end of stream"));
  }
  List<String> expectedEvents=Arrays.asList("CallStart","DnsStart","DnsEnd","ConnectStart","ConnectEnd","ConnectionAcquired","RequestHeadersStart","RequestHeadersEnd","ResponseHeadersStart","ResponseHeadersEnd","ResponseBodyStart","ResponseBodyEnd","ConnectionReleased","CallFailed");
  assertEquals(expectedEvents,listener.recordedEventTypes());
  ResponseBodyEnd bodyEnd=listener.removeUpToEvent(ResponseBodyEnd.class);
  assertEquals(5,bodyEnd.bytesRead);
}
