@Test public void headersPostNoLength() throws IOException {
  setLevel(Level.HEADERS);
  server.enqueue(new MockResponse());
  RequestBody body=new RequestBody(){
    @Override public MediaType contentType(){
      return PLAIN;
    }
    @Override public void writeTo(    BufferedSink sink) throws IOException {
      sink.writeUtf8("Hi!");
    }
  }
;
  Response response=client.newCall(request().post(body).build()).execute();
  response.body().close();
  applicationLogs.assertLogEqual("--> POST " + url).assertLogEqual("Content-Type: text/plain; charset=utf-8").assertLogEqual("--> END POST").assertLogMatch("<-- 200 OK " + url + " \\(\\d+ms\\)").assertLogEqual("Content-Length: 0").assertLogEqual("<-- END HTTP").assertNoMoreLogs();
  networkLogs.assertLogEqual("--> POST " + url + " http/1.1").assertLogEqual("Content-Type: text/plain; charset=utf-8").assertLogEqual("Transfer-Encoding: chunked").assertLogEqual("Host: " + host).assertLogEqual("Connection: Keep-Alive").assertLogEqual("Accept-Encoding: gzip").assertLogMatch("User-Agent: okhttp/.+").assertLogEqual("--> END POST").assertLogMatch("<-- 200 OK " + url + " \\(\\d+ms\\)").assertLogEqual("Content-Length: 0").assertLogEqual("<-- END HTTP").assertNoMoreLogs();
}
