@Test public void readerEviction() throws IOException {
  List<Header> headerBlock=headerEntries("custom-foo","custom-header","custom-bar","custom-header","custom-baz","custom-header");
  bytesIn.writeByte(0x3F);
  bytesIn.writeByte(0x4F);
  bytesIn.writeByte(0x40);
  bytesIn.writeByte(0x0a);
  bytesIn.writeUtf8("custom-foo");
  bytesIn.writeByte(0x0d);
  bytesIn.writeUtf8("custom-header");
  bytesIn.writeByte(0x40);
  bytesIn.writeByte(0x0a);
  bytesIn.writeUtf8("custom-bar");
  bytesIn.writeByte(0x0d);
  bytesIn.writeUtf8("custom-header");
  bytesIn.writeByte(0x40);
  bytesIn.writeByte(0x0a);
  bytesIn.writeUtf8("custom-baz");
  bytesIn.writeByte(0x0d);
  bytesIn.writeUtf8("custom-header");
  hpackReader.readHeaders();
  assertEquals(2,hpackReader.headerCount);
  Header entry1=hpackReader.dynamicTable[readerHeaderTableLength() - 1];
  checkEntry(entry1,"custom-bar","custom-header",55);
  Header entry2=hpackReader.dynamicTable[readerHeaderTableLength() - 2];
  checkEntry(entry2,"custom-baz","custom-header",55);
  assertEquals(headerBlock,hpackReader.getAndResetHeaderList());
  bytesIn.writeByte(0x3F);
  bytesIn.writeByte(0x18);
  hpackReader.readHeaders();
  assertEquals(1,hpackReader.headerCount);
}
