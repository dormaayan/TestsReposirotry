@Test public void proxyAuthenticateOnConnect() throws Exception {
  Authenticator.setDefault(new RecordingAuthenticator());
  server.useHttps(handshakeCertificates.sslSocketFactory(),true);
  server.enqueue(new MockResponse().setResponseCode(407).addHeader("Proxy-Authenticate: Basic realm=\"localhost\""));
  server.enqueue(new MockResponse().setSocketPolicy(UPGRADE_TO_SSL_AT_END).clearHeaders());
  server.enqueue(new MockResponse().setBody("A"));
  urlFactory.setClient(urlFactory.client().newBuilder().proxyAuthenticator(new JavaNetAuthenticator()).proxy(server.toProxyAddress()).sslSocketFactory(handshakeCertificates.sslSocketFactory(),handshakeCertificates.trustManager()).hostnameVerifier(new RecordingHostnameVerifier()).build());
  URL url=new URL("https://android.com/foo");
  connection=urlFactory.open(url);
  assertContent("A",connection);
  RecordedRequest connect1=server.takeRequest();
  assertEquals("CONNECT android.com:443 HTTP/1.1",connect1.getRequestLine());
  assertNull(connect1.getHeader("Proxy-Authorization"));
  RecordedRequest connect2=server.takeRequest();
  assertEquals("CONNECT android.com:443 HTTP/1.1",connect2.getRequestLine());
  assertEquals("Basic " + RecordingAuthenticator.BASE_64_CREDENTIALS,connect2.getHeader("Proxy-Authorization"));
  RecordedRequest get=server.takeRequest();
  assertEquals("GET /foo HTTP/1.1",get.getRequestLine());
  assertNull(get.getHeader("Proxy-Authorization"));
}
