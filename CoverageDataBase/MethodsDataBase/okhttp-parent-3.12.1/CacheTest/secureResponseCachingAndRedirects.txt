@Test public void secureResponseCachingAndRedirects() throws IOException {
  server.useHttps(handshakeCertificates.sslSocketFactory(),false);
  server.enqueue(new MockResponse().addHeader("Last-Modified: " + formatDate(-1,TimeUnit.HOURS)).addHeader("Expires: " + formatDate(1,TimeUnit.HOURS)).setResponseCode(HttpURLConnection.HTTP_MOVED_PERM).addHeader("Location: /foo"));
  server.enqueue(new MockResponse().addHeader("Last-Modified: " + formatDate(-1,TimeUnit.HOURS)).addHeader("Expires: " + formatDate(1,TimeUnit.HOURS)).setBody("ABC"));
  server.enqueue(new MockResponse().setBody("DEF"));
  client=client.newBuilder().sslSocketFactory(handshakeCertificates.sslSocketFactory(),handshakeCertificates.trustManager()).hostnameVerifier(NULL_HOSTNAME_VERIFIER).build();
  Response response1=get(server.url("/"));
  assertEquals("ABC",response1.body().string());
  assertNotNull(response1.handshake().cipherSuite());
  Response response2=get(server.url("/"));
  assertEquals("ABC",response2.body().string());
  assertNotNull(response2.handshake().cipherSuite());
  assertEquals(4,cache.requestCount());
  assertEquals(2,cache.hitCount());
  assertEquals(response1.handshake().cipherSuite(),response2.handshake().cipherSuite());
}
