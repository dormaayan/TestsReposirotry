@Test public void redirectToCachedResult() throws Exception {
  server.enqueue(new MockResponse().addHeader("Cache-Control: max-age=60").setBody("ABC"));
  server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_MOVED_PERM).addHeader("Location: /foo"));
  server.enqueue(new MockResponse().setBody("DEF"));
  Request request1=new Request.Builder().url(server.url("/foo")).build();
  Response response1=client.newCall(request1).execute();
  assertEquals("ABC",response1.body().string());
  RecordedRequest recordedRequest1=server.takeRequest();
  assertEquals("GET /foo HTTP/1.1",recordedRequest1.getRequestLine());
  assertEquals(0,recordedRequest1.getSequenceNumber());
  Request request2=new Request.Builder().url(server.url("/bar")).build();
  Response response2=client.newCall(request2).execute();
  assertEquals("ABC",response2.body().string());
  RecordedRequest recordedRequest2=server.takeRequest();
  assertEquals("GET /bar HTTP/1.1",recordedRequest2.getRequestLine());
  assertEquals(1,recordedRequest2.getSequenceNumber());
  Request request3=new Request.Builder().url(server.url("/baz")).build();
  Response response3=client.newCall(request3).execute();
  assertEquals("DEF",response3.body().string());
  RecordedRequest recordedRequest3=server.takeRequest();
  assertEquals("GET /baz HTTP/1.1",recordedRequest3.getRequestLine());
  assertEquals(2,recordedRequest3.getSequenceNumber());
}
