@Test public void asyncResponseCanBeConsumedLater() throws Exception {
  server.enqueue(new MockResponse().setBody("abc"));
  server.enqueue(new MockResponse().setBody("def"));
  Request request=new Request.Builder().url(server.url("/")).header("User-Agent","SyncApiTest").build();
  final BlockingQueue<Response> responseRef=new SynchronousQueue<>();
  client.newCall(request).enqueue(new Callback(){
    @Override public void onFailure(    Call call,    IOException e){
      throw new AssertionError();
    }
    @Override public void onResponse(    Call call,    Response response) throws IOException {
      try {
        responseRef.put(response);
      }
 catch (      InterruptedException e) {
        throw new AssertionError();
      }
    }
  }
);
  Response response=responseRef.take();
  assertEquals(200,response.code());
  assertEquals("abc",response.body().string());
  executeSynchronously("/").assertBody("def");
  assertEquals(0,server.takeRequest().getSequenceNumber());
  assertEquals(1,server.takeRequest().getSequenceNumber());
  response.body().close();
}
