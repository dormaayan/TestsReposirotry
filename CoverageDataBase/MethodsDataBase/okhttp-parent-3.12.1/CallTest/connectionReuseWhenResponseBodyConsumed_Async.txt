@Test public void connectionReuseWhenResponseBodyConsumed_Async() throws Exception {
  server.enqueue(new MockResponse().setBody("abc"));
  server.enqueue(new MockResponse().setBody("def"));
  Request request=new Request.Builder().url(server.url("/a")).build();
  client.newCall(request).enqueue(new Callback(){
    @Override public void onFailure(    Call call,    IOException e){
      throw new AssertionError();
    }
    @Override public void onResponse(    Call call,    Response response) throws IOException {
      InputStream bytes=response.body().byteStream();
      assertEquals('a',bytes.read());
      assertEquals('b',bytes.read());
      assertEquals('c',bytes.read());
      client.newCall(new Request.Builder().url(server.url("/b")).build()).enqueue(callback);
    }
  }
);
  callback.await(server.url("/b")).assertCode(200).assertBody("def");
  assertEquals(0,server.takeRequest().getSequenceNumber());
  assertEquals(1,server.takeRequest().getSequenceNumber());
}
