@Test public void put_httpPost() throws Exception {
  final String statusLine="HTTP/1.1 200 Fantastic";
  final URL serverUrl=configureServer(new MockResponse().setStatus(statusLine).addHeader("A","c"));
  ResponseCache responseCache=new AbstractResponseCache(){
    @Override public CacheRequest put(    URI uri,    URLConnection connection) throws IOException {
      try {
        assertTrue(connection instanceof HttpURLConnection);
        assertFalse(connection instanceof HttpsURLConnection);
        assertEquals(0,connection.getContentLength());
        HttpURLConnection httpUrlConnection=(HttpURLConnection)connection;
        assertEquals("POST",httpUrlConnection.getRequestMethod());
        assertTrue(httpUrlConnection.getDoInput());
        assertTrue(httpUrlConnection.getDoOutput());
        assertEquals("Fantastic",httpUrlConnection.getResponseMessage());
        assertEquals(toUri(serverUrl),uri);
        assertEquals(serverUrl,connection.getURL());
        assertEquals("value",connection.getRequestProperty("key"));
        assertEquals(statusLine,httpUrlConnection.getHeaderField(null));
        assertEquals("c",httpUrlConnection.getHeaderField("A"));
        assertEquals("c",httpUrlConnection.getHeaderField("a"));
        return null;
      }
 catch (      Throwable t) {
        throw new IOException("unexpected cache failure",t);
      }
    }
  }
;
  setInternalCache(new CacheAdapter(responseCache));
  connection=new OkUrlFactory(client).open(serverUrl);
  executePost(connection);
}
