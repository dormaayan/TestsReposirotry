/** 
 * https://tools.ietf.org/html/rfc3986#section-5.4.2 
 */
@Test public void rfc3886AbnormalExamples(){
  HttpUrl url=parse("http://a/b/c/d;p?q");
  assertEquals(parse("http://a/g"),url.resolve("../../../g"));
  assertEquals(parse("http://a/g"),url.resolve("../../../../g"));
  assertEquals(parse("http://a/g"),url.resolve("/./g"));
  assertEquals(parse("http://a/g"),url.resolve("/../g"));
  assertEquals(parse("http://a/b/c/g."),url.resolve("g."));
  assertEquals(parse("http://a/b/c/.g"),url.resolve(".g"));
  assertEquals(parse("http://a/b/c/g.."),url.resolve("g.."));
  assertEquals(parse("http://a/b/c/..g"),url.resolve("..g"));
  assertEquals(parse("http://a/b/g"),url.resolve("./../g"));
  assertEquals(parse("http://a/b/c/g/"),url.resolve("./g/."));
  assertEquals(parse("http://a/b/c/g/h"),url.resolve("g/./h"));
  assertEquals(parse("http://a/b/c/h"),url.resolve("g/../h"));
  assertEquals(parse("http://a/b/c/g;x=1/y"),url.resolve("g;x=1/./y"));
  assertEquals(parse("http://a/b/c/y"),url.resolve("g;x=1/../y"));
  assertEquals(parse("http://a/b/c/g?y/./x"),url.resolve("g?y/./x"));
  assertEquals(parse("http://a/b/c/g?y/../x"),url.resolve("g?y/../x"));
  assertEquals(parse("http://a/b/c/g#s/./x"),url.resolve("g#s/./x"));
  assertEquals(parse("http://a/b/c/g#s/../x"),url.resolve("g#s/../x"));
  assertEquals(parse("http://a/b/c/g"),url.resolve("http:g"));
}
