/** 
 * Headers are compressed, then framed. 
 */
@Test public void headersFrameThenContinuation() throws IOException {
  final List<Header> sentHeaders=largeHeaders();
  Buffer headerBlock=literalHeaders(sentHeaders);
  writeMedium(frame,Http2.INITIAL_MAX_FRAME_SIZE);
  frame.writeByte(Http2.TYPE_HEADERS);
  frame.writeByte(Http2.FLAG_NONE);
  frame.writeInt(expectedStreamId & 0x7fffffff);
  frame.write(headerBlock,Http2.INITIAL_MAX_FRAME_SIZE);
  writeMedium(frame,(int)headerBlock.size());
  frame.writeByte(Http2.TYPE_CONTINUATION);
  frame.writeByte(FLAG_END_HEADERS);
  frame.writeInt(expectedStreamId & 0x7fffffff);
  frame.writeAll(headerBlock);
  assertEquals(frame,sendHeaderFrames(false,sentHeaders));
  reader.nextFrame(false,new BaseTestHandler(){
    @Override public void headers(    boolean inFinished,    int streamId,    int associatedStreamId,    List<Header> headerBlock){
      assertFalse(inFinished);
      assertEquals(expectedStreamId,streamId);
      assertEquals(-1,associatedStreamId);
      assertEquals(sentHeaders,headerBlock);
    }
  }
);
}
