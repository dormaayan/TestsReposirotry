@Test public void onlyOneLiteralHeadersFrame() throws IOException {
  final List<Header> sentHeaders=headerEntries("name","value");
  Buffer headerBytes=literalHeaders(sentHeaders);
  writeMedium(frame,(int)headerBytes.size());
  frame.writeByte(Http2.TYPE_HEADERS);
  frame.writeByte(FLAG_END_HEADERS | FLAG_END_STREAM);
  frame.writeInt(expectedStreamId & 0x7fffffff);
  frame.writeAll(headerBytes);
  assertEquals(frame,sendHeaderFrames(true,sentHeaders));
  reader.nextFrame(false,new BaseTestHandler(){
    @Override public void headers(    boolean inFinished,    int streamId,    int associatedStreamId,    List<Header> headerBlock){
      assertTrue(inFinished);
      assertEquals(expectedStreamId,streamId);
      assertEquals(-1,associatedStreamId);
      assertEquals(sentHeaders,headerBlock);
    }
  }
);
}
