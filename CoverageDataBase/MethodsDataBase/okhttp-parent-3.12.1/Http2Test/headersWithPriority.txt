@Test public void headersWithPriority() throws IOException {
  final List<Header> sentHeaders=headerEntries("name","value");
  Buffer headerBytes=literalHeaders(sentHeaders);
  writeMedium(frame,(int)(headerBytes.size() + 5));
  frame.writeByte(Http2.TYPE_HEADERS);
  frame.writeByte(FLAG_END_HEADERS | FLAG_PRIORITY);
  frame.writeInt(expectedStreamId & 0x7fffffff);
  frame.writeInt(0);
  frame.writeByte(255);
  frame.writeAll(headerBytes);
  reader.nextFrame(false,new BaseTestHandler(){
    @Override public void priority(    int streamId,    int streamDependency,    int weight,    boolean exclusive){
      assertEquals(0,streamDependency);
      assertEquals(256,weight);
      assertFalse(exclusive);
    }
    @Override public void headers(    boolean inFinished,    int streamId,    int associatedStreamId,    List<Header> nameValueBlock){
      assertFalse(inFinished);
      assertEquals(expectedStreamId,streamId);
      assertEquals(-1,associatedStreamId);
      assertEquals(sentHeaders,nameValueBlock);
    }
  }
);
}
