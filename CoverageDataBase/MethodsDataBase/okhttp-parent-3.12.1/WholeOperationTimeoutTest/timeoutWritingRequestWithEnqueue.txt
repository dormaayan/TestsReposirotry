@Test public void timeoutWritingRequestWithEnqueue() throws Exception {
  server.enqueue(new MockResponse());
  Request request=new Request.Builder().url(server.url("/")).post(sleepingRequestBody(500)).build();
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicReference<Throwable> exceptionRef=new AtomicReference<>();
  Call call=client.newCall(request);
  call.timeout().timeout(250,TimeUnit.MILLISECONDS);
  call.enqueue(new Callback(){
    @Override public void onFailure(    Call call,    IOException e){
      exceptionRef.set(e);
      latch.countDown();
    }
    @Override public void onResponse(    Call call,    Response response) throws IOException {
      response.close();
      latch.countDown();
    }
  }
);
  latch.await();
  assertTrue(call.isCanceled());
  assertNotNull(exceptionRef.get());
}
