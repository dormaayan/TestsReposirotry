@Test public void clientReadsHeadersDataHeadersClose() throws Exception {
  peer.sendFrame().settings(new Settings());
  peer.acceptFrame();
  peer.acceptFrame();
  peer.sendFrame().synReply(false,3,headerEntries("a","android"));
  peer.sendFrame().data(false,3,new Buffer().writeUtf8("robot"),5);
  peer.acceptFrame();
  peer.sendFrame().synReply(false,3,headerEntries("b","banana"));
  peer.sendFrame().ping(true,1,0);
  peer.play();
  RecordingHeadersListener headersListener=new RecordingHeadersListener();
  Http2Connection connection=connect(peer);
  Http2Stream stream=connection.newStream(headerEntries(),false);
  stream.setHeadersListener(headersListener);
  BufferedSource source=Okio.buffer(stream.getSource());
  assertStreamPrefix("robot",source);
  assertEquals(Arrays.asList(Headers.of("a","android")),headersListener.takeAll());
  connection.writePingAndAwaitPong();
  source.close();
  assertEquals(Arrays.asList(Headers.of("b","banana")),headersListener.takeAll());
  assertEquals(0,connection.openStreamCount());
}
