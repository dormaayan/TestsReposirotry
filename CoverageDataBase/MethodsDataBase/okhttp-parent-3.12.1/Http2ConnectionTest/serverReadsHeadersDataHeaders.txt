@Test public void serverReadsHeadersDataHeaders() throws Exception {
  peer.sendFrame().settings(new Settings());
  peer.acceptFrame();
  peer.acceptFrame();
  peer.acceptFrame();
  peer.acceptFrame();
  peer.sendFrame().synReply(true,3,headerEntries("a","android"));
  peer.acceptFrame();
  peer.sendFrame().ping(true,1,0);
  peer.play();
  Http2Connection connection=connect(peer);
  Http2Stream stream=connection.newStream(headerEntries("b","banana"),true);
  BufferedSink out=Okio.buffer(stream.getSink());
  out.writeUtf8("c3po");
  out.close();
  stream.writeHeaders(headerEntries("e","elephant"),true);
  connection.writePingAndAwaitPong();
  assertEquals(0,connection.openStreamCount());
  InFrame synStream=peer.takeFrame();
  assertEquals(Http2.TYPE_HEADERS,synStream.type);
  assertFalse(synStream.outFinished);
  assertEquals(3,synStream.streamId);
  assertEquals(-1,synStream.associatedStreamId);
  assertEquals(headerEntries("b","banana"),synStream.headerBlock);
  InFrame requestData=peer.takeFrame();
  assertTrue(Arrays.equals("c3po".getBytes("UTF-8"),requestData.data));
  InFrame nextFrame=peer.takeFrame();
  assertEquals(headerEntries("e","elephant"),nextFrame.headerBlock);
}
