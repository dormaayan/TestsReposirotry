/** 
 * Webservers may set the initial window size to zero, which is a special case because it means that we have to flush headers immediately before any request body can be sent. https://github.com/square/okhttp/issues/2543
 */
@Test public void peerSetsZeroFlowControl() throws Exception {
  peer.setClient(true);
  peer.sendFrame().settings(new Settings().set(INITIAL_WINDOW_SIZE,0));
  peer.acceptFrame();
  peer.sendFrame().windowUpdate(0,10);
  peer.acceptFrame();
  peer.sendFrame().ping(true,1,0);
  peer.acceptFrame();
  peer.sendFrame().windowUpdate(3,5);
  peer.acceptFrame();
  peer.sendFrame().windowUpdate(3,5);
  peer.acceptFrame();
  peer.play();
  Http2Connection connection=connect(peer);
  connection.writePingAndAwaitPong();
  Http2Stream stream=connection.newStream(headerEntries("a","android"),true);
  BufferedSink sink=Okio.buffer(stream.getSink());
  sink.writeUtf8("abcdefghi");
  sink.flush();
  peer.takeFrame();
  InFrame headers=peer.takeFrame();
  assertEquals(Http2.TYPE_HEADERS,headers.type);
  InFrame data1=peer.takeFrame();
  assertEquals(Http2.TYPE_DATA,data1.type);
  assertEquals(3,data1.streamId);
  assertTrue(Arrays.equals("abcde".getBytes("UTF-8"),data1.data));
  InFrame data2=peer.takeFrame();
  assertEquals(Http2.TYPE_DATA,data2.type);
  assertEquals(3,data2.streamId);
  assertTrue(Arrays.equals("fghi".getBytes("UTF-8"),data2.data));
}
