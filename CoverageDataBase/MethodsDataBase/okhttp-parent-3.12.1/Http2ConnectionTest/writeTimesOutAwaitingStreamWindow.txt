@Test public void writeTimesOutAwaitingStreamWindow() throws Exception {
  Settings peerSettings=new Settings().set(INITIAL_WINDOW_SIZE,5);
  peer.sendFrame().settings(peerSettings);
  peer.acceptFrame();
  peer.acceptFrame();
  peer.sendFrame().ping(true,1,0);
  peer.acceptFrame();
  peer.sendFrame().synReply(false,3,headerEntries("a","android"));
  peer.acceptFrame();
  peer.acceptFrame();
  peer.play();
  Http2Connection connection=connect(peer);
  connection.writePingAndAwaitPong();
  Http2Stream stream=connection.newStream(headerEntries("b","banana"),true);
  Sink sink=stream.getSink();
  sink.write(new Buffer().writeUtf8("abcde"),5);
  stream.writeTimeout().timeout(500,TimeUnit.MILLISECONDS);
  long startNanos=System.nanoTime();
  sink.write(new Buffer().writeUtf8("f"),1);
  try {
    sink.flush();
    fail();
  }
 catch (  InterruptedIOException expected) {
  }
  long elapsedNanos=System.nanoTime() - startNanos;
  awaitWatchdogIdle();
  assertEquals(500d,TimeUnit.NANOSECONDS.toMillis(elapsedNanos),200d);
  assertEquals(0,connection.openStreamCount());
  assertEquals(Http2.TYPE_PING,peer.takeFrame().type);
  assertEquals(Http2.TYPE_HEADERS,peer.takeFrame().type);
  assertEquals(Http2.TYPE_DATA,peer.takeFrame().type);
  assertEquals(Http2.TYPE_RST_STREAM,peer.takeFrame().type);
}
