/** 
 * Make sure interceptors can interact with the OkHttp client asynchronously. 
 */
@Test public void interceptorMakesAnUnrelatedAsyncRequest() throws Exception {
  server.enqueue(new MockResponse().setBody("a"));
  server.enqueue(new MockResponse().setBody("b"));
  client=client.newBuilder().addInterceptor(new Interceptor(){
    @Override public Response intercept(    Chain chain) throws IOException {
      if (chain.request().url().encodedPath().equals("/b")) {
        Request requestA=new Request.Builder().url(server.url("/a")).build();
        try {
          RecordingCallback callbackA=new RecordingCallback();
          client.newCall(requestA).enqueue(callbackA);
          callbackA.await(requestA.url()).assertBody("a");
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
      return chain.proceed(chain.request());
    }
  }
).build();
  Request requestB=new Request.Builder().url(server.url("/b")).build();
  RecordingCallback callbackB=new RecordingCallback();
  client.newCall(requestB).enqueue(callbackB);
  callbackB.await(requestB.url()).assertBody("b");
}
