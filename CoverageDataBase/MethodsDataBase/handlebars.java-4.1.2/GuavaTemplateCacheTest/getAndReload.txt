@Test public void getAndReload() throws IOException, InterruptedException {
  Cache<TemplateSource,Template> cache=CacheBuilder.newBuilder().build();
  TemplateSource source=source("/template.hbs");
  Template template=createMock(Template.class);
  Template reloadTemplate=createMock(Template.class);
  Parser parser=createMock(Parser.class);
  expect(parser.parse(source)).andReturn(template);
  TemplateSource reloadSource=new ForwardingTemplateSource(source){
    @Override public long lastModified(){
      return System.currentTimeMillis() * 7;
    }
  }
;
  expect(parser.parse(reloadSource)).andReturn(reloadTemplate);
  replay(parser,template,reloadTemplate);
  assertEquals(template,new GuavaTemplateCache(cache).setReload(true).get(source,parser));
  assertEquals(template,new GuavaTemplateCache(cache).setReload(true).get(source,parser));
  assertEquals(reloadTemplate,new GuavaTemplateCache(cache).setReload(true).get(reloadSource,parser));
  verify(parser,template,reloadTemplate);
}
