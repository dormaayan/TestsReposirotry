@Test public void shouldApplyMultipleDecorators() throws IOException {
  shouldCompileTo("{{#helper}}{{#*decorator}}suc{{/decorator}}{{#*decorator}}cess{{/decorator}}{{/helper}}",$("helpers",$("helper",new Helper<Object>(){
    @Override public Object apply(    final Object context,    final Options options) throws IOException {
      return options.data("run");
    }
  }
),"decorators",$("decorator",new Decorator(){
    @Override public void apply(    final Template fn,    final Options options) throws IOException {
      Object run=options.data("run");
      options.data("run",run == null ? options.fn() : run.toString() + options.fn());
    }
  }
)),"success");
}
