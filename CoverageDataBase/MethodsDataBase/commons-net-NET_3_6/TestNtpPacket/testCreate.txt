@Test public void testCreate(){
  NtpV3Packet message=new NtpV3Impl();
  message.setLeapIndicator(0);
  message.setVersion(NtpV3Packet.VERSION_3);
  message.setMode(4);
  message.setStratum(3);
  message.setPoll(4);
  message.setPrecision(-17);
  message.setRootDelay(100);
  message.setRootDispersion(3382);
  message.setReferenceId(0x81531472);
  message.setReferenceTime(new TimeStamp(0xd552447fec1d6000L));
  message.setOriginateTimeStamp(new TimeStamp(0xd5524718ac49ba5eL));
  message.setReceiveTimeStamp(new TimeStamp(0xd55247194b6d9000L));
  message.setTransmitTime(new TimeStamp(0xd55247194b797000L));
  Assert.assertEquals(-17,message.getPrecision());
  Assert.assertEquals(4,message.getPoll());
  Assert.assertEquals(100,message.getRootDelay());
  Assert.assertEquals(3382,message.getRootDispersion());
  Assert.assertEquals(0x81531472,message.getReferenceId());
  Assert.assertNotNull(message.getReferenceTimeStamp());
  Assert.assertEquals("NTP",message.getType());
  Assert.assertEquals("Server",message.getModeName());
  Assert.assertEquals("129.83.20.114",message.getReferenceIdString());
  Assert.assertEquals(51,message.getRootDispersionInMillis());
  Assert.assertEquals(message.getRootDelay() / 65.536,message.getRootDelayInMillisDouble(),1e-13);
  DatagramPacket dp=message.getDatagramPacket();
  Assert.assertNotNull(dp);
  Assert.assertEquals(48,dp.getLength());
  NtpV3Packet message2=new NtpV3Impl();
  DatagramPacket dp2=new DatagramPacket(ntpPacket,ntpPacket.length);
  message2.setDatagramPacket(dp2);
  Assert.assertEquals(message2,message);
  Assert.assertEquals(message2.hashCode(),message.hashCode());
  Assert.assertEquals(message2.toString(),message.toString());
}
