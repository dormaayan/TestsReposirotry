@Test public void testFileCleanerExitWhenFinished2() throws Exception {
  final String path=testFile.getPath();
  assertFalse(testFile.exists());
  RandomAccessFile r=new RandomAccessFile(testFile,"rw");
  assertTrue(testFile.exists());
  assertEquals(0,theInstance.getTrackCount());
  theInstance.track(path,r);
  assertEquals(1,theInstance.getTrackCount());
  assertFalse(theInstance.exitWhenFinished);
  assertTrue(theInstance.reaper.isAlive());
  r.close();
  testFile=null;
  r=null;
  waitUntilTrackCount();
  pauseForDeleteToComplete(new File(path));
  assertEquals(0,theInstance.getTrackCount());
  assertEquals(showFailures(),false,new File(path).exists());
  assertFalse(theInstance.exitWhenFinished);
  assertTrue(theInstance.reaper.isAlive());
  assertFalse(theInstance.exitWhenFinished);
  theInstance.exitWhenFinished();
  for (int i=0; i < 20 && theInstance.reaper.isAlive(); i++) {
    TestUtils.sleep(500L);
  }
  assertTrue(theInstance.exitWhenFinished);
  assertFalse(theInstance.reaper.isAlive());
}
