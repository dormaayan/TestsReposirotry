@Test public void testFileCleanerExitWhenFinished1() throws Exception {
  final String path=testFile.getPath();
  assertEquals("1-testFile exists: " + testFile,false,testFile.exists());
  RandomAccessFile r=new RandomAccessFile(testFile,"rw");
  assertEquals("2-testFile exists",true,testFile.exists());
  assertEquals("3-Track Count",0,theInstance.getTrackCount());
  theInstance.track(path,r);
  assertEquals("4-Track Count",1,theInstance.getTrackCount());
  assertEquals("5-exitWhenFinished",false,theInstance.exitWhenFinished);
  assertEquals("6-reaper.isAlive",true,theInstance.reaper.isAlive());
  assertEquals("7-exitWhenFinished",false,theInstance.exitWhenFinished);
  theInstance.exitWhenFinished();
  assertEquals("8-exitWhenFinished",true,theInstance.exitWhenFinished);
  assertEquals("9-reaper.isAlive",true,theInstance.reaper.isAlive());
  r.close();
  testFile=null;
  r=null;
  waitUntilTrackCount();
  pauseForDeleteToComplete(new File(path));
  assertEquals("10-Track Count",0,theInstance.getTrackCount());
  assertEquals("11-testFile exists " + showFailures(),false,new File(path).exists());
  assertEquals("12-exitWhenFinished",true,theInstance.exitWhenFinished);
  assertEquals("13-reaper.isAlive",false,theInstance.reaper.isAlive());
}
