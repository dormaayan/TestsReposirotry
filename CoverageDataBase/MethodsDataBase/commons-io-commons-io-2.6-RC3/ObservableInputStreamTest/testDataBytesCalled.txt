/** 
 * Tests, that  {@link Observer#data(byte[],int,int)} is called.
 */
@Test public void testDataBytesCalled() throws Exception {
  final byte[] buffer=MessageDigestCalculatingInputStreamTest.generateRandomByteStream(4096);
  final ByteArrayInputStream bais=new ByteArrayInputStream(buffer);
  final ObservableInputStream ois=new ObservableInputStream(bais);
  final LastBytesKeepingObserver lko=new LastBytesKeepingObserver();
  final byte[] readBuffer=new byte[23];
  assertEquals(null,lko.buffer);
  ois.read(readBuffer);
  assertEquals(null,lko.buffer);
  ois.add(lko);
  for (; ; ) {
    if (bais.available() >= 2048) {
      final int result=ois.read(readBuffer);
      if (result == -1) {
        ois.close();
        break;
      }
 else {
        assertEquals(readBuffer,lko.buffer);
        assertEquals(0,lko.offset);
        assertEquals(readBuffer.length,lko.length);
      }
    }
 else {
      final int res=Math.min(11,bais.available());
      final int result=ois.read(readBuffer,1,11);
      if (result == -1) {
        ois.close();
        break;
      }
 else {
        assertEquals(readBuffer,lko.buffer);
        assertEquals(1,lko.offset);
        assertEquals(res,lko.length);
      }
    }
  }
}
