@Test public void testListFilesWithDirs() throws IOException {
  final File srcDir=getTestDirectory();
  final File subDir1=new File(srcDir,"subdir");
  subDir1.mkdir();
  final File subDir2=new File(subDir1,"subdir2");
  subDir2.mkdir();
  final File someFile=new File(subDir2,"a.txt");
  if (!someFile.getParentFile().exists()) {
    throw new IOException("Cannot create file " + someFile + " as the parent directory does not exist");
  }
  final BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(someFile));
  try {
    TestUtils.generateTestData(output,100);
  }
  finally {
    IOUtils.closeQuietly(output);
  }
  final File subDir3=new File(subDir2,"subdir3");
  subDir3.mkdir();
  final Collection<File> files=FileUtils.listFilesAndDirs(subDir1,new WildcardFileFilter("*.*"),new WildcardFileFilter("*"));
  assertEquals(4,files.size());
  assertTrue("Should contain the directory.",files.contains(subDir1));
  assertTrue("Should contain the directory.",files.contains(subDir2));
  assertTrue("Should contain the file.",files.contains(someFile));
  assertTrue("Should contain the directory.",files.contains(subDir3));
  subDir1.delete();
}
