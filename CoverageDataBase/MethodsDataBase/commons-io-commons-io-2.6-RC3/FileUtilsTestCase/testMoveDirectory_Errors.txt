@Test public void testMoveDirectory_Errors() throws Exception {
  try {
    FileUtils.moveDirectory(null,new File("foo"));
    fail("Expected NullPointerException when source is null");
  }
 catch (  final NullPointerException e) {
  }
  try {
    FileUtils.moveDirectory(new File("foo"),null);
    fail("Expected NullPointerException when destination is null");
  }
 catch (  final NullPointerException e) {
  }
  try {
    FileUtils.moveDirectory(new File("nonexistant"),new File("foo"));
    fail("Expected FileNotFoundException for source");
  }
 catch (  final FileNotFoundException e) {
  }
  final File testFile=new File(getTestDirectory(),"testMoveDirectoryFile");
  if (!testFile.getParentFile().exists()) {
    throw new IOException("Cannot create file " + testFile + " as the parent directory does not exist");
  }
  final BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(testFile));
  try {
    TestUtils.generateTestData(output,0);
  }
  finally {
    IOUtils.closeQuietly(output);
  }
  try {
    FileUtils.moveDirectory(testFile,new File("foo"));
    fail("Expected IOException when source is not a directory");
  }
 catch (  final IOException e) {
  }
  final File testSrcFile=new File(getTestDirectory(),"testMoveDirectorySource");
  final File testDestFile=new File(getTestDirectory(),"testMoveDirectoryDest");
  testSrcFile.mkdir();
  testDestFile.mkdir();
  try {
    FileUtils.moveDirectory(testSrcFile,testDestFile);
    fail("Expected FileExistsException when dest already exists");
  }
 catch (  final FileExistsException e) {
  }
}
