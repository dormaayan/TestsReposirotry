@Test public void testCopyDirectoryToExistingDest() throws Exception {
  if (!testFile1.getParentFile().exists()) {
    throw new IOException("Cannot create file " + testFile1 + " as the parent directory does not exist");
  }
  final BufferedOutputStream output1=new BufferedOutputStream(new FileOutputStream(testFile1));
  try {
    TestUtils.generateTestData(output1,1234);
  }
  finally {
    IOUtils.closeQuietly(output1);
  }
  if (!testFile2.getParentFile().exists()) {
    throw new IOException("Cannot create file " + testFile2 + " as the parent directory does not exist");
  }
  final BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(testFile2));
  try {
    TestUtils.generateTestData(output,4321);
  }
  finally {
    IOUtils.closeQuietly(output);
  }
  final File srcDir=getTestDirectory();
  final File subDir=new File(srcDir,"sub");
  subDir.mkdir();
  final File subFile=new File(subDir,"A.txt");
  FileUtils.writeStringToFile(subFile,"HELLO WORLD","UTF8");
  final File destDir=new File(System.getProperty("java.io.tmpdir"),"tmp-FileUtilsTestCase");
  FileUtils.deleteDirectory(destDir);
  destDir.mkdirs();
  FileUtils.copyDirectory(srcDir,destDir);
  final long srcSize=FileUtils.sizeOfDirectory(srcDir);
  assertTrue("Size > 0",srcSize > 0);
  assertEquals(srcSize,FileUtils.sizeOfDirectory(destDir));
  assertTrue(new File(destDir,"sub/A.txt").exists());
}
