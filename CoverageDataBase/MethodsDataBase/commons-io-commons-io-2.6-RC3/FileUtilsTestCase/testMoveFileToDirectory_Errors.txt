@Test public void testMoveFileToDirectory_Errors() throws Exception {
  try {
    FileUtils.moveFileToDirectory(null,new File("foo"),true);
    fail("Expected NullPointerException when source is null");
  }
 catch (  final NullPointerException e) {
  }
  try {
    FileUtils.moveFileToDirectory(new File("foo"),null,true);
    fail("Expected NullPointerException when destination is null");
  }
 catch (  final NullPointerException e) {
  }
  final File testFile1=new File(getTestDirectory(),"testMoveFileFile1");
  final File testFile2=new File(getTestDirectory(),"testMoveFileFile2");
  if (!testFile1.getParentFile().exists()) {
    throw new IOException("Cannot create file " + testFile1 + " as the parent directory does not exist");
  }
  final BufferedOutputStream output1=new BufferedOutputStream(new FileOutputStream(testFile1));
  try {
    TestUtils.generateTestData(output1,0);
  }
  finally {
    IOUtils.closeQuietly(output1);
  }
  if (!testFile2.getParentFile().exists()) {
    throw new IOException("Cannot create file " + testFile2 + " as the parent directory does not exist");
  }
  final BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(testFile2));
  try {
    TestUtils.generateTestData(output,0);
  }
  finally {
    IOUtils.closeQuietly(output);
  }
  try {
    FileUtils.moveFileToDirectory(testFile1,testFile2,true);
    fail("Expected IOException when dest not a directory");
  }
 catch (  final IOException e) {
  }
  final File nonexistant=new File(getTestDirectory(),"testMoveFileNonExistant");
  try {
    FileUtils.moveFileToDirectory(testFile1,nonexistant,false);
    fail("Expected IOException when dest does not exist and create=false");
  }
 catch (  final IOException e) {
  }
}
