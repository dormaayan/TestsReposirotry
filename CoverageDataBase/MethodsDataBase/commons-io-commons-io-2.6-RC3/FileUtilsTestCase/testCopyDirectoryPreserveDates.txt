@Test public void testCopyDirectoryPreserveDates() throws Exception {
  final File source=new File(getTestDirectory(),"source");
  final File sourceDirectory=new File(source,"directory");
  final File sourceFile=new File(sourceDirectory,"hello.txt");
  source.mkdirs();
  sourceDirectory.mkdir();
  FileUtils.writeStringToFile(sourceFile,"HELLO WORLD","UTF8");
  sourceFile.setLastModified(1000000002000L);
  sourceDirectory.setLastModified(1000000001000L);
  source.setLastModified(1000000000000L);
  final File target=new File(getTestDirectory(),"target");
  final File targetDirectory=new File(target,"directory");
  final File targetFile=new File(targetDirectory,"hello.txt");
  FileUtils.copyDirectory(source,target,false);
  assertTrue(1000000000000L != target.lastModified());
  assertTrue(1000000001000L != targetDirectory.lastModified());
  assertTrue(1000000002000L != targetFile.lastModified());
  FileUtils.deleteDirectory(target);
  FileUtils.copyDirectory(source,target,true);
  assertEquals(1000000000000L,target.lastModified());
  assertEquals(1000000001000L,targetDirectory.lastModified());
  assertEquals(1000000002000L,targetFile.lastModified());
  FileUtils.deleteDirectory(target);
  target.mkdirs();
  FileUtils.copyDirectory(source,target,true);
  assertEquals(1000000000000L,target.lastModified());
  assertEquals(1000000001000L,targetDirectory.lastModified());
  assertEquals(1000000002000L,targetFile.lastModified());
  FileUtils.deleteDirectory(target);
  targetDirectory.mkdirs();
  FileUtils.copyDirectory(source,target,true);
  assertEquals(1000000000000L,target.lastModified());
  assertEquals(1000000001000L,targetDirectory.lastModified());
  assertEquals(1000000002000L,targetFile.lastModified());
  FileUtils.deleteDirectory(target);
}
