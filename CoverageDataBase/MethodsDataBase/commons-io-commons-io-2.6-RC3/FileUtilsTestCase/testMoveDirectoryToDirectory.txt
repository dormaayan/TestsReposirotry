@Test public void testMoveDirectoryToDirectory() throws Exception {
  final File dir=getTestDirectory();
  final File src=new File(dir,"testMoveDirectory1Source");
  final File testChildDir=new File(src,"foo");
  final File testFile=new File(testChildDir,"bar");
  testChildDir.mkdirs();
  if (!testFile.getParentFile().exists()) {
    throw new IOException("Cannot create file " + testFile + " as the parent directory does not exist");
  }
  final BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(testFile));
  try {
    TestUtils.generateTestData(output,0);
  }
  finally {
    IOUtils.closeQuietly(output);
  }
  final File destDir=new File(dir,"testMoveDirectory1Dest");
  FileUtils.deleteDirectory(destDir);
  assertFalse("Check Exist before",destDir.exists());
  FileUtils.moveDirectoryToDirectory(src,destDir,true);
  assertTrue("Check Exist after",destDir.exists());
  assertTrue("Original deleted",!src.exists());
  final File movedDir=new File(destDir,src.getName());
  final File movedChildDir=new File(movedDir,testChildDir.getName());
  final File movedFile=new File(movedChildDir,testFile.getName());
  assertTrue("Check dir moved",movedDir.exists());
  assertTrue("Check child dir moved",movedChildDir.exists());
  assertTrue("Check file moved",movedFile.exists());
}
