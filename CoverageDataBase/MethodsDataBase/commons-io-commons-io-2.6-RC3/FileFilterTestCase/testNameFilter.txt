@Test public void testNameFilter() throws Exception {
  IOFileFilter filter=new NameFileFilter(new String[]{"foo","bar"});
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("bar"),true);
  assertFiltering(filter,new File("fred"),false);
  filter=new NameFileFilter(new String[]{"foo","bar"},IOCase.SENSITIVE);
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("bar"),true);
  assertFiltering(filter,new File("FOO"),false);
  assertFiltering(filter,new File("BAR"),false);
  filter=new NameFileFilter(new String[]{"foo","bar"},IOCase.INSENSITIVE);
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("bar"),true);
  assertFiltering(filter,new File("FOO"),true);
  assertFiltering(filter,new File("BAR"),true);
  filter=new NameFileFilter(new String[]{"foo","bar"},IOCase.SYSTEM);
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("bar"),true);
  assertFiltering(filter,new File("FOO"),WINDOWS);
  assertFiltering(filter,new File("BAR"),WINDOWS);
  filter=new NameFileFilter(new String[]{"foo","bar"},null);
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("bar"),true);
  assertFiltering(filter,new File("FOO"),false);
  assertFiltering(filter,new File("BAR"),false);
  final java.util.ArrayList<String> list=new java.util.ArrayList<>();
  list.add("foo");
  list.add("bar");
  filter=new NameFileFilter(list);
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("bar"),true);
  assertFiltering(filter,new File("fred"),false);
  filter=new NameFileFilter("foo");
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("FOO"),false);
  assertFiltering(filter,new File("barfoo"),false);
  assertFiltering(filter,new File("foobar"),false);
  assertFiltering(filter,new File("fred"),false);
  filter=FileFilterUtils.nameFileFilter("foo",IOCase.INSENSITIVE);
  assertFiltering(filter,new File("foo"),true);
  assertFiltering(filter,new File("FOO"),true);
  assertFiltering(filter,new File("barfoo"),false);
  assertFiltering(filter,new File("foobar"),false);
  assertFiltering(filter,new File("fred"),false);
}
