@Test public void testOr() throws Exception {
  final IOFileFilter trueFilter=TrueFileFilter.INSTANCE;
  final IOFileFilter falseFilter=FalseFileFilter.INSTANCE;
  final File testFile=new File("foo.test");
  assertFiltering(new OrFileFilter(trueFilter,trueFilter),testFile,true);
  assertFiltering(new OrFileFilter(trueFilter,falseFilter),testFile,true);
  assertFiltering(new OrFileFilter(falseFilter,trueFilter),testFile,true);
  assertFiltering(new OrFileFilter(falseFilter,falseFilter),testFile,false);
  assertFiltering(new OrFileFilter(),testFile,false);
  final List<IOFileFilter> filters=new ArrayList<>();
  filters.add(trueFilter);
  filters.add(falseFilter);
  final OrFileFilter orFilter=new OrFileFilter(filters);
  assertFiltering(orFilter,testFile,true);
  assertEquals(orFilter.getFileFilters(),filters);
  orFilter.removeFileFilter(trueFilter);
  assertFiltering(orFilter,testFile,false);
  orFilter.setFileFilters(filters);
  assertFiltering(orFilter,testFile,true);
  assertTrue(orFilter.accept(testFile.getParentFile(),testFile.getName()));
  orFilter.removeFileFilter(trueFilter);
  assertTrue(!orFilter.accept(testFile.getParentFile(),testFile.getName()));
  try {
    new OrFileFilter(falseFilter,null);
    fail();
  }
 catch (  final IllegalArgumentException ex) {
  }
  final OrFileFilter f=new OrFileFilter(null);
  assertTrue(f.getFileFilters().isEmpty());
}
