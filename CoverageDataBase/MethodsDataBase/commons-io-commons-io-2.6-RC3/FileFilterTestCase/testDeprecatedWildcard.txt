@SuppressWarnings("deprecation") @Test public void testDeprecatedWildcard() throws Exception {
  IOFileFilter filter=new WildcardFilter("*.txt");
  final List<String> patternList=Arrays.asList("*.txt","*.xml","*.gif");
  final IOFileFilter listFilter=new WildcardFilter(patternList);
  final File txtFile=new File("test.txt");
  final File bmpFile=new File("test.bmp");
  final File dir=new File("src/java");
  assertFiltering(filter,new File("log.txt"),true);
  filter=new WildcardFilter("log?.txt");
  assertFiltering(filter,new File("log1.txt"),true);
  assertFiltering(filter,new File("log12.txt"),false);
  filter=new WildcardFilter("open??.????04");
  assertFiltering(filter,new File("openAB.102504"),true);
  assertFiltering(filter,new File("openA.102504"),false);
  assertFiltering(filter,new File("openXY.123103"),false);
  filter=new WildcardFilter(new String[]{"*.java","*.class"});
  assertFiltering(filter,new File("Test.java"),true);
  assertFiltering(filter,new File("Test.class"),true);
  assertFiltering(filter,new File("Test.jsp"),false);
  assertFiltering(listFilter,new File("Test.txt"),true);
  assertFiltering(listFilter,new File("Test.xml"),true);
  assertFiltering(listFilter,new File("Test.gif"),true);
  assertFiltering(listFilter,new File("Test.bmp"),false);
  assertTrue(listFilter.accept(txtFile));
  assertTrue(!listFilter.accept(bmpFile));
  assertTrue(!listFilter.accept(dir));
  assertTrue(listFilter.accept(txtFile.getParentFile(),txtFile.getName()));
  assertTrue(!listFilter.accept(bmpFile.getParentFile(),bmpFile.getName()));
  assertTrue(!listFilter.accept(dir.getParentFile(),dir.getName()));
  try {
    new WildcardFilter((String)null);
    fail();
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    new WildcardFilter((String[])null);
    fail();
  }
 catch (  final IllegalArgumentException ex) {
  }
  try {
    new WildcardFilter((List<String>)null);
    fail();
  }
 catch (  final IllegalArgumentException ex) {
  }
}
