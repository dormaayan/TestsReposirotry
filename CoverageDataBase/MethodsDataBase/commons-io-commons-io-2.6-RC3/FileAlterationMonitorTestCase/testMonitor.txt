/** 
 * Test checkAndNotify() method
 * @throws Exception
 */
@Test public void testMonitor() throws Exception {
  final long interval=100;
  listener.clear();
  final FileAlterationMonitor monitor=new FileAlterationMonitor(interval,observer);
  assertEquals("Interval",interval,monitor.getInterval());
  monitor.start();
  try {
    monitor.start();
    fail("Expected IllegalStateException");
  }
 catch (  final IllegalStateException e) {
  }
  checkCollectionsEmpty("A");
  File file1=touch(new File(testDir,"file1.java"));
  checkFile("Create",file1,listener.getCreatedFiles());
  listener.clear();
  checkCollectionsEmpty("B");
  file1=touch(file1);
  checkFile("Update",file1,listener.getChangedFiles());
  listener.clear();
  checkCollectionsEmpty("C");
  file1.delete();
  checkFile("Delete",file1,listener.getDeletedFiles());
  listener.clear();
  monitor.stop();
  try {
    monitor.stop();
    fail("Expected IllegalStateException");
  }
 catch (  final IllegalStateException e) {
  }
}
