@Test public void testBrokenStream(){
  final IOException exception=new IOException("test exception");
  final TaggedInputStream stream=new TaggedInputStream(new BrokenInputStream(exception));
  try {
    stream.available();
    fail("Expected exception not thrown.");
  }
 catch (  final IOException e) {
    assertTrue(stream.isCauseOf(e));
    try {
      stream.throwIfCauseOf(e);
      fail("Expected exception not thrown.");
    }
 catch (    final IOException e2) {
      assertEquals(exception,e2);
    }
  }
  try {
    stream.read();
    fail("Expected exception not thrown.");
  }
 catch (  final IOException e) {
    assertTrue(stream.isCauseOf(e));
    try {
      stream.throwIfCauseOf(e);
      fail("Expected exception not thrown.");
    }
 catch (    final IOException e2) {
      assertEquals(exception,e2);
    }
  }
  try {
    stream.close();
    fail("Expected exception not thrown.");
  }
 catch (  final IOException e) {
    assertTrue(stream.isCauseOf(e));
    try {
      stream.throwIfCauseOf(e);
      fail("Expected exception not thrown.");
    }
 catch (    final IOException e2) {
      assertEquals(exception,e2);
    }
  }
}
