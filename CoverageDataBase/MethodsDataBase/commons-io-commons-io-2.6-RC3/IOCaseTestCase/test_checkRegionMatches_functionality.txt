@Test public void test_checkRegionMatches_functionality() throws Exception {
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("ABC",0,""));
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("ABC",0,"A"));
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("ABC",0,"AB"));
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("ABC",0,"ABC"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",0,"BC"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",0,"C"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",0,"ABCD"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("",0,"ABC"));
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("",0,""));
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("ABC",1,""));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",1,"A"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",1,"AB"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",1,"ABC"));
  assertTrue(IOCase.SENSITIVE.checkRegionMatches("ABC",1,"BC"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",1,"C"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("ABC",1,"ABCD"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("",1,"ABC"));
  assertFalse(IOCase.SENSITIVE.checkRegionMatches("",1,""));
  try {
    IOCase.SENSITIVE.checkRegionMatches("ABC",0,null);
    fail();
  }
 catch (  final NullPointerException ignore) {
  }
  try {
    IOCase.SENSITIVE.checkRegionMatches(null,0,"ABC");
    fail();
  }
 catch (  final NullPointerException ignore) {
  }
  try {
    IOCase.SENSITIVE.checkRegionMatches(null,0,null);
    fail();
  }
 catch (  final NullPointerException ignore) {
  }
  try {
    IOCase.SENSITIVE.checkRegionMatches("ABC",1,null);
    fail();
  }
 catch (  final NullPointerException ignore) {
  }
  try {
    IOCase.SENSITIVE.checkRegionMatches(null,1,"ABC");
    fail();
  }
 catch (  final NullPointerException ignore) {
  }
  try {
    IOCase.SENSITIVE.checkRegionMatches(null,1,null);
    fail();
  }
 catch (  final NullPointerException ignore) {
  }
}
