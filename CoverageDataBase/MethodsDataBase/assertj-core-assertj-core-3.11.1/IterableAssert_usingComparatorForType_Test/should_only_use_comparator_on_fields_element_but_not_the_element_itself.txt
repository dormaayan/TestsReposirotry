@Test public void should_only_use_comparator_on_fields_element_but_not_the_element_itself(){
  assertThatExceptionOfType(AssertionError.class).isThrownBy(() -> assertThat(asList(actual,"some")).usingComparatorForElementFieldsWithType(ALWAY_EQUALS_STRING,String.class).usingElementComparatorIgnoringFields("name").contains(other,"any")).withMessage(format("%nExpecting:%n" + " <[Yoda the Jedi, \"some\"]>%n" + "to contain:%n"+ " <[Luke the Jedi, \"any\"]>%n"+ "but could not find:%n"+ " <[\"any\"]>%n"+ "when comparing values using field/property by field/property comparator on all fields/properties except [\"name\"]%n"+ "Comparators used:%n"+ "- for elements fields (by type): {Double -> DoubleComparator[precision=1.0E-15], Float -> FloatComparator[precision=1.0E-6], String -> AlwaysEqualComparator}%n"+ "- for elements (by type): {Double -> DoubleComparator[precision=1.0E-15], Float -> FloatComparator[precision=1.0E-6]}"));
}
