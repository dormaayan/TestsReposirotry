@Test public void should_pass_if_actual_is_equal_to_other_ignoring_hours_in_different_timezone(){
  ZonedDateTime utcDateTime=ZonedDateTime.of(2013,6,10,0,0,0,0,UTC);
  ZoneId cestTimeZone=ZoneId.of("Europe/Berlin");
  assertThat(utcDateTime).isEqualToIgnoringHours(ZonedDateTime.of(2013,6,10,5,0,0,0,cestTimeZone));
  assertThat(utcDateTime).isEqualToIgnoringHours(ZonedDateTime.of(2013,6,11,1,0,0,0,cestTimeZone));
  try {
    assertThat(utcDateTime).isEqualToIgnoringHours(ZonedDateTime.of(2013,6,10,0,0,0,0,cestTimeZone));
  }
 catch (  AssertionError e) {
    assertThat(e).hasMessage(format("%nExpecting:%n  <2013-06-10T00:00Z>%nto have same year, month and day as:%n  <2013-06-09T22:00Z>%nbut had not."));
    return;
  }
  failBecauseExpectedAssertionErrorWasNotThrown();
}
