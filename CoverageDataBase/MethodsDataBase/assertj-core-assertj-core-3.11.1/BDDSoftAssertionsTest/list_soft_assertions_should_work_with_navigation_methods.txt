@Test public void list_soft_assertions_should_work_with_navigation_methods(){
  List<Name> names=asList(name("John","Doe"),name("Jane","Doe"));
  softly.then(names).size().isGreaterThan(10);
  softly.then(names).size().isGreaterThan(22).returnToIterable().isEmpty();
  softly.then(names).first().as("first element").isNull();
  softly.then(names).element(0).as("element(0)").isNull();
  softly.then(names).last().as("last element").isNull();
  List<Throwable> errorsCollected=softly.errorsCollected();
  assertThat(errorsCollected).hasSize(6);
  assertThat(errorsCollected.get(0)).hasMessageContaining("10");
  assertThat(errorsCollected.get(1)).hasMessageContaining("22");
  assertThat(errorsCollected.get(2)).hasMessageContaining("empty");
  assertThat(errorsCollected.get(3)).hasMessageContaining("first element");
  assertThat(errorsCollected.get(4)).hasMessageContaining("element(0)");
  assertThat(errorsCollected.get(5)).hasMessageContaining("last element");
}
