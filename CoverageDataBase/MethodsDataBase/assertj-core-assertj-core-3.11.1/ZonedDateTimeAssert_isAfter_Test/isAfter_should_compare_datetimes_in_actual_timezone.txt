@Test public void isAfter_should_compare_datetimes_in_actual_timezone(){
  ZonedDateTime utcDateTime=ZonedDateTime.of(2013,6,10,0,0,0,0,UTC);
  ZoneId cestTimeZone=ZoneId.of("Europe/Berlin");
  ZonedDateTime cestDateTime=ZonedDateTime.of(2013,6,10,1,0,0,0,cestTimeZone);
  assertThat(utcDateTime).as("in UTC time zone").isAfter(cestDateTime);
  try {
    ZonedDateTime equalsCestDateTime=ZonedDateTime.of(2013,6,10,2,0,0,0,cestTimeZone);
    assertThat(utcDateTime).as("in UTC time zone").isAfter(equalsCestDateTime);
  }
 catch (  AssertionError e) {
    return;
  }
  fail("Should have thrown AssertionError");
}
