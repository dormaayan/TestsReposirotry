@Test public void should_fail_when_selected_field_is_not_accessible_and_private_field_use_is_forbidden(){
  Assertions.setAllowComparingPrivateFields(false);
  assertThatExceptionOfType(IntrospectionError.class).isThrownBy(() -> {
    Jedi actual=new Jedi("Yoda","Green");
    Jedi other=new Jedi("Yoda","Blue");
    objects.assertIsEqualToComparingOnlyGivenFields(someInfo(),actual,other,noFieldComparators(),defaultTypeComparators(),"strangeNotReadablePrivateField");
  }
).withMessageContaining("Can't find any field or property with name 'strangeNotReadablePrivateField'.");
  Assertions.setAllowComparingPrivateFields(true);
}
