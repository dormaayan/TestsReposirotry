/** 
 * Comparisons involving NaN values
 */
@Test public void nan(){
  assertFalse(nearlyEqual(Float.NaN,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,0.0f));
  assertFalse(nearlyEqual(-0.0f,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,-0.0f));
  assertFalse(nearlyEqual(0.0f,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,Float.POSITIVE_INFINITY));
  assertFalse(nearlyEqual(Float.POSITIVE_INFINITY,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,Float.NEGATIVE_INFINITY));
  assertFalse(nearlyEqual(Float.NEGATIVE_INFINITY,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,Float.MAX_VALUE));
  assertFalse(nearlyEqual(Float.MAX_VALUE,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,-Float.MAX_VALUE));
  assertFalse(nearlyEqual(-Float.MAX_VALUE,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,Float.MIN_VALUE));
  assertFalse(nearlyEqual(Float.MIN_VALUE,Float.NaN));
  assertFalse(nearlyEqual(Float.NaN,-Float.MIN_VALUE));
  assertFalse(nearlyEqual(-Float.MIN_VALUE,Float.NaN));
}
