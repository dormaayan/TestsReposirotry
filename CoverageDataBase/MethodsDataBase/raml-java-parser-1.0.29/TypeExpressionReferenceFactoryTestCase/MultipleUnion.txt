@Test public void MultipleUnion(){
  final StringNodeImpl expression=new StringNodeImpl("user | cat[] | hamster | fish");
  final Node user=new TypeExpressionReferenceFactory().create(expression,expression.getLiteralValue());
  final String dump=new RamlTreeNodeDumper().dump(user).trim();
  Assert.assertThat(dump,equalTo("UnionTypeExpressionNode: user | cat[] | hamster | fish (Start: 4 , End: 32, On: [artificial node])\n" + "    NamedTypeExpressionNode user -> {null} (Start: 4 , End: 8, On: [artificial node])\n" + "    ArrayTypeExpressionNode: cat[] (Start: 9 , End: 14, On: [artificial node])\n"+ "        NamedTypeExpressionNode cat -> {null} (Start: 9 , End: 12, On: [artificial node])\n"+ "    NamedTypeExpressionNode hamster -> {null} (Start: 22 , End: 29, On: [artificial node])\n"+ "    NamedTypeExpressionNode fish -> {null} (Start: 28 , End: 32, On: [artificial node])"));
}
