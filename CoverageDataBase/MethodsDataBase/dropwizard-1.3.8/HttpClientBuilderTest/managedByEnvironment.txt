@Test public void managedByEnvironment() throws Exception {
  final Environment environment=mock(Environment.class);
  when(environment.getName()).thenReturn("test-env");
  when(environment.metrics()).thenReturn(new MetricRegistry());
  final LifecycleEnvironment lifecycle=mock(LifecycleEnvironment.class);
  when(environment.lifecycle()).thenReturn(lifecycle);
  final CloseableHttpClient httpClient=mock(CloseableHttpClient.class);
  HttpClientBuilder httpClientBuilder=spy(new HttpClientBuilder(environment));
  when(httpClientBuilder.buildWithDefaultRequestConfiguration("test-apache-client")).thenReturn(new ConfiguredCloseableHttpClient(httpClient,RequestConfig.DEFAULT));
  assertThat(httpClientBuilder.build("test-apache-client")).isSameAs(httpClient);
  final ArgumentCaptor<Managed> argumentCaptor=ArgumentCaptor.forClass(Managed.class);
  verify(lifecycle).manage(argumentCaptor.capture());
  final Managed managed=argumentCaptor.getValue();
  managed.stop();
  verify(httpClient).close();
}
