/** 
 * <p>In first assertion we prove, that a request takes no longer than: <em>request_time < connect_timeout + error_margin</em> (1)</p> <p/> </p>In the second we show that if we set <b>connect_timeout</b> to <b>set_connect_timeout + increase + error_margin</b> then <em>request_time > connect_timeout + increase + error_margin</em> (2)</p> <p/> <p>Now, (1) and (2) can hold at the same time if then connect_timeout update was successful.</p>
 */
@Test @Ignore("Flaky, timeout jumps over the treshold") public void connect_timeout_override_changes_how_long_it_takes_for_a_connection_to_timeout(){
  WebTarget target=client.target(NON_ROUTABLE_ADDRESS);
  try {
    target.request().get(Response.class);
  }
 catch (  ProcessingException e) {
    if (e.getCause() instanceof HttpHostConnectException) {
      return;
    }
  }
  assertThatConnectionTimeoutFor(target).isLessThan(DEFAULT_CONNECT_TIMEOUT_IN_MILLIS + ERROR_MARGIN_IN_MILLIS);
  final int newTimeout=DEFAULT_CONNECT_TIMEOUT_IN_MILLIS + INCREASE_IN_MILLIS + ERROR_MARGIN_IN_MILLIS;
  final WebTarget newTarget=target.property(ClientProperties.CONNECT_TIMEOUT,newTimeout);
  assertThatConnectionTimeoutFor(newTarget).isGreaterThan(newTimeout);
}
