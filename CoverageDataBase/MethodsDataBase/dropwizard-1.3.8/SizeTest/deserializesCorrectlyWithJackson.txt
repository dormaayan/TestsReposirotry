@Test public void deserializesCorrectlyWithJackson() throws IOException {
  final ObjectMapper mapper=new ObjectMapper();
  assertThat(mapper.readValue("\"0 bytes\"",Size.class)).isEqualTo(Size.bytes(0L));
  assertThat(mapper.readValue("\"1 byte\"",Size.class)).isEqualTo(Size.bytes(1L));
  assertThat(mapper.readValue("\"2 bytes\"",Size.class)).isEqualTo(Size.bytes(2L));
  assertThat(mapper.readValue("\"0 kilobytes\"",Size.class)).isEqualTo(Size.kilobytes(0L));
  assertThat(mapper.readValue("\"1 kilobyte\"",Size.class)).isEqualTo(Size.kilobytes(1L));
  assertThat(mapper.readValue("\"2 kilobytes\"",Size.class)).isEqualTo(Size.kilobytes(2L));
  assertThat(mapper.readValue("\"0 megabytes\"",Size.class)).isEqualTo(Size.megabytes(0L));
  assertThat(mapper.readValue("\"1 megabyte\"",Size.class)).isEqualTo(Size.megabytes(1L));
  assertThat(mapper.readValue("\"2 megabytes\"",Size.class)).isEqualTo(Size.megabytes(2L));
  assertThat(mapper.readValue("\"0 gigabytes\"",Size.class)).isEqualTo(Size.gigabytes(0L));
  assertThat(mapper.readValue("\"1 gigabyte\"",Size.class)).isEqualTo(Size.gigabytes(1L));
  assertThat(mapper.readValue("\"2 gigabytes\"",Size.class)).isEqualTo(Size.gigabytes(2L));
  assertThat(mapper.readValue("\"0 terabytes\"",Size.class)).isEqualTo(Size.terabytes(0L));
  assertThat(mapper.readValue("\"1 terabytes\"",Size.class)).isEqualTo(Size.terabytes(1L));
  assertThat(mapper.readValue("\"2 terabytes\"",Size.class)).isEqualTo(Size.terabytes(2L));
}
