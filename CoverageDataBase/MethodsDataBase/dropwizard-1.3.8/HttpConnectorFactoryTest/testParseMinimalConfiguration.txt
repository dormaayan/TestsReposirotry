@Test public void testParseMinimalConfiguration() throws Exception {
  HttpConnectorFactory http=new YamlConfigurationFactory<>(HttpConnectorFactory.class,validator,objectMapper,"dw").build(new File(Resources.getResource("yaml/http-connector-minimal.yml").toURI()));
  assertThat(http.getPort()).isEqualTo(8080);
  assertThat(http.getBindHost()).isNull();
  assertThat(http.isInheritChannel()).isEqualTo(false);
  assertThat(http.getHeaderCacheSize()).isEqualTo(Size.bytes(512));
  assertThat(http.getOutputBufferSize()).isEqualTo(Size.kilobytes(32));
  assertThat(http.getMaxRequestHeaderSize()).isEqualTo(Size.kilobytes(8));
  assertThat(http.getMaxResponseHeaderSize()).isEqualTo(Size.kilobytes(8));
  assertThat(http.getInputBufferSize()).isEqualTo(Size.kilobytes(8));
  assertThat(http.getIdleTimeout()).isEqualTo(Duration.seconds(30));
  assertThat(http.getMinBufferPoolSize()).isEqualTo(Size.bytes(64));
  assertThat(http.getBufferPoolIncrement()).isEqualTo(Size.bytes(1024));
  assertThat(http.getMaxBufferPoolSize()).isEqualTo(Size.kilobytes(64));
  assertThat(http.getMinRequestDataRate()).isEqualTo(0L);
  assertThat(http.getAcceptorThreads()).isEmpty();
  assertThat(http.getSelectorThreads()).isEmpty();
  assertThat(http.getAcceptQueueSize()).isNull();
  assertThat(http.isReuseAddress()).isTrue();
  assertThat(http.getSoLingerTime()).isNull();
  assertThat(http.isUseServerHeader()).isFalse();
  assertThat(http.isUseDateHeader()).isTrue();
  assertThat(http.isUseForwardedHeaders()).isTrue();
  assertThat(http.getBlockingTimeout()).isNull();
  assertThat(http.getHttpCompliance()).isEqualTo(HttpCompliance.RFC7230);
}
