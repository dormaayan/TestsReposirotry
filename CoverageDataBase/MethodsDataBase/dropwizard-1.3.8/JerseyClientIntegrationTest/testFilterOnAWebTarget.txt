/** 
 * Test for ConnectorProvider idempotency
 */
@Test public void testFilterOnAWebTarget(){
  httpServer.createContext("/test",httpExchange -> {
    try {
      httpExchange.getResponseHeaders().add(HttpHeaders.CONTENT_TYPE,TEXT_PLAIN);
      httpExchange.sendResponseHeaders(200,0);
      httpExchange.getResponseBody().write("Hello World!".getBytes(StandardCharsets.UTF_8));
    }
  finally {
      httpExchange.close();
    }
  }
);
  httpServer.start();
  ExecutorService executor=Executors.newSingleThreadExecutor();
  Client jersey=new JerseyClientBuilder(new MetricRegistry()).using(executor,JSON_MAPPER).build("test-jersey-client");
  String uri="http://127.0.0.1:" + httpServer.getAddress().getPort() + "/test";
  WebTarget target=jersey.target(uri);
  target.register(new LoggingFeature());
  String firstResponse=target.request().buildGet().invoke().readEntity(String.class);
  assertThat(firstResponse).isEqualTo("Hello World!");
  String secondResponse=jersey.target(uri).request().buildGet().invoke().readEntity(String.class);
  assertThat(secondResponse).isEqualTo("Hello World!");
  executor.shutdown();
  jersey.close();
}
