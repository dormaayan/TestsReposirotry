@Test public void testShuntingYard7() throws Exception {
  String expression="2^-2!";
  Operator factorial=new Operator("!",1,true,Operator.PRECEDENCE_POWER + 1){
    @Override public double apply(    double... args){
      final int arg=(int)args[0];
      if ((double)arg != args[0]) {
        throw new IllegalArgumentException("Operand for factorial has to be an integer");
      }
      if (arg < 0) {
        throw new IllegalArgumentException("The operand of the factorial can not be less than zero");
      }
      double result=1;
      for (int i=1; i <= arg; i++) {
        result*=i;
      }
      return result;
    }
  }
;
  Map<String,Operator> userOperators=new HashMap<String,Operator>();
  userOperators.put("!",factorial);
  Token[] tokens=ShuntingYard.convertToRPN(expression,null,userOperators,null,true);
  assertNumberToken(tokens[0],2d);
  assertNumberToken(tokens[1],2d);
  assertOperatorToken(tokens[2],"!",1,Operator.PRECEDENCE_POWER + 1);
  assertOperatorToken(tokens[3],"-",1,Operator.PRECEDENCE_UNARY_MINUS);
  assertOperatorToken(tokens[4],"^",2,Operator.PRECEDENCE_POWER);
}
