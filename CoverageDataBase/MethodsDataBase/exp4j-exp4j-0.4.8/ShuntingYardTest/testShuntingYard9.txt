@Test public void testShuntingYard9() throws Exception {
  Operator reciprocal=new Operator("$",1,true,Operator.PRECEDENCE_DIVISION){
    @Override public double apply(    final double... args){
      if (args[0] == 0d) {
        throw new ArithmeticException("Division by zero!");
      }
      return 1d / args[0];
    }
  }
;
  Map<String,Operator> userOperators=new HashMap<String,Operator>();
  userOperators.put("$",reciprocal);
  Token[] tokens=ShuntingYard.convertToRPN("1$",null,userOperators,null,true);
  assertNumberToken(tokens[0],1d);
  assertOperatorToken(tokens[1],"$",1,Operator.PRECEDENCE_DIVISION);
}
