@Test public void testOperators1() throws Exception {
  Operator factorial=new Operator("!",1,true,Operator.PRECEDENCE_POWER + 1){
    @Override public double apply(    double... args){
      final int arg=(int)args[0];
      if ((double)arg != args[0]) {
        throw new IllegalArgumentException("Operand for factorial has to be an integer");
      }
      if (arg < 0) {
        throw new IllegalArgumentException("The operand of the factorial can not be less than zero");
      }
      double result=1;
      for (int i=1; i <= arg; i++) {
        result*=i;
      }
      return result;
    }
  }
;
  Expression e=new ExpressionBuilder("1!").operator(factorial).build();
  assertTrue(1d == e.evaluate());
  e=new ExpressionBuilder("2!").operator(factorial).build();
  assertTrue(2d == e.evaluate());
  e=new ExpressionBuilder("3!").operator(factorial).build();
  assertTrue(6d == e.evaluate());
  e=new ExpressionBuilder("4!").operator(factorial).build();
  assertTrue(24d == e.evaluate());
  e=new ExpressionBuilder("5!").operator(factorial).build();
  assertTrue(120d == e.evaluate());
  e=new ExpressionBuilder("11!").operator(factorial).build();
  assertTrue(39916800d == e.evaluate());
}
