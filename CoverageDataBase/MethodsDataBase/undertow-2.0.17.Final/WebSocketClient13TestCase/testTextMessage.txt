@Test public void testTextMessage() throws Exception {
  final WebSocketChannel webSocketChannel=WebSocketClient.connectionBuilder(worker,DefaultServer.getBufferPool(),new URI(DefaultServer.getDefaultServerURL())).connect().get();
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicReference<String> result=new AtomicReference<>();
  webSocketChannel.getReceiveSetter().set(new AbstractReceiveListener(){
    @Override protected void onFullTextMessage(    WebSocketChannel channel,    BufferedTextMessage message) throws IOException {
      String data=message.getData();
      result.set(data);
      latch.countDown();
    }
    @Override protected void onError(    WebSocketChannel channel,    Throwable error){
      super.onError(channel,error);
      error.printStackTrace();
      latch.countDown();
    }
  }
);
  webSocketChannel.resumeReceives();
  StreamSinkFrameChannel sendChannel=webSocketChannel.send(WebSocketFrameType.TEXT);
  new StringWriteChannelListener("Hello World").setup(sendChannel);
  latch.await(10,TimeUnit.SECONDS);
  Assert.assertEquals("Hello World",result.get());
  webSocketChannel.sendClose();
}
