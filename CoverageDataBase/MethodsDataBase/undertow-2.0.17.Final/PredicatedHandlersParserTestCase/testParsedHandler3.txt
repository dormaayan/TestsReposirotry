@Test public void testParsedHandler3(){
  String value="allowed-methods(GET)";
  List<PredicatedHandler> ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  AllowedMethodsHandler handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"))),handler.getAllowedMethods());
  value="allowed-methods(methods=GET)";
  ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"))),handler.getAllowedMethods());
  value="allowed-methods(methods={GET})";
  ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"))),handler.getAllowedMethods());
  value="allowed-methods({GET})";
  ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"))),handler.getAllowedMethods());
  value="allowed-methods({GET, POST})";
  ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"),HttpString.tryFromString("POST"))),handler.getAllowedMethods());
  value="allowed-methods(methods={GET, POST})";
  ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"),HttpString.tryFromString("POST"))),handler.getAllowedMethods());
  value="allowed-methods(GET, POST)";
  ret=PredicatedHandlersParser.parse(value,getClass().getClassLoader());
  Assert.assertEquals(1,ret.size());
  handler=(AllowedMethodsHandler)ret.get(0).getHandler().wrap(ResponseCodeHandler.HANDLE_200);
  Assert.assertEquals(new HashSet<>(Arrays.asList(HttpString.tryFromString("GET"),HttpString.tryFromString("POST"))),handler.getAllowedMethods());
}
