@Test @Ignore("sometimes the client attempts to re-use the same connection after the failure, but the server has already closed it") public void testMaxRequestSizeFixedLengthRequest() throws IOException {
  connection=null;
  OptionMap existing=DefaultServer.getUndertowOptions();
  HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/path");
  post.setHeader(HttpHeaders.CONNECTION,"close");
  TestHttpClient client=new TestHttpClient();
  try {
    generateMessage(1);
    post.setEntity(new StringEntity(message));
    DefaultServer.setUndertowOptions(OptionMap.create(UndertowOptions.MAX_ENTITY_SIZE,3L));
    HttpResponse result=client.execute(post);
    Assert.assertEquals(StatusCodes.INTERNAL_SERVER_ERROR,result.getStatusLine().getStatusCode());
    HttpClientUtils.readResponse(result);
    connection=null;
    DefaultServer.setUndertowOptions(OptionMap.create(UndertowOptions.MAX_ENTITY_SIZE,(long)message.length()));
    result=client.execute(post);
    Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
    HttpClientUtils.readResponse(result);
  }
  finally {
    DefaultServer.setUndertowOptions(existing);
    client.getConnectionManager().shutdown();
  }
}
