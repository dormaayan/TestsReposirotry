@Test public void testChunkedRequestNotConsumed() throws IOException {
  HttpPost post=new HttpPost(DefaultServer.getDefaultServerURL() + "/path");
  TestHttpClient client=new TestHttpClient();
  try {
    final Random random=new Random();
    final int seed=random.nextInt();
    System.out.print("Using Seed " + seed);
    random.setSeed(seed);
    for (int i=0; i < 3; ++i) {
      post.setEntity(new StringEntity(""){
        @Override public long getContentLength(){
          return -1;
        }
        @Override public boolean isChunked(){
          return true;
        }
        @Override public void writeTo(        OutputStream outstream) throws IOException {
          outstream.flush();
          try {
            Thread.sleep(100);
          }
 catch (          InterruptedException e) {
          }
          outstream.write(MESSAGE.getBytes(StandardCharsets.US_ASCII));
        }
      }
);
      HttpResponse result=client.execute(post);
      Assert.assertEquals(StatusCodes.OK,result.getStatusLine().getStatusCode());
      HttpClientUtils.readResponse(result);
    }
  }
  finally {
    client.getConnectionManager().shutdown();
  }
}
