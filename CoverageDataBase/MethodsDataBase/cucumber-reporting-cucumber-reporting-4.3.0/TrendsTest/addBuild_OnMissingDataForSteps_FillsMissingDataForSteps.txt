@Test public void addBuild_OnMissingDataForSteps_FillsMissingDataForSteps(){
  Trends trends=new Trends();
  Reportable result=ReportableBuilder.buildSample();
  trends.addBuild("buildName",result);
  final String[] buildNumbers=new String[]{"a","b","e"};
  Deencapsulation.setField(trends,"buildNumbers",buildNumbers);
  trends.addBuild("the build!",result);
  assertThat(trends.getBuildNumbers()).hasSize(buildNumbers.length + 1).containsExactly("a","b","e","the build!");
  assertThat(trends.getPassedFeatures()).hasSize(buildNumbers.length + 1).containsExactly(0,0,2,2);
  assertThat(trends.getPassedScenarios()).hasSize(buildNumbers.length + 1).containsExactly(0,0,7,7);
  assertThat(trends.getPassedSteps()).hasSize(buildNumbers.length + 1).containsExactly(0,0,17,17);
  assertThat(trends.getSkippedSteps()).hasSize(buildNumbers.length + 1).containsExactly(0,0,23,23);
  assertThat(trends.getPendingSteps()).hasSize(buildNumbers.length + 1).containsExactly(0,0,29,29);
  assertThat(trends.getUndefinedSteps()).hasSize(buildNumbers.length + 1).containsExactly(0,0,31,31);
  assertThat(trends.getDurations()).hasSize(buildNumbers.length + 1).containsExactly(-1L,-1L,3206126182390L,3206126182390L);
}
