@Test public void handlesUnclosedScriptAtEof(){
  assertEquals("Data",Jsoup.parse("<script>Data").select("script").first().data());
  assertEquals("Data<",Jsoup.parse("<script>Data<").select("script").first().data());
  assertEquals("Data</sc",Jsoup.parse("<script>Data</sc").select("script").first().data());
  assertEquals("Data</-sc",Jsoup.parse("<script>Data</-sc").select("script").first().data());
  assertEquals("Data</sc-",Jsoup.parse("<script>Data</sc-").select("script").first().data());
  assertEquals("Data</sc--",Jsoup.parse("<script>Data</sc--").select("script").first().data());
  assertEquals("Data",Jsoup.parse("<script>Data</script>").select("script").first().data());
  assertEquals("Data</script",Jsoup.parse("<script>Data</script").select("script").first().data());
  assertEquals("Data",Jsoup.parse("<script>Data</script ").select("script").first().data());
  assertEquals("Data",Jsoup.parse("<script>Data</script n").select("script").first().data());
  assertEquals("Data",Jsoup.parse("<script>Data</script n=").select("script").first().data());
  assertEquals("Data",Jsoup.parse("<script>Data</script n=\"").select("script").first().data());
  assertEquals("Data",Jsoup.parse("<script>Data</script n=\"p").select("script").first().data());
}
