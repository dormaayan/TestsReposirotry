/** 
 * Test a complex real example found at http://blogs.msdn.com/b/astebner/archive/2005/12/13/503471.aspx The command line is so weird that it even falls apart under Windows
 * @throws Exception the test failed
 */
@Test public void testExec36_2() throws Exception {
  String expected;
  if (OS.isFamilyWindows()) {
    expected="dotnetfx.exe\n" + "/q:a\n" + "/c:\"install.exe /l \"\"\\Documents and Settings\\myusername\\Local Settings\\Temp\\netfx.log\"\" /q\"";
  }
 else   if (OS.isFamilyUnix()) {
    expected="dotnetfx.exe\n" + "/q:a\n" + "/c:\"install.exe /l \"\"/Documents and Settings/myusername/Local Settings/Temp/netfx.log\"\" /q\"";
  }
 else {
    System.err.println("The test 'testExec36_3' does not support the following OS : " + System.getProperty("os.name"));
    return;
  }
  CommandLine cmdl;
  final File file=new File("/Documents and Settings/myusername/Local Settings/Temp/netfx.log");
  final Map<String,File> map=new HashMap<String,File>();
  map.put("FILE",file);
  cmdl=new CommandLine(printArgsScript);
  cmdl.setSubstitutionMap(map);
  cmdl.addArgument("dotnetfx.exe",false);
  cmdl.addArgument("/q:a",false);
  cmdl.addArgument("/c:\"install.exe /l \"\"${FILE}\"\" /q\"",false);
  final int exitValue=exec.execute(cmdl);
  final String result=baos.toString().trim();
  assertFalse(exec.isFailure(exitValue));
  if (OS.isFamilyUnix()) {
    assertEquals(expected,result);
  }
}
