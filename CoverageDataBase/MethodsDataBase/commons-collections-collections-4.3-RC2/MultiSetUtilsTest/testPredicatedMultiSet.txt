/** 
 * Tests  {@link MultiSetUtils#predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)}.
 */
@Test public void testPredicatedMultiSet(){
  final Predicate<String> predicate=new Predicate<String>(){
    @Override public boolean evaluate(    final String object){
      return object.length() == 1;
    }
  }
;
  final MultiSet<String> predicated=MultiSetUtils.predicatedMultiSet(multiSet,predicate);
  assertEquals(multiSet.size(),predicated.size());
  assertEquals(multiSet.getCount("a"),predicated.getCount("a"));
  try {
    MultiSetUtils.predicatedMultiSet(null,predicate);
    fail("Expecting NPE");
  }
 catch (  final NullPointerException e) {
  }
  try {
    MultiSetUtils.predicatedMultiSet(multiSet,null);
    fail("Expecting NPE");
  }
 catch (  final NullPointerException e) {
  }
  try {
    MultiSetUtils.predicatedMultiSet(multiSet,new Predicate<String>(){
      @Override public boolean evaluate(      final String object){
        return object.equals("a");
      }
    }
);
    fail("Predicate is violated for all elements not being 'a'");
  }
 catch (  final IllegalArgumentException iae) {
  }
}
