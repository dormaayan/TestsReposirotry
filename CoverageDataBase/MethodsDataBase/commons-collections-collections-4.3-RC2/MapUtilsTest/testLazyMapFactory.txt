@Test public void testLazyMapFactory(){
  final Factory<Integer> factory=FactoryUtils.constantFactory(Integer.valueOf(5));
  Map<Object,Object> map=MapUtils.lazyMap(new HashMap<>(),factory);
  assertTrue(map instanceof LazyMap);
  try {
    map=MapUtils.lazyMap(new HashMap<>(),(Factory<Object>)null);
    fail("Expecting NullPointerException for null factory");
  }
 catch (  final NullPointerException e) {
  }
  try {
    map=MapUtils.lazyMap((Map<Object,Object>)null,factory);
    fail("Expecting NullPointerException for null map");
  }
 catch (  final NullPointerException e) {
  }
  final Transformer<Object,Integer> transformer=TransformerUtils.asTransformer(factory);
  map=MapUtils.lazyMap(new HashMap<>(),transformer);
  assertTrue(map instanceof LazyMap);
  try {
    map=MapUtils.lazyMap(new HashMap<>(),(Transformer<Object,Object>)null);
    fail("Expecting NullPointerException for null transformer");
  }
 catch (  final NullPointerException e) {
  }
  try {
    map=MapUtils.lazyMap((Map<Object,Object>)null,transformer);
    fail("Expecting NullPointerException for null map");
  }
 catch (  final NullPointerException e) {
  }
}
