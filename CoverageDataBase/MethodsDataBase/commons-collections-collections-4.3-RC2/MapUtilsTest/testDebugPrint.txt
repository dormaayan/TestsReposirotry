@Test public void testDebugPrint(){
  final ByteArrayOutputStream out=new ByteArrayOutputStream();
  final PrintStream outPrint=new PrintStream(out);
  final String LABEL="Print Map";
  final String INDENT="    ";
  outPrint.println(LABEL + " = ");
  outPrint.println("{");
  outPrint.println(INDENT + "0 = A " + String.class.getName());
  outPrint.println(INDENT + "1 = ");
  outPrint.println(INDENT + "{");
  outPrint.println(INDENT + INDENT + "2 = B "+ String.class.getName());
  outPrint.println(INDENT + INDENT + "3 = C "+ String.class.getName());
  outPrint.println(INDENT + "} " + TreeMap.class.getName());
  outPrint.println(INDENT + "7 = (this Map) " + TreeMap.class.getName());
  outPrint.println("} " + TreeMap.class.getName());
  final String EXPECTED_OUT=out.toString();
  out.reset();
  final Map<Integer,String> inner=new TreeMap<>();
  inner.put(2,"B");
  inner.put(3,"C");
  final Map<Integer,Object> outer=new TreeMap<>();
  outer.put(1,inner);
  outer.put(0,"A");
  outer.put(7,outer);
  MapUtils.debugPrint(outPrint,"Print Map",outer);
  assertEquals(EXPECTED_OUT,out.toString());
}
