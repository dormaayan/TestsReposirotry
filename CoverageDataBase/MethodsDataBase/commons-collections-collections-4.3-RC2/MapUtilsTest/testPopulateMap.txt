@Test public void testPopulateMap(){
  final List<String> list=new ArrayList<>();
  list.add("1");
  list.add("3");
  list.add("5");
  list.add("7");
  list.add("2");
  list.add("4");
  list.add("6");
  Map<Object,Object> map=new HashMap<>();
  MapUtils.populateMap(map,list,TransformedCollectionTest.STRING_TO_INTEGER_TRANSFORMER);
  assertEquals(list.size(),map.size());
  for (int i=0; i < list.size(); i++) {
    assertEquals(true,map.containsKey(Integer.valueOf(list.get(i))));
    assertEquals(false,map.containsKey(list.get(i)));
    assertEquals(true,map.containsValue(list.get(i)));
    assertEquals(list.get(i),map.get(Integer.valueOf(list.get(i))));
  }
  map=new HashMap<>();
  MapUtils.populateMap(map,list,TransformedCollectionTest.STRING_TO_INTEGER_TRANSFORMER,TransformedCollectionTest.STRING_TO_INTEGER_TRANSFORMER);
  assertEquals(list.size(),map.size());
  for (int i=0; i < list.size(); i++) {
    assertEquals(true,map.containsKey(Integer.valueOf(list.get(i))));
    assertEquals(false,map.containsKey(list.get(i)));
    assertEquals(true,map.containsValue(Integer.valueOf(list.get(i))));
    assertEquals(Integer.valueOf(list.get(i)),map.get(Integer.valueOf(list.get(i))));
  }
}
