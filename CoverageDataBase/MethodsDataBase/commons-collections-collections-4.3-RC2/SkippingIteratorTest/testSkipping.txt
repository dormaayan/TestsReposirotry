/** 
 * Test a decorated iterator bounded such that the first element returned is at an index greater its first element, and the last element returned is at an index less than its last element.
 */
@Test public void testSkipping(){
  final Iterator<E> iter=new SkippingIterator<>(testList.iterator(),2);
  assertTrue(iter.hasNext());
  assertEquals("c",iter.next());
  assertTrue(iter.hasNext());
  assertEquals("d",iter.next());
  assertTrue(iter.hasNext());
  assertEquals("e",iter.next());
  assertTrue(iter.hasNext());
  assertEquals("f",iter.next());
  assertTrue(iter.hasNext());
  assertEquals("g",iter.next());
  assertFalse(iter.hasNext());
  try {
    iter.next();
    fail("Expected NoSuchElementException.");
  }
 catch (  final NoSuchElementException nsee) {
  }
}
