@Test public void testManual(){
  final FilterListIterator<Integer> filtered=new FilterListIterator<>(list.listIterator(),threePred);
  assertEquals(Integer.valueOf(0),filtered.next());
  assertEquals(Integer.valueOf(3),filtered.next());
  assertEquals(Integer.valueOf(6),filtered.next());
  assertEquals(Integer.valueOf(9),filtered.next());
  assertEquals(Integer.valueOf(12),filtered.next());
  assertEquals(Integer.valueOf(15),filtered.next());
  assertEquals(Integer.valueOf(18),filtered.next());
  assertEquals(Integer.valueOf(18),filtered.previous());
  assertEquals(Integer.valueOf(15),filtered.previous());
  assertEquals(Integer.valueOf(12),filtered.previous());
  assertEquals(Integer.valueOf(9),filtered.previous());
  assertEquals(Integer.valueOf(6),filtered.previous());
  assertEquals(Integer.valueOf(3),filtered.previous());
  assertEquals(Integer.valueOf(0),filtered.previous());
  assertTrue(!filtered.hasPrevious());
  assertEquals(Integer.valueOf(0),filtered.next());
  assertEquals(Integer.valueOf(3),filtered.next());
  assertEquals(Integer.valueOf(6),filtered.next());
  assertEquals(Integer.valueOf(9),filtered.next());
  assertEquals(Integer.valueOf(12),filtered.next());
  assertEquals(Integer.valueOf(15),filtered.next());
  assertEquals(Integer.valueOf(18),filtered.next());
  assertTrue(!filtered.hasNext());
  assertEquals(Integer.valueOf(18),filtered.previous());
  assertEquals(Integer.valueOf(15),filtered.previous());
  assertEquals(Integer.valueOf(12),filtered.previous());
  assertEquals(Integer.valueOf(9),filtered.previous());
  assertEquals(Integer.valueOf(6),filtered.previous());
  assertEquals(Integer.valueOf(3),filtered.previous());
  assertEquals(Integer.valueOf(0),filtered.previous());
  assertEquals(Integer.valueOf(0),filtered.next());
  assertEquals(Integer.valueOf(0),filtered.previous());
  assertEquals(Integer.valueOf(0),filtered.next());
  assertEquals(Integer.valueOf(3),filtered.next());
  assertEquals(Integer.valueOf(6),filtered.next());
  assertEquals(Integer.valueOf(6),filtered.previous());
  assertEquals(Integer.valueOf(3),filtered.previous());
  assertEquals(Integer.valueOf(3),filtered.next());
  assertEquals(Integer.valueOf(6),filtered.next());
  assertEquals(Integer.valueOf(9),filtered.next());
  assertEquals(Integer.valueOf(12),filtered.next());
  assertEquals(Integer.valueOf(15),filtered.next());
  assertEquals(Integer.valueOf(15),filtered.previous());
  assertEquals(Integer.valueOf(12),filtered.previous());
  assertEquals(Integer.valueOf(9),filtered.previous());
}
