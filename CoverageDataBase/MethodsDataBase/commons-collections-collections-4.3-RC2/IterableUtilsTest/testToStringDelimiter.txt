@Test public void testToStringDelimiter(){
  final Transformer<Integer,String> transformer=new Transformer<Integer,String>(){
    @Override public String transform(    final Integer input){
      return new Integer(input * 2).toString();
    }
  }
;
  String result=IterableUtils.toString(iterableA,transformer,"","","");
  assertEquals("2446668888",result);
  result=IterableUtils.toString(iterableA,transformer,",","","");
  assertEquals("2,4,4,6,6,6,8,8,8,8",result);
  result=IterableUtils.toString(iterableA,transformer,"","[","]");
  assertEquals("[2446668888]",result);
  result=IterableUtils.toString(iterableA,transformer,",","[","]");
  assertEquals("[2,4,4,6,6,6,8,8,8,8]",result);
  result=IterableUtils.toString(iterableA,transformer,",","[[","]]");
  assertEquals("[[2,4,4,6,6,6,8,8,8,8]]",result);
  result=IterableUtils.toString(iterableA,transformer,",,","[","]");
  assertEquals("[2,,4,,4,,6,,6,,6,,8,,8,,8,,8]",result);
  result=IterableUtils.toString(iterableA,transformer,",,","((","))");
  assertEquals("((2,,4,,4,,6,,6,,6,,8,,8,,8,,8))",result);
  result=IterableUtils.toString(new ArrayList<Integer>(),transformer,"","(",")");
  assertEquals("()",result);
  result=IterableUtils.toString(new ArrayList<Integer>(),transformer,"","","");
  assertEquals("",result);
}
