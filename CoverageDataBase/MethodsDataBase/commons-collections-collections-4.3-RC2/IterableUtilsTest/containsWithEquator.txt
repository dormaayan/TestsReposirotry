@Test public void containsWithEquator(){
  final List<String> base=new ArrayList<>();
  base.add("AC");
  base.add("BB");
  base.add("CA");
  final Equator<String> secondLetterEquator=new Equator<String>(){
    @Override public boolean equate(    final String o1,    final String o2){
      return o1.charAt(1) == o2.charAt(1);
    }
    @Override public int hash(    final String o){
      return o.charAt(1);
    }
  }
;
  assertFalse(base.contains("CC"));
  assertTrue(IterableUtils.contains(base,"AC",secondLetterEquator));
  assertTrue(IterableUtils.contains(base,"CC",secondLetterEquator));
  assertFalse(IterableUtils.contains(base,"CX",secondLetterEquator));
  assertFalse(IterableUtils.contains(null,null,secondLetterEquator));
  try {
    IterableUtils.contains(base,"AC",null);
    fail("expecting NullPointerException");
  }
 catch (  final NullPointerException npe) {
  }
}
