/** 
 * Test empty map iterator
 */
@Test @SuppressWarnings("unchecked") public void testEmptyOrderedIterator(){
  assertSame(EmptyOrderedIterator.INSTANCE,IteratorUtils.EMPTY_ORDERED_ITERATOR);
  assertEquals(true,IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof Iterator);
  assertEquals(true,IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof OrderedIterator);
  assertEquals(true,IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof ResettableIterator);
  assertEquals(false,IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof ListIterator);
  assertEquals(false,IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof MapIterator);
  assertEquals(false,IteratorUtils.EMPTY_ORDERED_ITERATOR.hasNext());
  assertEquals(false,IteratorUtils.EMPTY_ORDERED_ITERATOR.hasPrevious());
  ((ResettableIterator<Object>)IteratorUtils.EMPTY_ORDERED_ITERATOR).reset();
  assertSame(IteratorUtils.EMPTY_ORDERED_ITERATOR,IteratorUtils.EMPTY_ORDERED_ITERATOR);
  assertSame(IteratorUtils.EMPTY_ORDERED_ITERATOR,IteratorUtils.emptyOrderedIterator());
  try {
    IteratorUtils.EMPTY_ORDERED_ITERATOR.next();
    fail();
  }
 catch (  final NoSuchElementException ex) {
  }
  try {
    IteratorUtils.EMPTY_ORDERED_ITERATOR.previous();
    fail();
  }
 catch (  final NoSuchElementException ex) {
  }
  try {
    IteratorUtils.EMPTY_ORDERED_ITERATOR.remove();
    fail();
  }
 catch (  final IllegalStateException ex) {
  }
}
