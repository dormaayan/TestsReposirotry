/** 
 * Test empty map iterator
 */
@Test @SuppressWarnings("unchecked") public void testEmptyMapIterator(){
  assertSame(EmptyMapIterator.INSTANCE,IteratorUtils.EMPTY_MAP_ITERATOR);
  assertEquals(true,IteratorUtils.EMPTY_MAP_ITERATOR instanceof Iterator);
  assertEquals(true,IteratorUtils.EMPTY_MAP_ITERATOR instanceof MapIterator);
  assertEquals(true,IteratorUtils.EMPTY_MAP_ITERATOR instanceof ResettableIterator);
  assertEquals(false,IteratorUtils.EMPTY_MAP_ITERATOR instanceof ListIterator);
  assertEquals(false,IteratorUtils.EMPTY_MAP_ITERATOR instanceof OrderedIterator);
  assertEquals(false,IteratorUtils.EMPTY_MAP_ITERATOR instanceof OrderedMapIterator);
  assertEquals(false,IteratorUtils.EMPTY_MAP_ITERATOR.hasNext());
  ((ResettableIterator<Object>)IteratorUtils.EMPTY_MAP_ITERATOR).reset();
  assertSame(IteratorUtils.EMPTY_MAP_ITERATOR,IteratorUtils.EMPTY_MAP_ITERATOR);
  assertSame(IteratorUtils.EMPTY_MAP_ITERATOR,IteratorUtils.emptyMapIterator());
  try {
    IteratorUtils.EMPTY_MAP_ITERATOR.next();
    fail();
  }
 catch (  final NoSuchElementException ex) {
  }
  try {
    IteratorUtils.EMPTY_MAP_ITERATOR.remove();
    fail();
  }
 catch (  final IllegalStateException ex) {
  }
  try {
    IteratorUtils.EMPTY_MAP_ITERATOR.getKey();
    fail();
  }
 catch (  final IllegalStateException ex) {
  }
  try {
    IteratorUtils.EMPTY_MAP_ITERATOR.getValue();
    fail();
  }
 catch (  final IllegalStateException ex) {
  }
  try {
    IteratorUtils.EMPTY_MAP_ITERATOR.setValue(null);
    fail();
  }
 catch (  final IllegalStateException ex) {
  }
}
