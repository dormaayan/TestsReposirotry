@Test public void transform(){
  final Transformer<Integer,Integer> squared=new Transformer<Integer,Integer>(){
    @Override public Integer transform(    final Integer object){
      return object * object;
    }
  }
;
  List<Integer> result=FluentIterable.of(iterableA).transform(squared).toList();
  assertEquals(10,result.size());
  assertEquals(Arrays.asList(1,4,4,9,9,9,16,16,16,16),result);
  result=FluentIterable.of(emptyIterable).transform(squared).toList();
  assertEquals(0,result.size());
  try {
    FluentIterable.of(iterableA).transform(null).toList();
    fail("expecting NullPointerException");
  }
 catch (  final NullPointerException npe) {
  }
}
