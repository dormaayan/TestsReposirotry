@Test public void containsAnyInCollection(){
  final Collection<String> empty=new ArrayList<>(0);
  final Collection<String> one=new ArrayList<>(1);
  one.add("1");
  final Collection<String> two=new ArrayList<>(1);
  two.add("2");
  final Collection<String> three=new ArrayList<>(1);
  three.add("3");
  final Collection<String> odds=new ArrayList<>(2);
  odds.add("1");
  odds.add("3");
  assertTrue("containsAny({1},{1,3}) should return true.",CollectionUtils.containsAny(one,odds));
  assertTrue("containsAny({1,3},{1}) should return true.",CollectionUtils.containsAny(odds,one));
  assertTrue("containsAny({3},{1,3}) should return true.",CollectionUtils.containsAny(three,odds));
  assertTrue("containsAny({1,3},{3}) should return true.",CollectionUtils.containsAny(odds,three));
  assertTrue("containsAny({2},{2}) should return true.",CollectionUtils.containsAny(two,two));
  assertTrue("containsAny({1,3},{1,3}) should return true.",CollectionUtils.containsAny(odds,odds));
  assertTrue("containsAny({2},{1,3}) should return false.",!CollectionUtils.containsAny(two,odds));
  assertTrue("containsAny({1,3},{2}) should return false.",!CollectionUtils.containsAny(odds,two));
  assertTrue("containsAny({1},{3}) should return false.",!CollectionUtils.containsAny(one,three));
  assertTrue("containsAny({3},{1}) should return false.",!CollectionUtils.containsAny(three,one));
  assertTrue("containsAny({1,3},{}) should return false.",!CollectionUtils.containsAny(odds,empty));
  assertTrue("containsAny({},{1,3}) should return false.",!CollectionUtils.containsAny(empty,odds));
  assertTrue("containsAny({},{}) should return false.",!CollectionUtils.containsAny(empty,empty));
}
