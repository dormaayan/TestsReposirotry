/** 
 * Compare the current serialized form of the Comparator against the canonical version in SVN.
 */
@SuppressWarnings("unchecked") @Test public void testComparatorCompatibility() throws IOException, ClassNotFoundException {
  if (!skipSerializedCanonicalTests()) {
    Comparator<T> comparator=null;
    try {
      comparator=(Comparator<T>)readExternalFormFromDisk(getCanonicalComparatorName(makeObject()));
    }
 catch (    final FileNotFoundException exception) {
      final boolean autoCreateSerialized=false;
      if (autoCreateSerialized) {
        comparator=makeObject();
        final String fileName=getCanonicalComparatorName(comparator);
        writeExternalFormToDisk((Serializable)comparator,fileName);
        fail("Serialized form could not be found.  A serialized version " + "has now been written (and should be added to CVS): " + fileName);
      }
 else {
        fail("The Serialized form could be located to test serialization " + "compatibility: " + exception.getMessage());
      }
    }
    final List<T> randomList=getComparableObjectsOrdered();
    reverseObjects(randomList);
    sortObjects(randomList,comparator);
    final List<T> orderedList=getComparableObjectsOrdered();
    assertTrue("Comparator did not reorder the List correctly",orderedList.equals(randomList));
  }
}
